package com.admin.model;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

import com.admin.pageModel.User;
import com.admin.util.DateUtils;

@Entity
@Table(name = "t_actualGoldBulletin")
@DynamicInsert(true)
@DynamicUpdate(true)
public class ActualGoldBulletin implements java.io.Serializable {
	@Id
	@Column(name = "ID", nullable = false, length = 50)
	private String id;
	// 用户名
	@Column(name = "USERID", nullable = true, length = 200)
	private String userId;
	// 用户名
	@Column(name = "USERNAME", nullable = true, length = 200)
	private String userName;
	// 播报日期
	@Column(name = "BROADCASTTIME", nullable = true, length = 200)
	private String broadcastTime;
	// 播报事项
	@Column(name = "BROADCASTEVENTS", nullable = true, length = 2000)
	private String broadcastEvents;

	public ActualGoldBulletin() {
	}

	public ActualGoldBulletin(String id) {
		this.id = id;
	}

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getUserId() {
		return userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	public String getBroadcastTime() {
		return broadcastTime;
	}

	public void setBroadcastTime(String broadcastTime) {
		this.broadcastTime = broadcastTime;
	}

	public String getBroadcastEvents() {
		return broadcastEvents;
	}

	public void setBroadcastEvents(String broadcastEvents) {
		this.broadcastEvents = broadcastEvents;
	}

	public String getUserName() {
		return userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	public static void main(String[] args) {
		// 当天下午三点
		String san = DateUtils.DateToStr("yyyy-MM-dd 15:00:00", new Date());
		//System.out.println(san);

		// 第二天的9点
		String jiu = DateUtils
				.getPlusDays("yyyy-MM-dd 09:00:00", new Date(), 1);
		//System.out.println(jiu);

		if (!(DateUtils.strToDate(san, DateUtils.YYYY_MM_DD_HH_MM_SS).getTime() > new Date()
				.getTime() && new Date().getTime() < DateUtils.strToDate(jiu,
				DateUtils.YYYY_MM_DD_HH_MM_SS).getTime())) {
			// ss
		}
	}
}
