package com.admin.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.persistence.Column;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.GmlcjhDaoI;
import com.admin.model.Gmlcjh;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.service.GmlcjhServiceI;

@Service
public class GmlcjhServiceImpl implements GmlcjhServiceI {

	@Autowired
	private GmlcjhDaoI gmlcjhDao;

	@Override
	public DataGrid dataGrid(Gmlcjh gmlcjh, PageHelper ph) {
		DataGrid dg = new DataGrid();
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from Gmlcjh t ";
		List<Gmlcjh> l = gmlcjhDao.find(hql + whereHql(gmlcjh, params)
				+ orderHql(ph), params, ph.getPage(), ph.getRows());
		dg.setRows(l);
		dg.setTotal(gmlcjhDao.count(
				"select count(*) " + hql + whereHql(gmlcjh, params), params));
		return dg;
	}

	private String whereHql(Gmlcjh gmlcjh, Map<String, Object> params) {
		String hql = "";
		if (gmlcjh != null) {
			hql += " where 1=1 ";
			// 购买人
			if (StringUtils.isNotBlank(gmlcjh.getGmrId())) {
				hql += " and t.gmrId like :gmrId";
				params.put("gmrId", "%%" + gmlcjh.getGmrId() + "%%");
			}
			// 购买姓名
			if (StringUtils.isNotBlank(gmlcjh.getGmrXm())) {
				hql += " and t.gmrXm like :gmrXm";
				params.put("gmrXm", "%%" + gmlcjh.getGmrXm() + "%%");
			}
			// 购买价格
			if (StringUtils.isNotBlank(gmlcjh.getGmjg())) {
				hql += " and t.gmjg like :gmjg";
				params.put("gmjg", "%%" + gmlcjh.getGmjg() + "%%");
			}
			// 购买理财计划id
			if (StringUtils.isNotBlank(gmlcjh.getLcjhId())) {
				hql += " and t.lcjhId like :lcjhId";
				params.put("lcjhId", "%%" + gmlcjh.getLcjhId() + "%%");
			}
			// 购买时间
			if (StringUtils.isNotBlank(gmlcjh.getGmsj())) {
				hql += " and t.gmsj like :gmsj";
				params.put("gmsj", "%%" + gmlcjh.getGmsj() + "%%");
			}
			// 理财计划标题
			if (StringUtils.isNotBlank(gmlcjh.getLcjhbt())) {
				hql += " and t.lcjhbt like :lcjhbt";
				params.put("lcjhbt", "%%" + gmlcjh.getLcjhbt() + "%%");
			}
			// 发布人名称
			if (StringUtils.isNotBlank(gmlcjh.getLcjhfbr())) {
				hql += " and t.lcjhfbr like :lcjhfbr";
				params.put("lcjhfbr", "%%" + gmlcjh.getLcjhfbr() + "%%");
			}
		}
		return hql;
	}

	private String orderHql(PageHelper ph) {
		String orderString = "";
		if (ph.getSort() != null && ph.getOrder() != null) {
			orderString = " order by t." + ph.getSort() + " " + ph.getOrder();
		}
		return orderString;
	}

	@Override
	public void add(Gmlcjh gmlcjh) throws Exception {
		Gmlcjh u = new Gmlcjh();
		BeanUtils.copyProperties(gmlcjh, u);
		gmlcjhDao.save(gmlcjh);
	}

	@Override
	public Gmlcjh get(String id) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("id", id);
		Gmlcjh t = gmlcjhDao.get(
				"select distinct t from Gmlcjh t where t.id = :id", params);
		return t;
	}

	@Override
	public void edit(Gmlcjh gmlcjh) throws Exception {
		gmlcjhDao.update(gmlcjh);
	}

	@Override
	public void delete(String id) {
		gmlcjhDao.delete(gmlcjhDao.get(Gmlcjh.class, id));
	}

	@Override
	public List<Gmlcjh> gmlcjhList() {
		List<Gmlcjh> t = gmlcjhDao.find("from Gmlcjh t ");
		return t;
	}

	@Override
	public List<Gmlcjh> gmlcjhList(Gmlcjh gmlcjh, String page, String rows) {
		if (StringUtils.isBlank(page)) {
			page = "1";
		}
		if (StringUtils.isBlank(rows)) {
			rows = "10";
		}
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from Gmlcjh t ";
		List<Gmlcjh> l = gmlcjhDao.find(hql + whereHql(gmlcjh, params)
				+ " order by t.gmsj desc", params, Integer.valueOf(page),
				Integer.valueOf(rows));
		return l;
	}

	@Override
	public int getCount(Gmlcjh gmlcjh) {
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = "select count(*) from Gmlcjh t "
				+ whereHql(gmlcjh, params);
		return gmlcjhDao.count(hql, params).intValue();
	}

}
