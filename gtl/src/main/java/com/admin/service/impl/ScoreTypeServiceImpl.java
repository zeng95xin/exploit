package com.admin.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.ScoreTypeDaoI;
import com.admin.model.Score;
import com.admin.model.ScoreType;
import com.admin.service.ScoreTypeServiceI;
import com.admin.service.baseImpl.BaseServiceImpl;

@Service
public class ScoreTypeServiceImpl extends BaseServiceImpl<ScoreType> implements ScoreTypeServiceI{
	
		private ScoreTypeDaoI scoreTypeDaoI;
		
		@Autowired
		public ScoreTypeServiceImpl(ScoreTypeDaoI scoreTypeDaoI) {
			this.baseDaoI=scoreTypeDaoI;
			this.scoreTypeDaoI=scoreTypeDaoI;
		}

		@Override
		public List<ScoreType> findScoreTypes(ScoreType scoreType) {
			Map<String, Object> params = new HashMap<String, Object>();
			String hql=whereHql(scoreType, params);
			List<ScoreType> types=scoreTypeDaoI.find(hql, params);
			return types;
		}
		

		/**
		 * HQLWhere条件拼装
		 */
		private String whereHql(ScoreType sct, Map<String, Object> params) {
			String hql = "from ScoreType t ";
			if (sct != null) {
				hql += " where 1=1 ";
				if (StringUtils.isNotBlank(sct.getId())) {
					hql += " and t.id = :id";
					params.put("id", sct.getId());
				}
				if(StringUtils.isNotBlank(sct.getTypeName())){
					hql += " and t.typeName = :typeName";
					params.put("typeName",sct.getTypeName());
				}

			}
			return hql;
		}
		
		
}
