package com.admin.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.SctimeDaoI;
import com.admin.model.Ad;
import com.admin.model.Sctime;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.service.SctimeServiceI;
import com.web.util.TimeUtils;

@Service
public class SctimeServiceImpl implements SctimeServiceI {

	@Autowired
	private SctimeDaoI dao;

	@Override
	public DataGrid dataGrid(Sctime ad, PageHelper ph) {
		DataGrid dg = new DataGrid();
		List<Sctime> ul = new ArrayList<Sctime>();
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from Sctime t ";
		List<Sctime> l = dao.find(hql + whereHql(ad, params) + orderHql(ph),
				params, ph.getPage(), ph.getRows());
		if (l != null && l.size() > 0) {
			for (Sctime t : l) {
				Sctime u = new Sctime();
				BeanUtils.copyProperties(t, u);
				ul.add(u);
			}
		}
		dg.setRows(ul);
		dg.setTotal(dao.count("select count(*) " + hql + whereHql(ad, params),
				params));
		return dg;
	}

	/**
	 * where条件封装
	 * 
	 * @param ad
	 * @param params
	 * @return
	 */
	private String whereHql(Sctime ad, Map<String, Object> params) {
		String hql = "";
		if (ad != null) {
			hql += " where 1=1 ";
			if (StringUtils.isNotBlank(ad.getGsid())) {
				hql += " and t.gsid = :gsid";
				params.put("gsid", ad.getGsid());
			}

		}
		return hql;
	}

	/**
	 * order封装
	 * 
	 * @param ph
	 * @return
	 */
	private String orderHql(PageHelper ph) {
		String orderString = "";
		if (ph.getSort() != null && ph.getOrder() != null) {
			orderString = " order by t." + ph.getSort() + " " + ph.getOrder();
		}
		return orderString;
	}

	/**
	 * 新增
	 */
	@Override
	public void add(Sctime ad) throws Exception {
		ad.setId(UUID.randomUUID().toString());
		dao.save(ad);
	}

	/**
	 * 删除
	 */
	@Override
	public void delete(String id) throws Exception {
		Sctime ad = dao.get(Sctime.class, id);
		dao.delete(ad);
	}

	/**
	 * 修改
	 */
	@Override
	public void update(Sctime ad) throws Exception {

		dao.update(ad);
	}

	/**
	 * 得到对象
	 */
	@Override
	public Sctime get() throws Exception {
		String now = TimeUtils.getTime("yyyy-MM-dd");
		String hql = "from Sctime where starttime like '%" + now
				+ "%' order by starttime desc";
		List<Sctime> list = dao.find(hql, null, 1, 1);
		if (list.size() > 0) {
			return list.get(0);
		}

		return new Sctime();
	}

	@Override
	public Sctime getSctime(String id) throws Exception {
		return dao.get(Sctime.class, id);
	}

}
