package com.admin.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.JfxhDaoI;
import com.admin.dao.LoginUserDaoI;
import com.admin.dao.MyCareDaoI;
import com.admin.dao.impl.JfxhjlDaoImpl;
import com.admin.model.Jfxhjl;
import com.admin.model.LoginUser;
import com.admin.model.MyCare;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.service.MyCareServiceI;
import com.web.util.TimeUtils;

@Service
public class MyCareServiceImpl implements MyCareServiceI {

	@Autowired
	private MyCareDaoI myCareDao;

	@Autowired
	private LoginUserDaoI loginUserDaoI;

	@Autowired
	private JfxhDaoI jfxhDaoI;

	@Override
	public DataGrid dataGrid(MyCare myCare, PageHelper ph) {
		DataGrid dg = new DataGrid();
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from MyCare t ";
		List<MyCare> l = myCareDao.find(hql + whereHql(myCare, params)
				+ orderHql(ph), params, ph.getPage(), ph.getRows());
		dg.setRows(l);
		dg.setTotal(myCareDao.count(
				"select count(*) " + hql + whereHql(myCare, params), params));
		return dg;
	}

	private String whereHql(MyCare myCare, Map<String, Object> params) {
		String hql = "";
		if (myCare != null) {
			hql += " where 1=1 ";
			if (StringUtils.isNotBlank(myCare.getUserId())) {
				hql += " and t.userId = :userId";
				params.put("userId", myCare.getUserId());
			}
			if (StringUtils.isNotBlank(myCare.getConcernedId())) {
				hql += " and t.concernedId = :concernedId";
				params.put("concernedId", myCare.getConcernedId());
			}
		}
		return hql;
	}

	private String orderHql(PageHelper ph) {
		String orderString = "";
		if (ph.getSort() != null && ph.getOrder() != null) {
			orderString = " order by t." + ph.getSort() + " " + ph.getOrder();
		}
		return orderString;
	}

	@Override
	public void add(MyCare myCare) throws Exception {
		MyCare u = new MyCare();
		BeanUtils.copyProperties(myCare, u);
		myCareDao.save(myCare);
	}

	@Override
	public MyCare get(String id) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("id", id);
		MyCare t = myCareDao.get(
				"select distinct t from MyCare t where t.id = :id", params);
		return t;
	}

	@Override
	public void edit(MyCare myCare) throws Exception {
		myCareDao.update(myCare);
	}

	@Override
	public void delete(String id) {
		myCareDao.delete(myCareDao.get(MyCare.class, id));
	}

	@Override
	public List<MyCare> myCareList() {
		List<MyCare> t = myCareDao.find("from MyCare t ");
		return t;
	}

	@Override
	public List<MyCare> myCareList(MyCare myCare, String page, String rows) {
		if (StringUtils.isBlank(page)) {
			page = "1";
		}
		if (StringUtils.isBlank(rows)) {
			rows = "10";
		}
		Map<String, Object> params = new HashMap<String, Object>();
		List<MyCare> t = myCareDao.find(
				"  from MyCare t " + whereHql(myCare, params)+" group by concernedId", params,
				//"  from MyCare t " + whereHql(myCare, params), params,
				Integer.valueOf(page), Integer.valueOf(rows));
		return t;
	}
	@Override
	public int mycareCount(String tguserid) {
		//String hql=" SELECT DISTINCT concernedId from MyCare where 1=1";
		String hql="  from MyCare where 1=1";
		if (StringUtils.isNotBlank(tguserid)) {
			hql += " and userId='" + tguserid + "'";
		}
		hql+=" group by concernedId";
		List<MyCare> t=myCareDao.find(hql);
		return t.size();
	}

	@Override
	public void perMonthKJF() throws Exception {
		/*
		 * List<MyCare> list=myCareDao.find("from MyCare t "); for(int
		 * i=0;i<list.size();i++){ MyCare m=list.get(i); //关注人信息 LoginUser
		 * gzr=loginUserDaoI
		 * .get("from LoginUser t where id='"+m.getUserId()+"'"); int
		 * jf=gzr.getJifen(); if(jf<10){ gzr.setJifen(0); }else{
		 * gzr.setJifen(jf-10); } loginUserDaoI.update(gzr); Jfxhjl jj=new
		 * Jfxhjl(); jj.setResaon("关注投顾每月积分消耗"); jj.setUserid(m.getUserId());
		 * if(jf<10){ jj.setSl(jf+""); }else{ jj.setSl("-10"); }
		 * jj.setWzid(m.getConcernedId());
		 * jj.setId(UUID.randomUUID().toString());
		 * jj.setXftime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
		 * jfxhDaoI.save(jj);
		 * 
		 * 
		 * //被关注人 LoginUser
		 * user=loginUserDaoI.get("from LoginUser t where id='"+
		 * m.getConcernedId()+"'"); int jf1=user.getJifen();
		 * user.setJifen(jf1+10); loginUserDaoI.update(user);
		 * 
		 * Jfxhjl jj1=new Jfxhjl(); jj1.setResaon("被关注(每月)");
		 * jj1.setUserid(m.getConcernedId()); jj1.setSl("+10");
		 * jj1.setId(UUID.randomUUID().toString());
		 * jj1.setXftime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
		 * jj1.setWzid(m.getUserId()); jfxhDaoI.save(jj1); }
		 */
	}

	@Override
	public List<MyCare> careMeList(String tguserid, String page, String rows) {
		if (StringUtils.isBlank(page)) {
			page = "1";
		}
		if (StringUtils.isBlank(rows)) {
			rows = "10";
		}
		String hql = " from MyCare where 1=1";
		if (StringUtils.isNotBlank(tguserid)) {
			hql += " and CONCERNEDID ='" + tguserid + "'";
		}
		List<MyCare> list = myCareDao.find(hql, Integer.valueOf(page),
				Integer.valueOf(rows));
		return list;
	}

	@Override
	public List<String> getUseridList(String tgid) {
		// TODO Auto-generated method stub
		String hql = " from MyCare where 1=1 and  CONCERNEDID ='" + tgid + "'";
		List<MyCare> list = myCareDao.find(hql);
		List<String> useridlist = new ArrayList<String>();
		if (list.size() > 0) {
			for (int i = 0; i < list.size(); i++) {
				MyCare c = list.get(i);
				useridlist.add(c.getUserId().replace("-", "")); // 发送时别名不能有-，替换为""
			}
		}
		return useridlist;
	}

	@Override
	public List<MyCare> getCareTgList(String tgid) {
		String hql = " from MyCare where 1=1 and  CONCERNEDID ='" + tgid + "'";
		List<MyCare> list = myCareDao.find(hql);

		return list;
	}
	
	/**
	 * 获取所有的设备ID
	 */
	@Override
	public List<String> getRigestId(String tgid) {
		String hql = " from MyCare where 1=1 and  CONCERNEDID ='" + tgid + "'";
		List<MyCare> list = myCareDao.find(hql);
		List<String> useridlist = new ArrayList<String>();
		if (list.size() > 0) {
			for (int i = 0; i < list.size(); i++) {
				MyCare c = list.get(i);
				if(c!=null){
					LoginUser user=loginUserDaoI.get(LoginUser.class, c.getUserId());
					if(user!=null){
						if(StringUtils.isNotBlank(user.getRegistrationId())){
							useridlist.add(user.getRegistrationId());
						}
					}
				}
				
				
			}
		}
		return useridlist;
	}
	@Override
	public List<MyCare> getCare(MyCare myCare) {
		
		String userId=myCare.getUserId();
		String concernedId=myCare.getConcernedId();
		List<MyCare> list =new ArrayList<MyCare>();
		String hql = " from MyCare where 1=1 ";
		if (StringUtils.isNotBlank(userId) && StringUtils.isNotBlank(concernedId)) {
			hql+=" and userId ='"+userId+"' and  concernedId ='" + concernedId + "'";
			list=myCareDao.find(hql);
		}
		
		if (list != null && list.size() > 0) {
			return list;
		}
		return null;
	}

	@Override
	public List<MyCare> getCare2(MyCare myCare,String row,String page) {
		if (StringUtils.isBlank(row)) {
			row="10";
		}
		if (StringUtils.isBlank(page)) {
			page="1";
		}
		String userId=myCare.getUserId();
		String concernedId=myCare.getConcernedId();
		List<MyCare> list =new ArrayList<MyCare>();
		String hql = " from MyCare where 1=1 and careType=3 ";
		if (StringUtils.isNotBlank(userId)) {
			hql+=" and userId ='"+userId+"' ";
		}
		if (StringUtils.isNotBlank(concernedId)) {
			hql+=" and  concernedId ='" + concernedId + "' ";
		}
		list=myCareDao.find(hql, Integer.parseInt(page), Integer.parseInt(row));
		if (list != null && list.size() > 0) {
			return list;
		}
		return null;
	}

	@Override
	public List<MyCare> getMyCare(MyCare myCare) {
		String hql = " from MyCare where 1=1 ";
		if (StringUtils.isNotBlank(myCare.getUserId())) {
			hql+=" and careType=3 and userId= '"+myCare.getUserId()+"' ";
		}
		List<MyCare> list = myCareDao.find(hql);
		if (list != null && (list.size() >0)) {
			return list;
		}
		return null;
	}

	@Override
	public List<MyCare> getMyCareByHm(MyCare myCare) {
		String hql = " from MyCare where 1=1 ";
		if (StringUtils.isNotBlank(myCare.getConcernedId())) {
			hql+=" and careType=3 and concernedId= '"+myCare.getConcernedId()+"' ";
		}
		List<MyCare> list = myCareDao.find(hql);
		if (list != null && (list.size() >0)) {
			return list;
		}
		return null;
	}

	
}
