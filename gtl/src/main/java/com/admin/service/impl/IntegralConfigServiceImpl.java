package com.admin.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.AppVersionDaoI;
import com.admin.dao.IntegralConfigDaoI;
import com.admin.model.AppVersion;
import com.admin.model.IntegralConfig;
import com.admin.model.JPushChatModel;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.service.IntegralConfigServiceI;
import com.admin.service.JPushApiClient;
import com.admin.service.LoginUserServiceI;
import com.web.util.TimeUtils;

@Service
public class IntegralConfigServiceImpl implements IntegralConfigServiceI {

	@Autowired
	private IntegralConfigDaoI integralConfigDao;

	@Autowired
	private AppVersionDaoI appdao;

	@Autowired
	private LoginUserServiceI loginUserServiceI;

	@Autowired
	private JPushApiClient jppApiClient;

	@Override
	public DataGrid dataGrid(IntegralConfig integralConfig, PageHelper ph) {
		DataGrid dg = new DataGrid();
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from IntegralConfig t ";
		List<IntegralConfig> l = integralConfigDao.find(
				hql + whereHql(integralConfig, params) + orderHql(ph), params,
				ph.getPage(), ph.getRows());
		dg.setRows(l);
		dg.setTotal(integralConfigDao.count("select count(0) " + hql
				+ whereHql(integralConfig, params), params));
		return dg;
	}

	private String whereHql(IntegralConfig integralConfig,
			Map<String, Object> params) {
		String hql = "";
		if (integralConfig != null) {
			hql += " where 1=1 ";
			// if (integralConfig.getName() != null) {
			// hql += " and t.name like :name";
			// params.put("name", "%%" + integralConfig.getName() + "%%");
			// }
		}
		return hql;
	}

	private String orderHql(PageHelper ph) {
		String orderString = "";
		if (ph.getSort() != null && ph.getOrder() != null) {
			orderString = " order by t." + ph.getSort() + " " + ph.getOrder();
		}
		return orderString;
	}

	@Override
	public void add(IntegralConfig integralConfig) throws Exception {
		IntegralConfig u = new IntegralConfig();
		BeanUtils.copyProperties(integralConfig, u);
		integralConfigDao.save(u);
	}

	@Override
	public IntegralConfig get() {
		IntegralConfig t = integralConfigDao
				.getIntegralConfig("select distinct t from IntegralConfig t");
		return t;
	}

	@Override
	public void edit(IntegralConfig integralConfig) throws Exception {
		integralConfigDao.update(integralConfig);
	}

	@Override
	public void delete(String id) {
		integralConfigDao.delete(integralConfigDao
				.get(IntegralConfig.class, id));
	}

	@Override
	public List<IntegralConfig> integralConfigList() {
		List<IntegralConfig> t = integralConfigDao
				.find("from IntegralConfig t ");
		return t;
	}

	@Override
	public AppVersion getVersion() {
		AppVersion app = new AppVersion();
		app = integralConfigDao.getAppVersion();
		return app;
	}

	@Override
	public AppVersion addVersion(AppVersion app) {
		AppVersion a1 = appdao.get(AppVersion.class, app.getId());
		if (a1 != null) {
			a1.setAndroid(app.getAndroid());
			a1.setIOS(app.getIOS());
			a1.setAndroidDLURL(app.getAndroidDLURL());
			a1.setIOSDLURL(app.getIOSDLURL());
			a1.setPushTitle(app.getPushTitle());
			a1.setPushContent(app.getPushContent());
			a1.setLasttime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
			appdao.update(a1);

			String title01 = app.getPushTitle();
			String content01 = app.getPushContent();
//			List<String> alias = loginUserServiceI.getUseridList();
			List<String> regist=loginUserServiceI.getUseridRigstList();
			if(regist!=null&&regist.size()>0){
				JPushChatModel jpModel = new JPushChatModel();
				jpModel.setType("5"); // 版本更新推送
				jpModel.setTitle(title01);// 推送题目
				jpModel.setContent(content01);// 推送内容
				jppApiClient.jPush_rigstId(regist, jpModel);
			}
			
			

		} else {
			app.setLasttime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
			appdao.save(app);
		}
		return null;
	}

}
