package com.admin.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import org.apache.commons.lang3.StringUtils;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.GywmModelDaoI;
import com.admin.model.GywmModel;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.service.GywmModelServiceI;
import com.web.util.TimeUtils;

@Service
public class GywmModelServiceImpl implements GywmModelServiceI {

	@Autowired
	private GywmModelDaoI dao;

	@Override
	public DataGrid dataGridForOne(GywmModel g, PageHelper ph) {
		DataGrid dg = new DataGrid();
		List<GywmModel> ul = new ArrayList<GywmModel>();
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from GywmModel t ";
		List<GywmModel> l = dao.find(hql + whereHqlForOne(g, params)
				+ orderHql(ph), params, ph.getPage(), ph.getRows());
		if (l != null && l.size() > 0) {
			for (GywmModel t : l) {
				GywmModel u = new GywmModel();
				BeanUtils.copyProperties(t, u);
				ul.add(u);
			}
		}
		dg.setRows(ul);
		dg.setTotal(dao.count(
				"select count(*) " + hql + whereHqlForOne(g, params), params));
		return dg;
	}

	/**
	 * where 条件封装
	 * 
	 * @param p
	 * @param params
	 * @return
	 */
	private String whereHqlForOne(GywmModel g, Map<String, Object> params) {
		String hql = "";
		if (g != null) {
			hql += " where 1=1 and fl ='" + g.getFl() + "' ";

		}
		return hql;
	}

	/**
	 * 排序条件
	 * 
	 * @param ph
	 * @return
	 */
	private String orderHql(PageHelper ph) {
		String orderString = "";
		if (ph.getSort() != null && ph.getOrder() != null) {
			orderString = " order by t." + ph.getSort() + " " + ph.getOrder();
		}
		return orderString;
	}

	@Override
	public void delete(String id) {
		dao.delete(dao.get(GywmModel.class, id));
	}

	@Override
	synchronized public void add(GywmModel p) throws Exception {
		/*
		 * Map<String, Object> params = new HashMap<String, Object>();
		 * params.put("gxttitel", p.getGxttitel());
		 */

		GywmModel u = new GywmModel();
		BeanUtils.copyProperties(p, u);
		u.setId(UUID.randomUUID().toString());
		u.setGxtime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
		dao.save(u);

	}

	/**
	 * 通过id获取段子实体类
	 */
	@Override
	public GywmModel get(String id) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("id", id);
		GywmModel t = dao.get(
				"select distinct t from GywmModel t  where t.id = :id", params);
		GywmModel u = new GywmModel();
		BeanUtils.copyProperties(t, u);
		return u;
	}

	String[] excelHeader = { "标题", "分类", "发布者", "发布时间" };

	@Override
	public void edit(GywmModel p) throws Exception {
		GywmModel newGywmModel = dao.get(GywmModel.class, p.getId());
		newGywmModel.setGxtime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
		newGywmModel.setNr(p.getNr());
		dao.update(newGywmModel);
	}

	@Override
	public HSSFWorkbook export(List<GywmModel> list) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<GywmModel> getList() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<GywmModel> getList(String userid, String page, String rows) {
		// StringBuffer sff = new StringBuffer();
		if (StringUtils.isBlank(page)) {
			page = "1";
		}
		if (StringUtils.isBlank(rows)) {
			rows = "10";
		}
		/*
		 * sff.append("select a from ").append(GywmModel.class.getSimpleName()).
		 * append(" a "); sff.append(" where 1=1 ");
		 * if(StringUtils.isNotBlank(userid)){
		 * sff.append(" and userid = '"+userid+"'"); }
		 */
		// sff.append(" order by xztime desc");
		String hql = " from GywmModel where 1=1";
		if (StringUtils.isNotBlank(userid)) {
			hql += " and userid = '" + userid + "'";
		}
		hql += " order by xztime desc";
		List<GywmModel> list = dao.find(hql, Integer.valueOf(page),
				Integer.valueOf(rows));

		return list;
	}

	@Override
	public List<GywmModel> getFlList(String fl) {

		String hql = " from GywmModel where 1=1 and fl='" + fl + "'";
		List<GywmModel> list = dao.find(hql);
		return list;
	}

}
