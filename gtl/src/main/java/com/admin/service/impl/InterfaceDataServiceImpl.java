package com.admin.service.impl;

import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.math.BigDecimal;
import java.net.URL;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.UUID;

import org.apache.commons.lang3.StringUtils;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.InterfaceDaoI;
import com.admin.dao.GpsyDaoI;
import com.admin.dao.GqbdzDaoI;
import com.admin.dao.RoleDaoI;
import com.admin.dao.UserDaoI;
import com.admin.dao.GgxwDaoI;
import com.admin.dao.WebDaoI;
import com.admin.model.InterfaceData;
import com.admin.model.InterfaceData;
import com.admin.model.LoginUser;
import com.admin.model.TczdXz;
import com.admin.model.Tgdj;
import com.admin.model.Tgsdz;
import com.admin.model.Tgxt;
import com.admin.model.Tresource;
import com.admin.model.Trole;
import com.admin.model.Tuser;
import com.admin.model.Ggxw;
import com.admin.model.gpsy;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.SessionInfo;
import com.admin.pageModel.User;
import com.admin.service.InterfaceDataServiceI;
import com.admin.service.GgxwServiceI;
import com.admin.service.GpsyServiceI;
import com.admin.service.GqbServiceI;
import com.admin.service.GxtServiceI;
import com.admin.service.InterfaceDataServiceI;
import com.admin.service.LoginUserServiceI;
import com.admin.service.UserServiceI;
import com.admin.service.GgxwServiceI;
import com.admin.service.WebServiceI;
import com.admin.util.MD5Util;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.web.entity.Person;
import com.web.util.PageModel;
import com.web.util.TimeUtils;

@Service
public class InterfaceDataServiceImpl implements InterfaceDataServiceI {

	@Autowired
	private InterfaceDaoI dao;

	@Autowired
	private LoginUserServiceI loginUserServiceI;

	@Override
	public DataGrid dataGridForOne(InterfaceData g, PageHelper ph) {
		DataGrid dg = new DataGrid();
		List<InterfaceData> ul = new ArrayList<InterfaceData>();
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from InterfaceData t ";
		List<InterfaceData> l = dao.find(hql + whereHqlForOne(g, params)
				+ orderHql(ph), params, ph.getPage(), ph.getRows());
		if (l != null && l.size() > 0) {
			for (InterfaceData t : l) {
				InterfaceData u = new InterfaceData();
				BeanUtils.copyProperties(t, u);
				ul.add(u);
			}
		}
		dg.setRows(ul);
		dg.setTotal(dao.count(
				"select count(*) " + hql + whereHqlForOne(g, params), params));
		return dg;
	}

	/**
	 * where 条件封装
	 * 
	 * @param p
	 * @param params
	 * @return
	 */
	private String whereHqlForOne(InterfaceData g, Map<String, Object> params) {
		String hql = "";
		/*
		 * if (g != null) { hql += " where 1=1 "; if (g.getTitle() != null) {
		 * hql += " and t.dztitel like :dztitel"; params.put("title", "%%" +
		 * g.getTitle() + "%%"); }
		 * 
		 * 
		 * }
		 */
		return hql;
	}

	/**
	 * 排序条件
	 * 
	 * @param ph
	 * @return
	 */
	private String orderHql(PageHelper ph) {
		String orderString = "";
		if (ph.getSort() != null && ph.getOrder() != null) {
			orderString = " order by t." + ph.getSort() + " " + ph.getOrder();
		}
		return orderString;
	}

	@Override
	public void delete(String id) {
		dao.delete(dao.get(InterfaceData.class, id));
	}
	
	@Override
	public void deleteAll() {
		dao.executeHql("delete from InterfaceData as p where 1=1");
		
	}

	@Override
	synchronized public void add(InterfaceData p) throws Exception {
		p.setId(UUID.randomUUID().toString());
		dao.save(p);
	}

	/**
	 * 通过id获取段子实体类
	 */
	@Override
	public InterfaceData get(String id) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("id", id);
		InterfaceData t = dao.get(
				"select distinct t from InterfaceData t  where t.id = :id",
				params);
		InterfaceData u = new InterfaceData();
		BeanUtils.copyProperties(t, u);
		return u;
	}

	String[] excelHeader = { "标题", "分类", "发布者", "发布时间" };

	@Override
	public void edit(InterfaceData p) throws Exception {
		InterfaceData u = dao.get(InterfaceData.class, p.getId());

		dao.update(u);
	}

	@Override
	public HSSFWorkbook export(List<InterfaceData> list) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<InterfaceData> getList() {

		String hql = " from InterfaceData where 1=1";
		List<InterfaceData> list = dao.find(hql);
		return list;
	}

	@Override
	public InterfaceData getInterfaceData(String userid, String zqdm,
			String mrlx, String sjid) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("userid", userid);
		params.put("zqdm", zqdm);
		params.put("mrlx", mrlx);
		params.put("sjid", sjid);
		InterfaceData t = dao
				.get("select distinct t from InterfaceData t  where t.userid = :userid and t.mrlx = :mrlx and t.zqdm = :zqdm and t.sjid = :sjid ",
						params);
		return t;
	}

	@Override
	public void deleteDqsy(String userid, String sjsid) {
		// TODO Auto-generated method stub

	}

	

}
