package com.admin.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.ChestBoxBuyDao;
import com.admin.dao.ChestBoxDao;
import com.admin.model.LoginUser;
import com.admin.service.ChestBoxBuyService;
import com.admin.service.LoginUserServiceI;
import com.web.entity.Buyers;
import com.web.entity.ChestBox;
import com.web.entity.ChestBoxBuy;

@Service
public class ChestBoxBuyServiceImpl implements ChestBoxBuyService{
	
	@Autowired
	private ChestBoxBuyDao chestBoxBuyDao;
	
	@Autowired
	private ChestBoxDao chestBoxDao;
	
	@Autowired
	private LoginUserServiceI loginUserServiceI;

	@Override
	public void add(ChestBoxBuy chestBoxBuy) throws Exception {
		chestBoxBuyDao.save(chestBoxBuy);
		
	}

	@Override
	public List<ChestBoxBuy> getByUserId(String boxBuyerId,String row ,String page) {
		if (StringUtils.isBlank(page)) {
			page="1";
		}
		if (StringUtils.isBlank(row)) {
			row="10";
		}
		String hql=" from ChestBoxBuy where 1=1 ";
		List<ChestBoxBuy> list =new ArrayList<ChestBoxBuy>();
		if (StringUtils.isNotBlank(boxBuyerId)) {
			hql+=" and boxBuyerId= '"+boxBuyerId+"' order by buyTime desc";
		}
		list=chestBoxBuyDao.find(hql, Integer.parseInt(page), Integer.parseInt(row));
		if (list  != null && (list.size() > 0)) {
			return list;
		}
		return null;
	}
	
public boolean checkBuyer(String boxID,String boxBuyerId) {
		
		ChestBoxBuy chestBoxBuy= new ChestBoxBuy();
		String hql=" from ChestBoxBuy where 1=1 ";
		if (StringUtils.isNotBlank(boxID) && StringUtils.isNotBlank(boxBuyerId)) {
			hql+=" and boxID='"+boxID+"' and boxBuyerId='"+boxBuyerId+"'";
		}
		chestBoxBuy=chestBoxBuyDao.get(hql);
		if (chestBoxBuy != null) {
			return true;
		}else{
			return false;
		}
	}

@Override
public boolean checkBuyNum(String boxID) {
	List<ChestBoxBuy> list =new ArrayList<ChestBoxBuy>();
	ChestBox cb=new ChestBox();
	String hql=" from ChestBoxBuy where 1=1 ";
	String hql1=" from ChestBox where 1=1 ";
	if (StringUtils.isNotBlank(boxID) ) {
		hql+=" and boxID='"+boxID+"' ";
		hql1+=" and boxID='"+boxID+"' ";
	}
	list=chestBoxBuyDao.find(hql);
	cb=chestBoxDao.get(hql1);
	if ((list != null) && (list.size() > 0) && (cb !=null)) {
		if (Integer.parseInt(cb.getBoxMaxNum()) > list.size()) {
			return true;
		}
	}
	return false;
}

@Override
public List<Buyers> getBuserByBoxId(String boxID, String row, String page) {
	if (StringUtils.isBlank(page)) {
		page="1";
	}
	if (StringUtils.isBlank(row)) {
		row="10";
	}
	 List<LoginUser> list =new ArrayList<LoginUser>();
	 List<Buyers> listb =new ArrayList<Buyers>();
	 List<ChestBoxBuy> listc =new ArrayList<ChestBoxBuy>();
	 String hql=" from ChestBoxBuy where 1=1 ";
	 if (StringUtils.isNotBlank(boxID) ) {
			hql+=" and boxID='"+boxID+"' order by buyTime desc ";
			listc=chestBoxBuyDao.find(hql, Integer.parseInt(page), Integer.parseInt(row));
	 }
	 if (listc != null && listc.size() > 0) {
		for (ChestBoxBuy chestBoxBuy : listc) {
			LoginUser lg=new LoginUser();
			Buyers bs=new Buyers();
			if (StringUtils.isNotBlank(chestBoxBuy.getBuyTime())) {
				bs.setBuyTime(chestBoxBuy.getBuyTime());
			}
			if (StringUtils.isNotBlank(chestBoxBuy.getBoxBuyerId())) {
				lg=loginUserServiceI.getUser(chestBoxBuy.getBoxBuyerId());
				if (lg != null) {
					BeanUtils.copyProperties(lg, bs);
					
					listb.add(bs);
				} else {
					continue;
				}
			}else{
				continue;
			}
		}
		if (listb != null && listb.size() > 0) {
			return listb;
		}
	}
	return null;
}

}
