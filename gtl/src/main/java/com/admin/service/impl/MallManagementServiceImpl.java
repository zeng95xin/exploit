package com.admin.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.MallManagementDaoI;
import com.admin.model.MallManagement;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.service.MallManagementServiceI;

@Service
public class MallManagementServiceImpl implements MallManagementServiceI {

	@Autowired
	private MallManagementDaoI mallManagementDao;

	@Override
	public DataGrid dataGrid(MallManagement mallManagement, PageHelper ph) {
		DataGrid dg = new DataGrid();
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from MallManagement t ";
		List<MallManagement> l = mallManagementDao.find(
				hql + whereHql(mallManagement, params) + orderHql(ph), params,
				ph.getPage(), ph.getRows());
		dg.setRows(l);
		dg.setTotal(mallManagementDao.count("select count(*) " + hql
				+ whereHql(mallManagement, params), params));
		return dg;
	}

	private String whereHql(MallManagement mallManagement,
			Map<String, Object> params) {
		String hql = "";
		if (mallManagement != null) {
			hql += " where 1=1 ";
			if (StringUtils.isNotBlank(mallManagement.getMallName())) {
				hql += " and t.mallName like :mallName";
				params.put("mallName", "%%" + mallManagement.getMallName()
						+ "%%");
			}
			if (StringUtils.isNotBlank(mallManagement.getMalllogo())) {
				hql += " and t.malllogo = :malllogo";
				params.put("malllogo", mallManagement.getMalllogo());
			}
			if (StringUtils.isNotBlank(mallManagement.getMallprofile())) {
				hql += " and t.companyName like :mallprofile";
				params.put("mallprofile",
						"%%" + mallManagement.getMallprofile() + "%%");
			}
			if (StringUtils.isNotBlank(mallManagement.getJoinTime())) {
				hql += " and t.joinTime like :joinTime";
				params.put("joinTime", "%%" + mallManagement.getJoinTime()
						+ "%%");
			}
		}
		return hql;
	}

	private String orderHql(PageHelper ph) {
		String orderString = "";
		if (ph.getSort() != null && ph.getOrder() != null) {
			orderString = " order by t." + ph.getSort() + " " + ph.getOrder();
		}
		return orderString;
	}

	@Override
	public void add(MallManagement mallManagement) throws Exception {
		MallManagement u = new MallManagement();
		BeanUtils.copyProperties(mallManagement, u);
		// 得到图片路径
		// if(StringUtils.isNotBlank(mallManagement.getMalllogo())){
		// Integer a =
		// mallManagement.getMalllogo().indexOf("&lt;img src=&quot;");
		// Integer b =
		// mallManagement.getMalllogo().indexOf("&quot; alt=&quot;&quot; /&gt");
		// if(a!=null&&a!=-1&&b!=null&&b!=-1){
		// String xx=mallManagement.getMalllogo().substring(a,
		// b).replace("&lt;img src=&quot;", "");
		// mallManagement.setMalllogo(xx);
		// }else {
		// mallManagement.setMalllogo("");
		// }
		// }
		mallManagementDao.save(mallManagement);
	}

	@Override
	public MallManagement get(String id) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("id", id);
		MallManagement t = mallManagementDao.get(
				"select distinct t from MallManagement t where t.id = :id",
				params);
		return t;
	}

	@Override
	public void edit(MallManagement mallManagement) throws Exception {
		// 得到图片路径
		// if(StringUtils.isNotBlank(mallManagement.getMalllogo())){
		// Integer a =
		// mallManagement.getMalllogo().indexOf("&lt;img src=&quot;");
		// Integer b =
		// mallManagement.getMalllogo().indexOf("&quot; alt=&quot;&quot; /&gt");
		// if(a!=null&&a!=-1&&b!=null&&b!=-1){
		// String xx=mallManagement.getMalllogo().substring(a,
		// b).replace("&lt;img src=&quot;", "");
		// mallManagement.setMalllogo(xx);
		// }else {
		// mallManagement.setMalllogo("");
		// }
		// }
		mallManagementDao.update(mallManagement);
	}

	@Override
	public void delete(String id) {
		mallManagementDao.delete(mallManagementDao
				.get(MallManagement.class, id));
	}

	@Override
	public List<MallManagement> mallManagementList(String page, String rows) {
		if (StringUtils.isBlank(page)) {
			page = "1";
		}
		if (StringUtils.isBlank(rows)) {
			rows = "10";
		}
		List<MallManagement> t = mallManagementDao.find(
				"from MallManagement t ", Integer.valueOf(page),
				Integer.valueOf(rows));
		return t;
	}

	@Override
	public int getCount() {
		String hql = "select count(*) from MallManagement where 1=1";
		return mallManagementDao.count(hql).intValue();
	}

}
