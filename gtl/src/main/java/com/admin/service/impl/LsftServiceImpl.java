package com.admin.service.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.UUID;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.AdDaoI;
import com.admin.dao.LoginUserDaoI;
import com.admin.dao.LsftDaoI;
import com.admin.dao.RoleDaoI;
import com.admin.dao.UserDaoI;
import com.admin.model.Ad;
import com.admin.model.LoginUser;
import com.admin.model.Lsft;
import com.admin.model.Tresource;
import com.admin.model.Trole;
import com.admin.model.Tuser;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.SessionInfo;
import com.admin.pageModel.User;
import com.admin.service.AdServiceI;
import com.admin.service.LoginUserServiceI;
import com.admin.service.LsftServiceI;
import com.admin.service.UserServiceI;
import com.admin.util.MD5Util;
import com.web.entity.Person;
import com.web.util.PageModel;
import com.web.util.TimeUtils;

@Service
public class LsftServiceImpl implements LsftServiceI {

	@Autowired
	private LsftDaoI dao;

	@Override
	public void add(Lsft l) throws Exception {
		l.setId(UUID.randomUUID().toString());
		l.setAddtime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
		dao.save(l);
	}

	@Override
	public void delete(String id) throws Exception {
		Lsft l = dao.get(Lsft.class, id);
		dao.delete(l);
	}

	@Override
	public void update(Lsft ad) throws Exception {
		Lsft l = dao.get(Lsft.class, ad.getId());
		l.setTitle(ad.getTitle());
		l.setTurl(ad.getTurl());
		dao.update(l);
	}

	@Override
	public Lsft get(String id) throws Exception {
		Lsft l = dao.get(Lsft.class, id);
		return l;
	}

	@Override
	public List<Lsft> getList(String userid, String startdate, String enddate,
			String page, String rows) {
		if (StringUtils.isBlank(page)) {
			page = "1";
		}
		if (StringUtils.isBlank(rows)) {
			rows = "10";
		}
		String hql = " from Lsft where userid='" + userid + "' ";
		if (StringUtils.isNotBlank(startdate)) {
			startdate = startdate + " 00:00:00";
			hql += " and addtime>='" + startdate + "'";
		}
		if (StringUtils.isNotBlank(enddate)) {
			enddate = enddate + " 23:59:59";
			hql += " and addtime<='" + enddate + "'";
		}
		hql += " order by addtime desc";
		return dao.find(hql, Integer.valueOf(page), Integer.valueOf(rows));
	}

	@Override
	public int getCount(String userid, String startdate, String enddate) {
		String hql = "select count(*) from Lsft where 1=1";
		if (StringUtils.isNotBlank(userid)) {
			hql += " and userid='" + userid + "'";
		}
		if (StringUtils.isNotBlank(startdate)) {
			hql += " and addtime>='" + startdate + "'";
		}
		if (StringUtils.isNotBlank(enddate)) {
			hql += " and addtime<='" + enddate + "'";
		}
		return dao.count(hql).intValue();
	}

}
