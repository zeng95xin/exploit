package com.admin.service.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.UUID;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.AdDaoI;
import com.admin.dao.LoginUserDaoI;
import com.admin.dao.RealTimeQADaoI;
import com.admin.dao.RoleDaoI;
import com.admin.dao.UserDaoI;
import com.admin.model.Ad;
import com.admin.model.LoginUser;
import com.admin.model.RealTimeQA;
import com.admin.model.Tresource;
import com.admin.model.Trole;
import com.admin.model.Tuser;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.SessionInfo;
import com.admin.pageModel.User;
import com.admin.service.AdServiceI;
import com.admin.service.LoginUserServiceI;
import com.admin.service.RealTimeQAServiceI;
import com.admin.service.UserServiceI;
import com.admin.util.MD5Util;
import com.web.entity.Person;
import com.web.util.PageModel;
import com.web.util.TimeUtils;

@Service
public class RealTimeQAServiceImpl implements RealTimeQAServiceI {

	@Autowired
	private RealTimeQADaoI dao;

	/**
	 * 新增
	 */
	@Override
	public void add(RealTimeQA qa) throws Exception {
		qa.setId(UUID.randomUUID().toString());
		qa.setAddtime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
		dao.save(qa);
	}

	/**
	 * 删除
	 */
	@Override
	public void delete(String id) throws Exception {
		RealTimeQA ad = dao.get(RealTimeQA.class, id);
		dao.delete(ad);
	}

	/**
	 * 修改
	 */
	@Override
	public void update(RealTimeQA ad) throws Exception {
		dao.update(ad);
	}

	@Override
	public List<RealTimeQA> getQAList(String page, String rows) {
		if (StringUtils.isBlank(page)) {
			page = "1";
		}
		if (StringUtils.isBlank(rows)) {
			rows = "10";
		}
		StringBuffer sff = new StringBuffer();
		sff.append("select a from ").append(RealTimeQA.class.getSimpleName())
				.append(" a ");
		sff.append(" where 1=1 order by addtime desc ");
		List<RealTimeQA> list = dao.find(sff.toString(), Integer.valueOf(page),
				Integer.valueOf(rows));
		return list;
	}

}
