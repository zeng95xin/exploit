package com.admin.controller;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.UUID;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.admin.model.Ad;
import com.admin.model.Jjcp;
import com.admin.model.Jjcpsq;
import com.admin.model.Log;
import com.admin.model.LoginUser;
import com.admin.pageModel.DataGrid;

import com.admin.pageModel.Json;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.SessionInfo;
import com.admin.pageModel.User;
import com.admin.service.AdServiceI;
import com.admin.service.JjcpServiceI;
import com.admin.service.JjcpsqServiceI;
import com.admin.service.LogServiceI;
import com.admin.service.LoginUserServiceI;
import com.admin.service.UserServiceI;
import com.admin.util.ConfigUtil;
import com.admin.util.InfoUtil;
import com.web.util.TimeUtils;

/**
 * 基金产品申请
 * 
 * @author
 * 
 */
@Controller
@RequestMapping("/jjcpsqController")
public class JjcpsqController extends BaseController {

	@Autowired
	private JjcpsqServiceI service;

	@Autowired
	private LogServiceI logService;

	/**
	 * 获取数据表格
	 * 
	 * @param user
	 * @return
	 * @throws IOException
	 */
	@RequestMapping("/dataGrid")
	@ResponseBody
	public DataGrid dataGrid(Jjcpsq jjcp, PageHelper ph,
			HttpServletResponse response, HttpServletRequest request)
			throws IOException {
		response.setCharacterEncoding("utf-8");
		DataGrid d = service.dataGrid(jjcp, ph);
		return d;
	}

	/**
	 * 跳转到列表页面
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/jjcpsq")
	public String ad(HttpServletRequest request) {
		return "/admin/jjcpsq/jjcpsq";
	}

	/**
	 * 跳转到新增页面
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/addPage")
	public String addPage(HttpServletRequest request) {
		return "/admin/jjcpsq/jjcpsqAdd";
	}

	/**
	 * 跳转到修改页面
	 * 
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/editPage")
	public String editPage(String id, HttpServletRequest request)
			throws Exception {
		Jjcpsq cp = service.get(id);
		request.setAttribute("sq", cp);
		return "/admin/jjcpsq/jjcpsqEdit";
	}

	/**
	 * 删除
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public Json delete(String id, HttpSession session,
			HttpServletRequest request) {
		SessionInfo sessionInfo = (SessionInfo) session.getAttribute(ConfigUtil
				.getSessionInfoName());
		Json j = new Json();
		if (id != null && !id.equalsIgnoreCase(sessionInfo.getId())) {// 不能操作自己
			try {
				service.delete(id);
				j.setMsg("删除成功！");
				j.setSuccess(true);

				Log log = new Log();
				log.setType("delete");// 操作描述
				log.setAuthor(InfoUtil.getUser(session));// 操作员
				log.setIp(InfoUtil.getIpAddr(request));// ip
				log.setTteble("t_jjcpsq");// 操作的表
				log.setTid(id);// 操作的ID
				log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
				logService.add(log);

			} catch (Exception e) {
				j.setMsg("删除失败!" + e.getMessage());
				j.setSuccess(false);
			}
		}
		return j;
	}

	/**
	 * 修改
	 * 
	 * @return
	 */
	@RequestMapping("/edit")
	@ResponseBody
	public Json update(Jjcpsq jjcp, HttpServletRequest request,
			HttpSession session) {
		Json j = new Json();
		try {
			String loginname = InfoUtil.getUser(session);
			String ip = InfoUtil.getIpAddr(request);
			jjcp.setLasttime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
			service.update1(jjcp);

			j.setSuccess(true);
			j.setMsg("修改成功！");
			j.setObj(jjcp);

			Log log = new Log();
			log.setType("状态修改");// 操作描述
			log.setAuthor(InfoUtil.getUser(session));// 操作员
			log.setIp(InfoUtil.getIpAddr(request));// ip
			log.setTteble("t_jjcpsq");// 操作的表
			log.setTid(jjcp.getId());// 操作的ID
			log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
			logService.add(log);

		} catch (Exception e) {
			j.setMsg(e.getMessage());
		}
		return j;
	}

	/**
	 * 批量删除
	 * 
	 * @param ids
	 *            ('0','1','2')
	 * @return
	 */
	@RequestMapping("/pldelete")
	@ResponseBody
	public Json pljy(String ids, HttpSession session, HttpServletRequest request) {
		Json j = new Json();
		if (ids != null && ids.length() > 0) {
			for (String id : ids.split(",")) {
				if (id != null) {
					this.delete(id, session, request);
				}
			}
		}
		j.setMsg("批量删除成功！");
		j.setSuccess(true);
		return j;
	}

	/**
	 * 添加
	 * 
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public Json add(Jjcpsq jjcp, HttpServletRequest request, HttpSession session) {
		Json j = new Json();
		try {
			String loginname = InfoUtil.getUser(session);
			String ip = InfoUtil.getIpAddr(request);
			service.add(jjcp);

			j.setSuccess(true);
			j.setMsg("添加成功！");
			j.setObj(jjcp);

			Log log = new Log();
			log.setType("add");// 操作描述
			log.setAuthor(InfoUtil.getUser(session));// 操作员
			log.setIp(InfoUtil.getIpAddr(request));// ip
			log.setTteble("t_jjcp");// 操作的表
			log.setTid(jjcp.getId());// 操作的ID
			log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
			logService.add(log);
		} catch (Exception e) {
			j.setMsg(e.getMessage());
		}
		return j;
	}

}
