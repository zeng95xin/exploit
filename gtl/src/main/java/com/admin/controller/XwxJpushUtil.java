package com.admin.controller;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.admin.model.JPushChatModel;
import com.admin.model.LoginUser;
import com.admin.service.JPushApiClient;
import com.lcjh.biz.Lcjh2Biz;

@Component
public class XwxJpushUtil {
	
	@Autowired private JPushApiClient jPushApiClient;
	@Autowired private Lcjh2Biz lcjh2Biz;
	
	public void xwPushCareUser(JPushChatModel chat){
		String sql = "select registrationId from loginuser where registrationId is not null";
		Map<String, Object> params = new HashMap<String, Object>(1);
		List<LoginUser> users = lcjh2Biz.findBySqlBuildObject(sql, params, LoginUser.class, null, null);
		List<String> reigsts = new ArrayList<String>(users.size());
		for (LoginUser loginUser2 : users) {
			reigsts.add(loginUser2.getRegistrationId());
		}
		Double num=((double)reigsts.size()/(double)1000);
		if(num%1==0){
			for (int i = 0; i < num; i++) {
					for (int j = 0; j <500; j++) {
						jPushApiClient.jPush_rigstId(reigsts, chat);
					}
				}
			}else{
				for (int i = 0; i < Math.floor(num); i++) {
					for (int j = 0; j <500; j++) {
						jPushApiClient.jPush_rigstId(reigsts, chat);
					}
				}
				double n=reigsts.size()-Math.floor(num)*1000;
				for (int i = 0; i < n; i++) {
						jPushApiClient.jPush_rigstId(reigsts, chat);
				}
			}
	}

	
	
}
