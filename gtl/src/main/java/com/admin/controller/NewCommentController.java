package com.admin.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.admin.model.Log;
import com.admin.model.Partner;
import com.admin.model.Tpinglun;
import com.admin.model.TxwxGl;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.Json;
import com.admin.pageModel.PageHelper;
import com.admin.service.LogServiceI;
import com.admin.service.LoginUserServiceI;
import com.admin.service.PinglunServiceI;
import com.admin.service.XwxServiceI;
import com.admin.util.InfoUtil;
import com.web.util.TimeUtils;

/**
 * 评论管理
 * 
 * @author Administrator
 * 
 */
@Controller
@RequestMapping("/NewComment")
public class NewCommentController extends BaseController {

	@Autowired
	private XwxServiceI xwxService;

	@Autowired
	private LogServiceI logService;

	@Autowired
	private LoginUserServiceI loginUserServiceI;

	@Autowired
	private PinglunServiceI service;

	/**
	 * 跳转到新闻评论管理页面
	 * 
	 * @return
	 */
	@RequestMapping("/manager")
	public String manager() {
		return "/admin/newComment/newComment";
	}

	/**
	 * 获取合作伙伴列表
	 * 
	 * @param p
	 * @param ph
	 * @return
	 */
	@RequestMapping("/dataGrid")
	@ResponseBody
	public DataGrid dataGrid(Tpinglun p, PageHelper ph) {
		return service.dataGrid(p, ph);

	}

	/**
	 * 删除评论
	 * 
	 * @param id
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public Json delete(String id) throws Exception {
		Json j = new Json();
		// partnerService.delete(id);
		service.delete(id);
		j.setMsg("删除成功！");
		j.setSuccess(true);
		return j;
	}

	/**
	 * 批量删除评论
	 * 
	 * @param ids
	 * @param session
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/batchDelete")
	@ResponseBody
	public Json batchDelete(String ids, HttpSession session) throws Exception {
		Json j = new Json();
		if (ids != null && ids.length() > 0) {
			for (String id : ids.split(",")) {
				if (id != null) {
					this.delete(id);
				}
			}
		}
		j.setMsg("批量删除成功！");
		j.setSuccess(true);
		return j;
	}

	/**
	 * 跳转到评论修改页面
	 * 
	 * @param request
	 * @param id
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/editPage")
	public String editPage(HttpServletRequest request, String id)
			throws Exception {
		Tpinglun pl = service.get(id);
		request.setAttribute("pl", pl);
		return "/admin/newComment/newCommentEdit";
	}

	/**
	 * 修改评论
	 * 
	 * @param p
	 * @param request
	 * @param session
	 * @return
	 */
	@RequestMapping("/edit")
	@ResponseBody
	public Json edit(Tpinglun p, HttpServletRequest request, HttpSession session) {
		Json j = new Json();
		try {
			service.update1(p);
			j.setSuccess(true);
			j.setMsg("编辑成功！");
			j.setObj(p);

			Log log = new Log();
			log.setType("update");// 操作描述
			log.setAuthor(InfoUtil.getUser(session));// 操作员
			log.setIp(InfoUtil.getIpAddr(request));// ip
			log.setTteble("t_pinglun");// 操作的表
			log.setTid(p.getId());// 操作的ID
			log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
			logService.add(log);
		} catch (Exception e) {
			// e.printStackTrace();
			j.setMsg(e.getMessage());
		}
		return j;
	}
}
