package com.admin.controller;

import java.util.Calendar;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.admin.pageModel.DataGrid;
import com.admin.pageModel.Json;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.SessionInfo;
import com.admin.pageModel.User;
import com.admin.service.UserServiceI;
import com.admin.util.ConfigUtil;
import com.web.util.TestRun;
import com.web.util.TimeUtils;

/**
 * 用户控制器
 * 
 * @author
 * 
 */
@Controller
@RequestMapping("/login")
public class AdminController extends BaseController {

	@Autowired
	private UserServiceI userService;

	@RequestMapping
	public String load(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {
		return "index";
	}

	/**
	 * 定时器启动
	 */
	@RequestMapping("/timerStart")
	public String timerStart() {
		TimerTask task = new TimerTask() {
			@Override
			public void run() {
				timerFunction();// 调用需要定时执行的方法
			}
		};

		// 设置执行时间
		Calendar calendar = Calendar.getInstance();
		int year = calendar.get(Calendar.YEAR);
		int month = calendar.get(Calendar.MONTH);
		int day = calendar.get(Calendar.DAY_OF_MONTH);// 每天
		// 定制每天的21:09:00执行，
		calendar.set(year, month, day, 11, 00, 00);// 设置执行的时间点 11:00:00
		Date date = calendar.getTime();
		Timer timer = new Timer();

		//System.out.println(date);

		int period = 24 * 60 * 60 * 1000;// 执行的时间间隔，1000为1秒，60*1000为1分钟，60*60*1000为一小时，24*60*60*1000为一天
		int period1 = 1000 * 60;
		timer.schedule(task, date, period1);// 有时间间隔的执行任务
		// 每天的date时刻执行task, 仅执行一次
		// timer.schedule(task, date);//每日执行一次

		return "page/timer/timerStart";
	}

	/**
	 * 执行任务
	 */
	public static void timerFunction() {
		//System.out.println(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss") + "执行了一次");
	}

}
