package com.admin.controller;

import java.io.IOException;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.admin.model.Ad;
import com.admin.model.Log;
import com.admin.model.Sctime;
import com.admin.model.SecuritiesCompany;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.Json;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.SessionInfo;
import com.admin.service.LogServiceI;
import com.admin.service.SctimeServiceI;
import com.admin.service.SecuritiesCompanyServiceI;
import com.admin.util.ConfigUtil;
import com.admin.util.InfoUtil;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.web.util.TimeUtils;

/**
 * 广告管理控制器
 * 
 * @author
 * 
 */
@Controller
@RequestMapping("/sctimeController")
public class SctimeController extends BaseController {

	@Autowired
	private SctimeServiceI service;

	@Autowired
	private SecuritiesCompanyServiceI securitiesCompanyServiceI;

	@Autowired
	private LogServiceI logService;

	@Autowired
	private SecuritiesCompanyServiceI companyServiceI;

	/**
	 * 获取数据表格
	 * 
	 * @param user
	 * @return
	 * @throws IOException
	 */
	@RequestMapping("/dataGrid")
	@ResponseBody
	public DataGrid dataGrid(Sctime ad, PageHelper ph,
			HttpServletResponse response, HttpServletRequest request)
			throws IOException {
		response.setCharacterEncoding("utf-8");
		DataGrid d = service.dataGrid(ad, ph);

		return d;
	}

	/**
	 * 跳转到列表页面
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/sctime")
	public String ad(HttpServletRequest request) {
		List<SecuritiesCompany> list = companyServiceI.securitiesCompanyList();
		request.setAttribute("sclist", list);
		return "/admin/sctime/sctime";
	}

	/**
	 * 跳转到新增页面
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/addPage")
	public String addPage(HttpServletRequest request) {
		List<SecuritiesCompany> list = companyServiceI.securitiesCompanyList();
		request.setAttribute("sclist", list);
		return "/admin/sctime/adAdd";
	}

	/**
	 * 跳转到修改页面
	 * 
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/editPage")
	public String editPage(String id, HttpServletRequest request)
			throws Exception {
		Sctime ad = service.getSctime(id);
		List<SecuritiesCompany> list = companyServiceI.securitiesCompanyList();
		request.setAttribute("sclist", list);
		request.setAttribute("sc", ad);
		return "/admin/sctime/adEdit";
	}

	/**
	 * 删除
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public Json delete(String id, HttpSession session,
			HttpServletRequest request) {
		SessionInfo sessionInfo = (SessionInfo) session.getAttribute(ConfigUtil
				.getSessionInfoName());
		Json j = new Json();
		if (id != null && !id.equalsIgnoreCase(sessionInfo.getId())) {// 不能操作自己
			try {
				service.delete(id);
				j.setMsg("删除成功！");
				j.setSuccess(true);
			} catch (Exception e) {
				j.setMsg("删除失败!" + e.getMessage());
				j.setSuccess(false);
			}
		}
		return j;
	}

	/**
	 * 修改
	 * 
	 * @return
	 */
	@RequestMapping("/update")
	@ResponseBody
	public Json update(Sctime ad, HttpServletRequest request,
			HttpSession session) {
		Json j = new Json();
		try {
			SecuritiesCompany sc = securitiesCompanyServiceI.get(ad.getGsid());
			ad.setGsmc(sc.getCompanyName());
			service.update(ad);
			j.setSuccess(true);
			j.setMsg("添加成功！");
			j.setObj(ad);
		} catch (Exception e) {
			j.setMsg(e.getMessage());
		}
		return j;
	}

	/**
	 * 批量删除
	 * 
	 * @param ids
	 *            ('0','1','2')
	 * @return
	 */
	@RequestMapping("/pldelete")
	@ResponseBody
	public Json pljy(String ids, HttpSession session, HttpServletRequest request) {
		Json j = new Json();
		if (ids != null && ids.length() > 0) {
			for (String id : ids.split(",")) {
				if (id != null) {
					this.delete(id, session, request);
				}
			}
		}
		j.setMsg("批量删除成功！");
		j.setSuccess(true);
		return j;
	}

	/**
	 * 添加
	 * 
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public Json add(Sctime ad, HttpServletRequest request, HttpSession session) {
		Json j = new Json();
		try {
			SecuritiesCompany sc = securitiesCompanyServiceI.get(ad.getGsid());
			ad.setGsmc(sc.getCompanyName());
			service.add(ad);
			j.setSuccess(true);
			j.setMsg("添加成功！");
			j.setObj(ad);
		} catch (Exception e) {
			j.setMsg(e.getMessage());
		}
		return j;
	}

	@RequestMapping("/getoption")
	@ResponseBody
	public JSONArray getoption(HttpSession session, HttpServletRequest request) {
		JSONArray arr = new JSONArray();
		List<SecuritiesCompany> list = companyServiceI.securitiesCompanyList();
		for (int i = 0; i < list.size(); i++) {
			JSONObject j = new JSONObject();
			j.put("gsid", list.get(i).getId());
			j.put("gsname", list.get(i).getCompanyName());
			arr.add(j);
		}
		return arr;
	}
}
