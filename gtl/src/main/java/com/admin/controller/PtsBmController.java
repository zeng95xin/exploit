package com.admin.controller;

import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.admin.model.Log;
import com.admin.model.PtsBm;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.Json;
import com.admin.pageModel.PageHelper;
import com.admin.service.LogServiceI;
import com.admin.service.PtsBmServiceI;
import com.admin.util.InfoUtil;
import com.web.util.TimeUtils;

/**
 * 普通赛报名控制器
 * 
 * @author
 * 
 */
@Controller
@RequestMapping("/ptsBmController")
public class PtsBmController extends BaseController {

	@Autowired
	private PtsBmServiceI ptsBmService;
	@Autowired
	private LogServiceI logService;

	/**
	 * 跳转到普通赛报名管理页面
	 * 
	 * @return
	 */
	@RequestMapping("/manager")
	public String manager() {
		return "/admin/ptsBm/ptsBm";
	}

	/**
	 * 跳转到普通赛报名添加页面
	 * 
	 * @return
	 */
	@RequestMapping("/addPage")
	public String addPage(HttpSession session, HttpServletRequest request) {
		PtsBm r = new PtsBm();
		r.setId(UUID.randomUUID().toString());
		request.setAttribute("ptsBm", r);
		return "/admin/ptsBm/ptsBmAdd";
	}

	/**
	 * 添加普通赛报名
	 * 
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public Json add(PtsBm ptsBm) {
		Json j = new Json();
		try {
			ptsBmService.add(ptsBm);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		j.setSuccess(true);
		j.setMsg("添加成功！");
		return j;
	}

	/**
	 * 跳转到普通赛报名修改页面
	 * 
	 * @return
	 */
	@RequestMapping("/editPage")
	public String editPage(HttpServletRequest request, String id) {
		PtsBm r = ptsBmService.get(id);
		request.setAttribute("ptsBm", r);
		return "/admin/ptsBm/ptsBmEdit";
	}

	/**
	 * 修改普通赛报名
	 * 
	 * @param ptsBm
	 * @return
	 */
	@RequestMapping("/edit")
	@ResponseBody
	public Json edit(HttpServletRequest request, HttpSession session,
			PtsBm ptsBm) {
		Json j = new Json();
		try {
			ptsBmService.edit(ptsBm);
			Log log = new Log();
			log.setType("update");// 操作描述
			log.setAuthor(InfoUtil.getUser(session));// 操作员
			log.setIp(InfoUtil.getIpAddr(request));// ip
			log.setTteble("t_ptsBm");// 操作的表
			log.setTid(ptsBm.getId());// 操作的ID
			log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
			logService.add(log);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		j.setSuccess(true);
		j.setMsg("编辑成功！");
		return j;
	}

	/**
	 * 获得普通赛报名列表
	 * 
	 * @return
	 */
	@RequestMapping("/dataGrid")
	@ResponseBody
	public DataGrid dataGrid(PtsBm p, PageHelper ph) {
		return ptsBmService.dataGrid(p, ph);
	}

	/**
	 * 删除普通赛报名
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public Json delete(String id) {
		Json j = new Json();
		ptsBmService.delete(id);
		j.setMsg("删除成功！");
		j.setSuccess(true);
		return j;
	}

	@RequestMapping("/batchDelete")
	@ResponseBody
	public Json batchDelete(String ids, HttpSession session) {
		Json j = new Json();
		if (ids != null && ids.length() > 0) {
			for (String id : ids.split(",")) {
				if (id != null) {
					this.delete(id);
				}
			}
		}
		j.setMsg("批量删除成功！");
		j.setSuccess(true);
		return j;
	}
}
