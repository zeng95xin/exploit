package com.admin.controller;

import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.admin.model.Log;
import com.admin.model.SunShares;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.Json;
import com.admin.pageModel.PageHelper;
import com.admin.service.LogServiceI;
import com.admin.service.SunSharesServiceI;
import com.admin.util.InfoUtil;
import com.web.util.TimeUtils;

/**
 * 网友晒股控制器
 * 
 * @author
 * 
 */
@Controller
@RequestMapping("/sunSharesController")
public class SunSharesController extends BaseController {

	@Autowired
	private SunSharesServiceI sunSharesService;
	@Autowired
	private LogServiceI logService;

	/**
	 * 跳转到网友晒股管理页面
	 * 
	 * @return
	 */
	@RequestMapping("/manager")
	public String manager() {
		return "/admin/sunShares/sunShares";
	}

	/**
	 * 跳转到网友晒股添加页面
	 * 
	 * @return
	 */
	@RequestMapping("/addPage")
	public String addPage(HttpServletRequest request) {
		SunShares r = new SunShares();
		r.setId(UUID.randomUUID().toString());
		request.setAttribute("sunShares", r);
		return "/admin/sunShares/sunSharesAdd";
	}

	/**
	 * 添加网友晒股
	 * 
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public Json add(SunShares sunShares) {
		Json j = new Json();
		// <img
		// src="/gtl/attached/image/2015/08/06/229c08b7-4d49-4942-bd9e-4f1142daa8c9.gif"
		// alt="" />
		// &lt;img
		// src=&quot;/gtl/attached/image/2015/08/06/05289f0f-c80d-4086-8d81-e69e15e86f9e.gif&quot;
		// alt=&quot;&quot; /&gt;
		try {
			sunSharesService.add(sunShares);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		j.setSuccess(true);
		j.setMsg("添加成功！");
		return j;
	}

	/**
	 * 跳转到网友晒股逻辑删除页面
	 * 
	 * @return
	 */
	@RequestMapping("/editPage")
	public String editPage(HttpServletRequest request, String id) {
		SunShares r = sunSharesService.get(id);
		request.setAttribute("sunShares", r);
		return "/admin/sunShares/sunSharesEdit";
	}

	/**
	 * 逻辑删除网友晒股
	 * 
	 * @param sunShares
	 * @return
	 */
	@RequestMapping("/edit")
	@ResponseBody
	public Json edit(HttpServletRequest request, HttpSession session,
			SunShares sunShares) {
		Json j = new Json();
		try {
			sunSharesService.edit(sunShares);
			Log log = new Log();
			log.setType("update");// 操作描述
			log.setAuthor(InfoUtil.getUser(session));// 操作员
			log.setIp(InfoUtil.getIpAddr(request));// ip
			log.setTteble("t_sunShares");// 操作的表
			log.setTid(sunShares.getId());// 操作的ID
			log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
			logService.add(log);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		j.setSuccess(true);
		j.setMsg("编辑成功！");
		return j;
	}
	
	/**
	 * 编辑网友晒股内容
	 * @param request
	 * @param id
	 * @return
	 */
	@RequestMapping("/updatePage")
	public String updatePage(HttpServletRequest request, String id) {
		SunShares r = sunSharesService.get(id);
		request.setAttribute("sunShares", r);
		return "/admin/sunShares/sunSharesUpdate";
	}
	
	/**
	 * 编辑晒股
	 * @param request
	 * @param session
	 * @param sunShares
	 * @return
	 */
	@RequestMapping("/update")
	@ResponseBody
	public Json update(HttpServletRequest request, HttpSession session,
			SunShares sunShares) {
		Json j = new Json();
		SunShares ss=new SunShares();
		try {
			if (StringUtils.isNotBlank(sunShares.getId())) {
				ss=sunSharesService.get(sunShares.getId());
				if (ss != null) {
					if (StringUtils.isNotBlank(sunShares.getTitle())) {
						ss.setTitle(sunShares.getTitle());
					}
					if (StringUtils.isNotBlank(sunShares.getUserName())) {
						ss.setUserName(sunShares.getUserName());
					}
					if (StringUtils.isNotBlank(sunShares.getContent())) {
						ss.setContent(sunShares.getContent());
					}
				}
			}
			sunSharesService.update(ss);
			Log log = new Log();
			log.setType("update");// 操作描述
			log.setAuthor(InfoUtil.getUser(session));// 操作员
			log.setIp(InfoUtil.getIpAddr(request));// ip
			log.setTteble("t_sunShares");// 操作的表
			log.setTid(sunShares.getId());// 操作的ID
			log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
			logService.add(log);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		j.setSuccess(true);
		j.setMsg("编辑成功！");
		return j;
	}

	/**
	 * 获得网友晒股列表
	 * 
	 * @return
	 */
	@RequestMapping("/dataGrid")
	@ResponseBody
	public DataGrid dataGrid(SunShares p, PageHelper ph) {
		return sunSharesService.dataGrid(p, ph);
	}

	/**
	 * 删除网友晒股
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public Json delete(String id) {
		Json j = new Json();
		sunSharesService.delete(id);
		j.setMsg("删除成功！");
		j.setSuccess(true);
		return j;
	}

	@RequestMapping("/batchDelete")
	@ResponseBody
	public Json batchDelete(String ids, HttpSession session) {
		Json j = new Json();
		if (ids != null && ids.length() > 0) {
			for (String id : ids.split(",")) {
				if (id != null) {
					this.delete(id);
				}
			}
		}
		j.setMsg("批量删除成功！");
		j.setSuccess(true);
		return j;
	}
}
