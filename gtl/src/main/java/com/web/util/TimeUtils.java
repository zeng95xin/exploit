package com.web.util;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import org.apache.commons.lang3.StringUtils;

public class TimeUtils {
	public static String getNow14() {
		return getTime("yyyyMMddHHmmss");
	}

	public static String getTime(String pattern) {
		SimpleDateFormat format = new SimpleDateFormat(pattern);
		return format.format(Calendar.getInstance().getTime());
	}

	public static String getTime(String pattern, Date date) {
		SimpleDateFormat format = new SimpleDateFormat(pattern);
		return format.format(date);
	}

	public static Date getTime(String pattern, String time) {
		SimpleDateFormat format = new SimpleDateFormat(pattern);
		Date date = null;
		try {
			date = format.parse(time);
		} catch (ParseException e) {
			e.printStackTrace();
		}
		return date;
	}

	public static String getTime(String pattern, String pattern2, String time) {
		if (time == null || time.equals("")) {
			return "";
		}
		SimpleDateFormat format = null;
		if (time.length() == pattern.length()) {
			format = new SimpleDateFormat(pattern);
		} else if (time.length() == 8) {
			format = new SimpleDateFormat("yyyyMMdd");
		} else if (time.length() == 12) {
			format = new SimpleDateFormat("yyyyMMddHHmm");
		} else if (time.length() == 14) {
			format = new SimpleDateFormat("yyyyMMddHHmmss");
		} else {
			format = new SimpleDateFormat("yyyyMMddHHmmss");
		}

		Date date = null;
		try {
			date = format.parse(time);
		} catch (ParseException e) {
			// e.printStackTrace();
			return time;
		}
		return getTime(pattern2, date);
	}

	public static String formatToyyyy_MM_dd(String datestr8) {
		try {
			SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
			Date d = format.parse(datestr8);
			format = new SimpleDateFormat("yyyy-MM-dd");
			return format.format(d);
		} catch (Exception e) {
			return datestr8;
		}
	}

	public static String formatToyyyy_MM_dd_HH_mm_ss(String datestr14,
			Object object) {
		try {
			SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmss");
			Date d = format.parse(datestr14);
			format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			return format.format(d);
		} catch (Exception e) {
			return datestr14;
		}
	}

	public static String formatToyyyy_MM_dd_HH_mm_ss(String datestr14) {
		try {
			SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmss");
			Date d = format.parse(datestr14);
			format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			return format.format(d);
		} catch (Exception e) {
			return datestr14;
		}
	}

	public static String formatToyyyy_MM_dd_HH_mm(String datestr14) {
		try {
			SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmss");
			Date d = format.parse(datestr14);
			format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			return format.format(d);
		} catch (Exception e) {
			return datestr14;
		}
	}

	public static String formatTimestampDateToyyyy_MM_dd_HH_mm_ss(
			String timestamp, Object obj) throws Exception {
		try {
			return timestamp.substring(0, timestamp.lastIndexOf("."));
		} catch (Exception e) {
			return timestamp;
		}

	}

	public static String formatToyyyyMMddHHmm(String datestr14) {
		try {
			SimpleDateFormat format = new SimpleDateFormat(
					"yyyy-MM-dd HH:mm:ss");
			Date d = format.parse(datestr14);
			format = new SimpleDateFormat("yyyyMMddHHmmss");
			return format.format(d);
		} catch (Exception e) {
			return datestr14;
		}
	}

	public static String strlongToyyyyMMddHHmm(String longtime) {
		try {

			SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmss");
			return format.format(new Date(Long.parseLong(longtime) * 1000L));
		} catch (Exception e) {
			return null;
		}
	}
	
	/**
	 * 把一个时间戳转化为对应的年月日时分秒
	 * @param longtime
	 * @return
	 */
	public static String stringlongToyyyyMMddHHmm(String longtime) {
		

			SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmss");
			if (StringUtils.isNotBlank(longtime)) {
				
				return format.format(new Date(Long.parseLong(longtime)));
			}
			return null;
		
	}
	/**
	 * 根据时间戳获取年月日
	 * 格式yyyy-MM-dd
	 * @param longtime
	 * @return
	 */
	public static String stringlongToyyyyMMdd(String longtime) {
		

		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
		if (StringUtils.isNotBlank(longtime)) {
			
			return format.format(new Date(Long.parseLong(longtime)));
		}
		return null;
	
}
	/**
	 * 根据时间戳获取时分秒
	 * 格式HH:mm:ss
	 * @param longtime
	 * @return
	 */
	public static String stringlongToHHmmss(String longtime) {
		SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss");
		if (StringUtils.isNotBlank(longtime)) {
			
			return format.format(new Date(Long.parseLong(longtime)));
		}
		return null;
	
}

	public static void main(String[] args) {
		/*//System.out.println("转化:"
				+ TimeUtils.stringlongToyyyyMMddHHmm("1403166586000"));*/
		////System.out.println(Integer.parseInt("06"));
		//System.out.println(getTime("HH:mm:ss"));
	}
}
