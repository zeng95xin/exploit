package com.lcjh.enummole;

import java.util.ArrayList;
import java.util.List;

import org.springframework.util.StringUtils;

public enum PayOrderTypeEnum {
	listen("BUY_COMMODITY_listen", "偷听")
	,reward("BUY_COMMODITY_reward", "打赏")
	,problem("BUY_COMMODITY_problem", "提问")
	,licjh("BUY_COMMODITY_licjh", "理财计划")
	,sunShares("BUY_COMMODITY_gxt", "晒股")
	,zsxy("BUY_COMMODITY_zsxy", "掌声学院")
	,bowen("BUY_COMMODITY_zsxy", "博文")
	,NOT_PAY("NOT_PAY", "未支付")
	,ALREADY_PAY("ALREADY_PAY", "已经支付")
	,TIME_EXPIRE("TIME_EXPIRE", "已过时")
	;
	
	private final String	code;
	
	private final String	msg;
	
	private PayOrderTypeEnum(String code, String msg) {
		this.code = code;
		this.msg = msg;
	}
	
	public String getCode() {
		return code;
	}

	public String getMsg() {
		return msg;
	}
	
	public String toString(){
		return String.valueOf(this.ordinal());
	}
	
	public static PayOrderTypeEnum getByCode(String code) {
		if(StringUtils.hasText(code)){
			for (PayOrderTypeEnum _enum : values()) {
				if (_enum.getCode().equals(code)) {
					return _enum;
				}
			}
		}
		return null;
	}
	
	public static List<PayOrderTypeEnum> getAllEnum() {
		List<PayOrderTypeEnum> list = new ArrayList<PayOrderTypeEnum>();
		for (PayOrderTypeEnum _enum : values()) {
			list.add(_enum);
		}
		return list;
	}
}
