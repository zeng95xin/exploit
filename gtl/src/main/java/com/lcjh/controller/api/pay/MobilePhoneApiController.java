package com.lcjh.controller.api.pay;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.lcjh.biz.LoginnUser;
import com.lcjh.result.BooleanObjectResult;
import com.web.exception.CodeEnum;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

/**
 * 手机号
 * 
 * @author Administrator
 */
@Controller
@RequestMapping("/api/phone")
@Validated
@Api(tags = "-api-phone", description = "手机号,有关接口")
public class MobilePhoneApiController {

	@Autowired
	private LoginnUser loginUser;

	@ApiOperation(value = "获取id", notes = "", httpMethod = "POST")
	@RequestMapping(value = "/getBowenPageList", method = { RequestMethod.POST, RequestMethod.GET }, produces = {
			MediaType.APPLICATION_JSON_VALUE })
	@ResponseBody
	public void getPhone(HttpServletRequest request, HttpServletResponse res, String wechat,
			@ApiParam(value = "手机号", required = true) @RequestParam(required = false) String phone) throws Exception {
		BooleanObjectResult<Object> result = new BooleanObjectResult<Object>(true, CodeEnum.SUCCESS.getCode(), CodeEnum.SUCCESS.getMessage());
		String sql = "select id from loginuser  where phone =:phone";
		Map<String, Object> params = new HashMap<String, Object>();

		params.put("phone", (Object) phone);
		List<Object[]> findBySql = loginUser.findBySql(sql, params);
		result.setResult(findBySql);
		String resStr = "";
		String callback = request.getParameter("callback");
		if (null != callback) {
			resStr += callback + "(";
			resStr += JSONObject.toJSONString(result);
			resStr += ")";
		} else {
			resStr = JSONObject.toJSONString(result);
		}
		request.setCharacterEncoding("utf-8");
		res.setContentType("text/html;charset=utf-8"); 
		res.getWriter().write(resStr);
		res.getWriter().flush();
	}

}
