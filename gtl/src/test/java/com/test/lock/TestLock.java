package com.test.lock;

import java.text.ParseException;

import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;

import com.admin.service.MrzcjsServiceI;

public class TestLock extends TestBase{
	
//	select a.userid,a.sjid,
//	IFNULL(SUM(case a.mrlx when '1' then (a.cgsl+0)*(b.jsprice+0) else 0 end )+c.sjsjb+0,0)  sjzczl,
//	IFNULL(SUM(case a.mrlx when '0' then (a.cgsl+0)*(b.jsprice+0) else 0 end )+c.ptsjb+0,0) zczl,
//	DATE_FORMAT(now(),'%Y-%m-%d') as jstime,
//	c.`name`
//	from t_gpsy a 
//	left join loginuser c on a.userid=c.id 
//	left JOIN t_interfacedata b on a.zqdm=b.zqdm 
//	where b.jsprice is not null and a.userid in (select id from loginuser)
//  group by a.userid,a.sjid;
	
	
	@Autowired private MrzcjsServiceI  mrzcjsServiceI;  
	@Test
	public void testLock() throws InterruptedException{
		Thread thread1 = new Thread(new Runnable() {
			@Override
			public void run() {
				try {
					Thread.sleep(10);
				} catch (InterruptedException e1) {
					e1.printStackTrace();
				}
				try {
					mrzcjsServiceI.fjyDateUpdate();
				} catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
		Thread thread2 = new Thread(new Runnable() {
			@Override
			public void run() {
				try {
					Thread.sleep(10);
				} catch (InterruptedException e1) {
					e1.printStackTrace();
				}
				try {
					mrzcjsServiceI.fjyDateUpdate();
				} catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
		thread1.start();
		thread2.start();
	}
	
	
}
