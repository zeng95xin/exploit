package com.web.controller;

import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import jxl.Workbook;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;
import jxl.write.biff.RowsExceededException;

import org.apache.commons.lang3.StringUtils;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.admin.controller.BaseController;
import com.admin.model.GoodsManagement;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.Json;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.Role;
import com.admin.pageModel.SessionInfo;
import com.admin.pageModel.Tree;
import com.admin.pageModel.User;
import com.admin.service.RoleServiceI;
import com.admin.service.UserServiceI;
import com.admin.service.WebServiceI;
import com.admin.util.ConfigUtil;
import com.web.entity.Person;
import com.web.util.PageModel;
import com.web.util.TestRun;
import com.web.util.TestTimer;
import com.web.util.TimeUtils;

/**
 * 前台管理controller
 * 
 * @author Administrator
 * 
 */
@Controller
@RequestMapping("/web")
public class WebController extends BaseController {
	@Autowired
	private WebServiceI webService;

	WritableWorkbook book = null;

	/**
	 * 跳转到页面
	 * 
	 * @return
	 */
	@RequestMapping("/index")
	public String manager() {
		// 每天的date时刻执行task, 仅执行一次
		// timer.schedule(task, date);
		return "/page/index";

	}

	/**
	 * 跳转到页面
	 * 
	 * @return
	 */
	@RequestMapping("/xxsh")
	public String xxsh(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/page/xxsh";
	}

	/**
	 * 获取用户数据表格
	 * 
	 * @param user
	 * @return
	 */
	@RequestMapping("/dataGrid")
	@ResponseBody
	public DataGrid dataGrid(Person p, PageHelper ph) {
		return webService.dataGridForOne(p, ph);
	}

	/**
	 * 删除用户
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public Json delete(String id, HttpSession session) {
		SessionInfo sessionInfo = (SessionInfo) session.getAttribute(ConfigUtil
				.getSessionInfoName());
		Json j = new Json();
		if (id != null && !id.equalsIgnoreCase(sessionInfo.getId())) {// 不能删除自己
			webService.delete(id);
		}
		j.setMsg("删除成功！");
		j.setSuccess(true);
		return j;
	}

	/**
	 * 跳转到添加用户页面
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/addPage")
	public String addPage(HttpServletRequest request) {
		return "/page/personAdd";
	}

	/**
	 * 添加用户
	 * 
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public Json add(Person p, HttpServletRequest request) {
		Json j = new Json();
		try {
			webService.add(p);
			j.setSuccess(true);
			j.setMsg("添加成功！");
			j.setObj(p);
		} catch (Exception e) {
			// e.printStackTrace();
			j.setMsg(e.getMessage());
		}
		return j;
	}

	/**
	 * 跳转到用户修改页面
	 * 
	 * @return
	 */
	@RequestMapping("/editPage")
	public String editPage(HttpServletRequest request, String id) {
		Person u = webService.get(id);
		request.setAttribute("person", u);
		return "/page/personEdit";
	}

	/**
	 * 修改用户
	 * 
	 * @param user
	 * @return
	 */
	@RequestMapping("/edit")
	@ResponseBody
	public Json edit(Person p) {
		Json j = new Json();
		try {
			webService.edit(p);
			j.setSuccess(true);
			j.setMsg("编辑成功！");
			j.setObj(p);
		} catch (Exception e) {
			// e.printStackTrace();
			j.setMsg(e.getMessage());
		}
		return j;
	}

	/**
	 * 批量删除用户
	 * 
	 * @param ids
	 *            ('0','1','2')
	 * @return
	 */
	@RequestMapping("/batchDelete")
	@ResponseBody
	public Json batchDelete(String ids, HttpSession session) {
		Json j = new Json();
		if (ids != null && ids.length() > 0) {
			for (String id : ids.split(",")) {
				if (id != null) {
					this.delete(id, session);
				}
			}
		}
		j.setMsg("批量删除成功！");
		j.setSuccess(true);
		return j;
	}

	/**
	 * 导出数据为excel
	 * 
	 * @param request
	 * @param response
	 * @throws Exception
	 */
	@RequestMapping(value = "/export")
	public void exportExcel(HttpServletRequest request,
			HttpServletResponse response) throws Exception {

		List<Person> list = new ArrayList<Person>();

		HSSFWorkbook wb = webService.export(list);
		response.setContentType("application/vnd.ms-excel");
		String filename = "客户信息" + TimeUtils.getNow14() + ".xls";
		response.setHeader("Content-disposition", "attachment;filename="
				+ filename);
		OutputStream ouputStream = response.getOutputStream();
		wb.write(ouputStream);
		ouputStream.flush();
		ouputStream.close();

	}

}
