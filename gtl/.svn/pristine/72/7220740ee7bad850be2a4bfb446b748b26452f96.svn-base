package com.admin.service.impl;

import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.model.JPushChatModel;
import com.admin.model.Message;
import com.admin.service.JPushApiClient;
import com.admin.service.MessageServiceI;
import com.web.util.TimeUtils;

import cn.jpush.api.JPushClient;
import cn.jpush.api.push.PushResult;
import cn.jpush.api.push.model.Options;
import cn.jpush.api.push.model.Platform;
import cn.jpush.api.push.model.PushPayload;
import cn.jpush.api.push.model.audience.Audience;
import cn.jpush.api.push.model.notification.AndroidNotification;
import cn.jpush.api.push.model.notification.IosNotification;
import cn.jpush.api.push.model.notification.Notification;

@Service
public class JPushApiClientImpl implements JPushApiClient {
//	private static Logger logger=Logger.getLogger(JPushApiClientImpl.class);
	
	String jPushAppKey = "76d4f4592bd5909e666ea527";
	String jPushMasterSecret = "c9acc22b69d867b5913064c4";
	
	@Autowired
	private MessageServiceI messageServiceI;

	@Override
	public void jPush(List<String> alias, JPushChatModel jpModel) {
		Message message=new Message();
		StringBuffer buffer=new StringBuffer();
		try {
			
			if(jpModel!=null){
				if(jpModel.getTitle()!=null){
					buffer.append("|title:"+jpModel.getTitle()+"|,");
				}
				if(jpModel.getContent()!=null){
					buffer.append(",|content:"+jpModel.getContent()+"|");
				}
				if(jpModel.getType()!=null){
					buffer.append(",|type:"+jpModel.getType()+"|");
				}
				if(jpModel.getDataId()!=null){
					buffer.append(",|dataId:"+jpModel.getDataId()+"|");
				}
				buffer.append(",|alias{");
				for(int i=0;i<alias.size();i++){
					if(i==alias.size()-1){
						buffer.append(alias.get(i));
					}else{
						buffer.append(alias.get(i)+",");
					}
				}
				buffer.append("}|");
				
				message.setId(UUID.randomUUID().toString());
				message.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
				
				
			}
			
			JPushClient jpushClient = new JPushClient(jPushMasterSecret,
					jPushAppKey, 3);
			PushPayload payload = alias_buildPushObject_ios_audienceMore_messageWithExtras(
					alias, jpModel);
			PushResult result = jpushClient.sendPush(payload);
			buffer.append(",|推送成功:"+result+"|");
			message.setMessage(buffer.toString());
			messageServiceI.save(message);
//			logger.debug("推送日志：" + result);
		} catch (Exception e) {
//			if(jpModel!=null){
//				logger.debug("------推送异常：type:"+jpModel.getType()+"|title:"+jpModel.getTitle()+"|dataId:"+jpModel.getDataId()+"|Error:" +e.getMessage()+"------");
//			}
			buffer.append(",|推送异常:"+e.getMessage()+"|");
			message.setMessage(buffer.toString());
			messageServiceI.save(message);
			e.printStackTrace();
		}
		
	}
	
	public void jPush_rigstId(List<String> rigstId, JPushChatModel jpModel) {
		Message message=new Message();
		StringBuffer buffer=new StringBuffer();
		try {
			
			if(jpModel!=null){
				if(jpModel.getTitle()!=null){
					buffer.append("|title:"+jpModel.getTitle()+"|");
				}
				if(jpModel.getContent()!=null){
					buffer.append(",|content:"+jpModel.getContent()+"|");
				}
				if(jpModel.getType()!=null){
					buffer.append(",|type:"+jpModel.getType()+"|");
				}
				if(jpModel.getDataId()!=null){
					buffer.append(",|dataId:"+jpModel.getDataId()+"|");
				}
				buffer.append(",|alias{");
				for(int i=0;i<rigstId.size();i++){
					if(i==rigstId.size()-1){
						buffer.append(rigstId.get(i));
					}else{
						buffer.append(rigstId.get(i)+",");
					}
				}
				buffer.append("}|");
				message.setId(UUID.randomUUID().toString());
				message.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
			}
			JPushClient jpushClient = new JPushClient(jPushMasterSecret,
					jPushAppKey, 3);
			PushPayload payload =rigstId_buildPushObject_ios_audienceMore_messageWithExtras(
					rigstId, jpModel);
			PushResult result = jpushClient.sendPush(payload);
			buffer.append(",|推送成功:"+result+"|");
			message.setMessage(buffer.toString());
			messageServiceI.save(message);
//			logger.info("推送日志：" + result);
		} catch (Exception e) {
//			logger.error("------推送异常：type:"+jpModel.getType()+"|title:"+jpModel.getTitle()+"|content"+jpModel.getContent()+"|dataId:"+jpModel.getDataId()+"|Error:" +e.getMessage()+"------");
			buffer.append(",|推送异常:"+e.getMessage()+"|");
			message.setMessage(buffer.toString());
			messageServiceI.save(message);
			e.printStackTrace();
		}
	}
	
	public static PushPayload alias_buildPushObject_ios_audienceMore_messageWithExtras(
			List<String> alias, JPushChatModel model) {
		return PushPayload
				.newBuilder()
				.setPlatform(Platform.all())
				.setAudience(Audience.alias(alias))
				.setNotification(
						Notification
								.newBuilder()
								.addPlatformNotification(
										IosNotification
												.newBuilder()
												.setAlert(model.getContent())
												.setBadge(5)
												.addExtra("type",
														model.getType())
												// 跳转类型type
												.addExtra("content",
														model.getContent())
												.addExtra("title",
														model.getTitle())
												.addExtra("sendUserId",
														model.getSendUserId())
												.addExtra("url", model.getUrl())
												.addExtra("dataId",
														model.getDataId()) // 文章ID

												.build())
								.addPlatformNotification(
										AndroidNotification
												.newBuilder()
												.setAlert(model.getContent())
												.setTitle(model.getTitle())
												.addExtra("type",
														model.getType())
												.addExtra("content",
														model.getContent())
												.addExtra("title",
														model.getTitle())
												.addExtra("sendUserId",
														model.getSendUserId())
												.addExtra("url", model.getUrl())
												.addExtra("dataId",
														model.getDataId())
												.build()).build())
				.setOptions(
						Options.newBuilder().setApnsProduction(true).build())
				.build();
	}
	
	
	public static PushPayload rigstId_buildPushObject_ios_audienceMore_messageWithExtras(
			List<String> rigstId, JPushChatModel model) {
		return PushPayload
				.newBuilder()
				.setPlatform(Platform.all())
				.setAudience(Audience.registrationId(rigstId))
				.setNotification(
						Notification
								.newBuilder()
								.addPlatformNotification(
										IosNotification
												.newBuilder()
												.setAlert(model.getContent())
												.setBadge(5)
												.addExtra("type",
														model.getType())
												// 跳转类型type
												.addExtra("content",
														model.getContent())
												.addExtra("title",
														model.getTitle())
												.addExtra("sendUserId",
														model.getSendUserId())
												.addExtra("url", model.getUrl())
												.addExtra("dataId",
														model.getDataId()) // 文章ID

												.build())
								.addPlatformNotification(
										AndroidNotification
												.newBuilder()
												.setAlert(model.getContent())
												.setTitle(model.getTitle())
												.addExtra("type",
														model.getType())
												.addExtra("content",
														model.getContent())
												.addExtra("title",
														model.getTitle())
												.addExtra("sendUserId",
														model.getSendUserId())
												.addExtra("url", model.getUrl())
												.addExtra("dataId",
														model.getDataId())
												.build()).build())
				.setOptions(
						Options.newBuilder().setApnsProduction(true).build())
				.build();
	}

}
