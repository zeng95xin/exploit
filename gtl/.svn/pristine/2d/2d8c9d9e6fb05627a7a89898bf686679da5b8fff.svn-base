package com.admin.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.CollectionTemplateConfigDaoI;
import com.admin.model.CollectionTemplateConfig;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.service.CollectionTemplateConfigServiceI;
import com.alibaba.druid.util.StringUtils;

@Service
public class CollectionTemplateConfigServiceImpl implements
		CollectionTemplateConfigServiceI {

	@Autowired
	private CollectionTemplateConfigDaoI collectionTemplateConfigDao;

	@Override
	public DataGrid dataGrid(CollectionTemplateConfig collectionTemplateConfig,
			PageHelper ph) {
		DataGrid dg = new DataGrid();
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from CollectionTemplateConfig t ";
		List<CollectionTemplateConfig> l = collectionTemplateConfigDao.find(hql
				+ whereHql(collectionTemplateConfig, params) + orderHql(ph),
				params, ph.getPage(), ph.getRows());
		dg.setRows(l);
		dg.setTotal(collectionTemplateConfigDao.count("select count(*) " + hql
				+ whereHql(collectionTemplateConfig, params), params));
		return dg;
	}

	private String whereHql(CollectionTemplateConfig collectionTemplateConfig,
			Map<String, Object> params) {
		String hql = "";
		if (collectionTemplateConfig != null) {
			hql += " where 1=1 ";

		}
		return hql;
	}

	private String orderHql(PageHelper ph) {
		String orderString = "";
		if (ph.getSort() != null && ph.getOrder() != null) {
			orderString = " order by t." + ph.getSort() + " " + ph.getOrder();
		}
		return orderString;
	}

	@Override
	public void add(CollectionTemplateConfig collectionTemplateConfig)
			throws Exception {
		CollectionTemplateConfig u = new CollectionTemplateConfig();
		BeanUtils.copyProperties(collectionTemplateConfig, u);
		u.setCjcs("0");
		u.setCjxxl("0");
		u.setId(UUID.randomUUID().toString());
		collectionTemplateConfigDao.save(u);
	}

	@Override
	public CollectionTemplateConfig get(String id) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("id", id);
		CollectionTemplateConfig t = collectionTemplateConfigDao
				.get("select distinct t from CollectionTemplateConfig t where t.id = :id",
						params);
		return t;
	}

	@Override
	public void edit(CollectionTemplateConfig co) throws Exception {
		CollectionTemplateConfig c = collectionTemplateConfigDao.get(
				CollectionTemplateConfig.class, co.getId());
		c.setCjdz(co.getCjdz());
		c.setWzmc(co.getWzmc());
		c.setBtreg(co.getBtreg());
		c.setNrreg(co.getNrreg());
		c.setFyreg(co.getFyreg());
		c.setZfjreg(co.getZfjreg());
		collectionTemplateConfigDao.update(c);
	}

	@Override
	public void edit2(CollectionTemplateConfig co) throws Exception {
		collectionTemplateConfigDao.update(co);
	}

	@Override
	public void delete(String id) {
		collectionTemplateConfigDao.delete(collectionTemplateConfigDao.get(
				CollectionTemplateConfig.class, id));
	}

	@Override
	public List<CollectionTemplateConfig> collectionTemplateConfigList() {
		List<CollectionTemplateConfig> t = collectionTemplateConfigDao
				.find("from CollectionTemplateConfig t ");
		return t;
	}

}
