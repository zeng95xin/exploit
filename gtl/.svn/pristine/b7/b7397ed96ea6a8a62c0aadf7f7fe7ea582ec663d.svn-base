package com.admin.service.impl;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.FtgMyCareDaoI;
import com.admin.dao.JfxhDaoI;
import com.admin.dao.LoginUserDaoI;
import com.admin.model.Jfxhjl;
import com.admin.model.LoginUser;
import com.admin.model.FtgMyCare;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.service.FtgMyCareServiceI;
import com.web.util.TimeUtils;

@Service
public class FtgMyCareServiceImpl implements FtgMyCareServiceI {

	@Autowired
	private FtgMyCareDaoI ftgMyCareDao;

	@Autowired
	private LoginUserDaoI loginUserDaoI;

	@Autowired
	private JfxhDaoI jfxhDaoI;

	@Override
	public DataGrid dataGrid(FtgMyCare FtgMyCare, PageHelper ph) {
		DataGrid dg = new DataGrid();
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from FtgMyCare t ";
		List<FtgMyCare> l = ftgMyCareDao.find(hql + whereHql(FtgMyCare, params)
				+ orderHql(ph), params, ph.getPage(), ph.getRows());
		dg.setRows(l);
		dg.setTotal(ftgMyCareDao.count(
				"select count(*) " + hql + whereHql(FtgMyCare, params), params));
		return dg;
	}

	private String whereHql(FtgMyCare FtgMyCare, Map<String, Object> params) {
		String hql = "";
		if (FtgMyCare != null) {
			hql += " where 1=1 ";
			if (StringUtils.isNotBlank(FtgMyCare.getUserId())) {
				hql += " and t.userId = :userId";
				params.put("userId", FtgMyCare.getUserId());
			}
			if (StringUtils.isNotBlank(FtgMyCare.getConcernedId())) {
				hql += " and t.concernedId = :concernedId";
				params.put("concernedId", FtgMyCare.getConcernedId());
			}
		}
		return hql;
	}

	private String orderHql(PageHelper ph) {
		String orderString = "";
		if (ph.getSort() != null && ph.getOrder() != null) {
			orderString = " order by t." + ph.getSort() + " " + ph.getOrder();
		}
		return orderString;
	}

	@Override
	public void add(FtgMyCare FtgMyCare) throws Exception {
		FtgMyCare u = new FtgMyCare();
		BeanUtils.copyProperties(FtgMyCare, u);
		u.setId(UUID.randomUUID().toString());
		ftgMyCareDao.save(u);
	}

	@Override
	public FtgMyCare get(String id) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("id", id);
		FtgMyCare t = ftgMyCareDao.get(
				"select distinct t from FtgMyCare t where t.id = :id", params);
		return t;
	}

	@Override
	public void edit(FtgMyCare FtgMyCare) throws Exception {
		ftgMyCareDao.update(FtgMyCare);
	}

	@Override
	public void delete(String id) {
		ftgMyCareDao.delete(ftgMyCareDao.get(FtgMyCare.class, id));
	}

	@Override
	public List<FtgMyCare> ftgMyCareList() {
		List<FtgMyCare> t = ftgMyCareDao.find("from FtgMyCare t ");
		return t;
	}

	@Override
	public List<FtgMyCare> FtgMyCareList(FtgMyCare FtgMyCare, String page,
			String rows) {
		if (StringUtils.isBlank(page)) {
			page = "1";
		}
		if (StringUtils.isBlank(rows)) {
			rows = "10";
		}
		Map<String, Object> params = new HashMap<String, Object>();
		List<FtgMyCare> t = ftgMyCareDao.find(
				"from FtgMyCare t " + whereHql(FtgMyCare, params), params,
				Integer.valueOf(page), Integer.valueOf(rows));
		return t;
	}

	@Override
	public void perMonthKJF() throws Exception {
		List<FtgMyCare> list = ftgMyCareDao.find("from FtgMyCare t ");
		for (int i = 0; i < list.size(); i++) {
			FtgMyCare m = list.get(i);
			// 关注人信息
			LoginUser gzr = loginUserDaoI.get("from LoginUser t where id='"
					+ m.getUserId() + "'");
			int jf = gzr.getJifen();
			if (jf < 10) {
				gzr.setJifen(0);
			} else {
				gzr.setJifen(jf - 10);
			}
			loginUserDaoI.update(gzr);
			Jfxhjl jj = new Jfxhjl();
			jj.setResaon("关注投顾每月积分消耗");
			jj.setUserid(m.getUserId());
			if (jf < 10) {
				jj.setSl(jf + "");
			} else {
				jj.setSl("-10");
			}
			jj.setWzid(m.getConcernedId());
			jj.setId(UUID.randomUUID().toString());
			jj.setXftime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
			jfxhDaoI.save(jj);

			// 被关注人
			LoginUser user = loginUserDaoI.get("from LoginUser t where id='"
					+ m.getConcernedId() + "'");
			int jf1 = user.getJifen();
			user.setJifen(jf1 + 10);
			loginUserDaoI.update(user);

			Jfxhjl jj1 = new Jfxhjl();
			jj1.setResaon("被关注(每月)");
			jj1.setUserid(m.getConcernedId());
			jj1.setSl("+10");
			jj1.setId(UUID.randomUUID().toString());
			jj1.setXftime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
			jj1.setWzid(m.getUserId());
			jfxhDaoI.save(jj1);
		}
	}

	@Override
	public List<FtgMyCare> careMeList(String tguserid, String page, String rows) {
		if (StringUtils.isBlank(page)) {
			page = "1";
		}
		if (StringUtils.isBlank(rows)) {
			rows = "10";
		}
		String hql = " from FtgMyCare where 1=1";
		if (StringUtils.isNotBlank(tguserid)) {
			hql += " and CONCERNEDID ='" + tguserid + "'";
		}
		List<FtgMyCare> list = ftgMyCareDao.find(hql, Integer.valueOf(page),
				Integer.valueOf(rows));
		return list;
	}

	@Override
	public List<String> getUseridList(String tgid) {
		// TODO Auto-generated method stub
		String hql = " from FtgMyCare where 1=1 and  CONCERNEDID ='" + tgid
				+ "'";
		List<FtgMyCare> list = ftgMyCareDao.find(hql);
		List<String> useridlist = new ArrayList<String>();
		if (list.size() > 0) {
			for (int i = 0; i < list.size(); i++) {
				FtgMyCare c = list.get(i);
				useridlist.add(c.getUserId().replace("-", "")); // 发送时别名不能有-，替换为""
			}
		}
		return useridlist;
	}

	@Override
	public List<FtgMyCare> getCareTgList(String tgid) {
		String hql = " from FtgMyCare where 1=1 and  CONCERNEDID ='" + tgid
				+ "'";
		List<FtgMyCare> list = ftgMyCareDao.find(hql);

		return list;
	}

	@Override
	public FtgMyCare getYgzInfo(String userid, String concernedId) {
		// TODO Auto-generated method stub
		String hql = " from FtgMyCare where 1=1 and userid='" + userid
				+ "' and  concernedId ='" + concernedId + "'";
		FtgMyCare ygz = ftgMyCareDao.get(hql);
		return ygz;
	}

	@Override
	public List<FtgMyCare> ftgCareListByUserid(String userid) {
		String hql = "from FtgMyCare where 1=1 and userid='" + userid + "'";
		List<FtgMyCare> list = ftgMyCareDao.find(hql);
		return list;
	}

	@Override
	public String getBgzd(String userid) {
		// TODO Auto-generated method stub
		String sql = "select count(userid) from t_ftgmycare where  CONCERNEDID='"
				+ userid + "'";
		BigInteger count = ftgMyCareDao.countBySql(sql);
		return count.toString();
	}

	@Override
	public FtgMyCare isCare(String userid, String nrId) {
		String hql = "from FtgMyCare where 1=1 and userid='" + userid
				+ "' and CONCERNEDID='" + nrId + "'";
		FtgMyCare iscare = ftgMyCareDao.get(hql);
		return iscare;
	}
}
