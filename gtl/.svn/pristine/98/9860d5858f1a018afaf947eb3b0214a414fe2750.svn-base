package com.web.controller;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.admin.service.HostMainService;
import com.admin.service.ReplayAskService;
import com.web.entity.HostMain;
import com.web.entity.ReplayAsk;
import com.web.exception.BusinessDealException;
import com.web.exception.BusinessValidateException;
import com.web.exception.CodeEnum;
import com.web.exception.PatternException;
import com.web.result.BaseObjectResult;

/**
 * 问股回复控制器
 * @author Administrator
 *
 */
@Controller
@RequestMapping("/replayAsk")
public class ReplayAskContrller {
	
	private static final Logger logger=LoggerFactory.getLogger(ReplayAskContrller.class);
	
	@Autowired
	private ReplayAskService replayAskService;
	
	@Autowired
	private HostMainService hostMainService;
	
	/**
	 * 问股回复新增
	 * @param req
	 * @param res
	 * @param replayAsk
	 * @return
	 */
	@RequestMapping(value = "/add", method = {RequestMethod.GET,RequestMethod.POST}, produces = { MediaType.APPLICATION_JSON_VALUE })
	@ResponseBody
	public BaseObjectResult<ReplayAsk> addReplay(HttpServletRequest req,HttpServletResponse res,ReplayAsk replayAsk){
		logger.info("问股回复新增{}", replayAsk);
		res.setCharacterEncoding("UTF-8");
		BaseObjectResult<ReplayAsk> baseResult = new BaseObjectResult<ReplayAsk>();
		HostMain hm=new HostMain();
		try {
			req.setCharacterEncoding("UTF-8");
			// 参数校验
			if (replayAsk == null) {
				throw new PatternException("回复信息不能为空");
			}
			if (StringUtils.isBlank(replayAsk.getAskId())) {
				throw new PatternException("问股Id不能为空");
			}
			if (StringUtils.isBlank(replayAsk.getHostId())) {
				throw new PatternException("主播Id不能为空");
			}
			if (StringUtils.isBlank(replayAsk.getReplayContent())) {
				throw new PatternException("回复详情不能为空");
			}
			hm=hostMainService.get(replayAsk.getHostId());
			
		   if(hm == null ){
			  throw new PatternException("主播不存在");
			}else {
				if (StringUtils.isNotBlank(hm.getHostNickname())) {
					replayAsk.setHostNickname(hm.getHostNickname());
				}
				if (StringUtils.isNotBlank(hm.getHostImage())) {
					replayAsk.setHostImage(hm.getHostImage());
				}
			}
		  replayAsk.setId(UUID.randomUUID().toString());
		  replayAsk.setReplayHMS(new SimpleDateFormat("HH:mm:ss").format(new Date()));
		  replayAsk.setReplayYMD(new SimpleDateFormat("yyyy-MM-dd").format(new Date()));
		  replayAskService.add(replayAsk);
		  
		  hm.setHsotReplay(hm.getHsotReplay()+1);
		  hostMainService.update(hm);
		  
		  baseResult.setErrorCode("0");
		  baseResult.setErrorMessage("回复成功！");
		  baseResult.setResult(replayAsk);
		} catch (PatternException e) {
			//System.out.println("参数校验失败," + e.getMessage());
			baseResult = new BaseObjectResult<ReplayAsk>(
					CodeEnum.PATTERN_ERROR.getCode(), e.getMessage());
		} catch (BusinessDealException e) {
			//System.out.println("业务处理异常， 错误信息：" + e.getMessage());
			baseResult = new BaseObjectResult<ReplayAsk>(
					CodeEnum.BUSSINESS_HANDLE_ERROR.getCode(), e.getMessage());
		} catch (BusinessValidateException e) {
			//System.out.println("业务验证异常， 错误信息：" + e.getMessage());
			baseResult = new BaseObjectResult<ReplayAsk>(
					CodeEnum.BUSSINESS_VALIDATE_ERROR.getCode(), e.getMessage());
		} catch (Exception e) {
			e.printStackTrace();
			//System.out.println("系统异常，" + e.getMessage());
			baseResult = new BaseObjectResult<ReplayAsk>(
					CodeEnum.SYSTEM_ERROR.getCode(), "系统异常");
		}
		
		return baseResult;
		
	}

}
