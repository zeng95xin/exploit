package com.web.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.admin.controller.BaseController;
import com.admin.model.Jfxhjl;
import com.admin.model.LoginUser;
import com.admin.model.Tgsdz;
import com.admin.model.Tgxt;
import com.admin.model.TxwxGl;
import com.admin.model.User_SanFang;
import com.admin.service.GqbServiceI;
import com.admin.service.GxtServiceI;
import com.admin.service.JfxhjlfServiceI;
import com.admin.service.LoginUserServiceI;
import com.admin.service.PinglunServiceI;
import com.admin.service.UserSanFangService;
import com.admin.service.XwxServiceI;
import com.admin.util.InfoUtil;
import com.admin.util.MD5Util;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.huanxin.util.ChartUtlis;
import com.lcjh.result.BooleanObjectResult;
import com.web.exception.CodeEnum;
import com.web.util.TimeUtils;

/**
 * 前台公共管理controller
 * 
 * @author Cyl </br>
 *         (*)必传字段
 */
@Controller
@RequestMapping("/commonMore")
public class CommonMoreController extends BaseController {

	private static Logger logger = LoggerFactory.getLogger(CommonMoreController.class);

	@Autowired
	private LoginUserServiceI loginUserService;
	@Autowired
	private UserSanFangService userSanFangService;
	@Autowired
	private XwxServiceI xwxServiceI;
	@Autowired
	private GqbServiceI gqbServiceI;
	@Autowired
	private PinglunServiceI pinglunServiceI;
	@Autowired
	private GxtServiceI gxtServiceI;
	@Autowired
	private JfxhjlfServiceI jfxhjlfServiceI;

	/**
	 * 股天乐接口文档 <br>
	 * <h3>描述:</h3> 根据type跳转不同的控制器
	 * 
	 * @param type
	 * @return
	 */
	@RequestMapping("/getInfoMore")
	@ResponseBody
	public void getInfoMore(HttpServletRequest request, HttpServletResponse response, String wechat, ModelMap modelMap,
			HttpSession session) throws Exception {
		BooleanObjectResult<Object> result = new BooleanObjectResult<Object>(true, CodeEnum.SUCCESS.getCode(),
				CodeEnum.SUCCESS.getMessage());

		String type = request.getParameter("type");
		response.setCharacterEncoding("utf-8");
		if (type.equals("wzlb")) {// 文章列表
			result.setResult(this.newsAPI(request));
			String resStr = "";
			String callback = request.getParameter("callback");
			if (null != callback) {
				resStr += callback + "(";
				resStr += JSONObject.toJSONString(result);
				resStr += ")";
			} else {
				resStr = JSONObject.toJSONString(result);
			}
			request.setCharacterEncoding("utf-8");
			response.setContentType("text/html;charset=utf-8");
			response.getWriter().write(resStr);
			response.getWriter().flush();
		} else if (type.equals("")) {

		}
		result.setResult(null);
		String resStr = "";
		String callback = request.getParameter("callback");
		if (null != callback) {
			resStr += callback + "(";
			resStr += JSONObject.toJSONString(result);
			resStr += ")";
		} else {
			resStr = JSONObject.toJSONString(result);
		}
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/html;charset=utf-8");
		response.getWriter().write(resStr);
		response.getWriter().flush();
	}

	// ------------------------------------------！到最后！-------------------------------------------

	/*
	 * 文章列表
	 */
	private JSONObject newsAPI(HttpServletRequest request) throws Exception {

		String userid = request.getParameter("userid");
		String lanmu = request.getParameter("lanmu");
		String newsId = request.getParameter("newsid");
		String page = request.getParameter("page");
		String rows = request.getParameter("rows");

		JSONObject json = new JSONObject();
		JSONArray arr = new JSONArray();
		// lanmu=8新闻线 7股趣吧 6股学堂
		if (newsId != null) {
			String visitCount = request.getParameter("visitCount");
			if (lanmu.equals("8")) {
				TxwxGl t = new TxwxGl();
				t.setId(newsId);
				t.setVisitCount(visitCount);
				xwxServiceI.saveVisit(t);
			} else if (lanmu.equals("7")) {
				Tgsdz tgsdz = new Tgsdz();
				tgsdz.setId(newsId);
				tgsdz.setVisitCount(visitCount);
				gqbServiceI.saveVisit(tgsdz);
			} else if (lanmu.equals("6")) {
				Tgxt gxtNews = new Tgxt();
				gxtNews.setId(newsId);
				gxtNews.setVisitCount(visitCount);
				gxtServiceI.saveVisit(gxtNews);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "修改成功");
			return json;
		}

		if (lanmu.equals("8")) {
			String fl = request.getParameter("fl");// 新闻线分类

			List<TxwxGl> list = xwxServiceI.getList(fl, page, rows);
			int total = xwxServiceI.getCount(fl);
			for (int i = 0; i < list.size(); i++) {
				JSONObject j = new JSONObject();
				TxwxGl t = list.get(i);
				j.put("id", t.getId());
				j.put("xwtitel", t.getXwtitel());
				j.put("xwfbz", t.getXwfbz());
				j.put("xwfbfl", t.getXwfbfl());
				j.put("xwfbtime", t.getXwfbtime());
				j.put("xwnr", t.getXwnr());
				j.put("xwsqdj", t.getXwsqdj());
				j.put("xwjfxh", t.getXwjfxh());
				j.put("xwgmcs", t.getXwgmcs());
				j.put("xwbzcs", t.getXwbtccs());
				j.put("xwbtccs", t.getXwbtccs());
				j.put("czip", t.getCzip());
				j.put("czry", t.getCzry());
				j.put("xwtjtime", t.getXwtjtime());
				j.put("images", t.getImage());
				j.put("xwzy", t.getXwzy());// 新闻线新闻摘要
				j.put("plsl", pinglunServiceI.getCount(t.getId()));
				j.put("visitCount", t.getVisitCount());
				if (StringUtils.isNotBlank(userid)) {
					List<Jfxhjl> list_jf = jfxhjlfServiceI.getList(userid, t.getId(), "", "", "", "");
					if (list_jf.size() > 0) {
						j.put("isbuy", "yes");
					} else {
						j.put("isbuy", "no");
					}

				}

				arr.add(j);

			}
			json.put("errorCode", "0");
			json.put("total", list.size());
			json.put("pcAllcout", total);
			json.put("rows", arr);
			// //System.out.println("打印："+json);
			return json;

		} else if (lanmu.equals("7")) {// 股趣吧
			String fl = request.getParameter("fl");// 1股市段子 2甘甜股事 3 股道情歌 4趣味小图 5
													// 有趣视频
			if (fl != null) {
				if (fl.equals("1")) {
					fl = "股市段子";
				} else if (fl.equals("2")) {
					fl = "甘甜股事";
				} else if (fl.equals("3")) {
					fl = "股道情歌";
				} else if (fl.equals("4")) {
					fl = "趣味小图";
				} else if (fl.equals("5")) {
					fl = "有趣视频";
				}
			}
			List<Tgsdz> list = gqbServiceI.getList(fl, page, rows);
			for (int i = 0; i < list.size(); i++) {
				JSONObject j = new JSONObject();
				Tgsdz t = list.get(i);
				j.put("id", t.getId());
				j.put("tgname", t.getTgname());
				j.put("dztitel", t.getDztitel());
				j.put("dzfbtime", t.getDzfbtime());
				j.put("dznr", t.getDznr());
				j.put("dzsqdj", t.getDzsqdj());
				j.put("dzjfxh", t.getDzjfxh());
				j.put("dzgmcs", t.getDzgmcs());
				j.put("dzbzcs", t.getDzbzcs());
				j.put("dzbtccs", t.getDzbtccs());
				j.put("qublb", t.getQublb());
				j.put("plsl", pinglunServiceI.getCount(t.getId()));
				j.put("images", t.getImages());
				j.put("gqbzy", t.getGqbzy());// 股趣吧摘要
				j.put("visitCount", t.getVisitCount());
				if (StringUtils.isNotBlank(userid)) {
					List<Jfxhjl> list_jf = jfxhjlfServiceI.getList(userid, t.getId(), "", "", "", "");
					if (list_jf.size() > 0) {
						j.put("isbuy", "yes");
					} else {
						j.put("isbuy", "no");
					}

				}
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("total", gqbServiceI.getCount(fl));
			json.put("rows", arr);
			return json;

		} else if (lanmu.equals("6")) {// 股学堂
			String fl = request.getParameter("fl");// 分类 1草根教师 2教授讲堂 0憨豆评股
													// 3高手故事、4实战秘籍 5股学吧
			List<Tgxt> list = gxtServiceI.getList(fl, page, rows);
			for (int i = 0; i < list.size(); i++) {
				Tgxt t = list.get(i);
				JSONObject j = new JSONObject();
				j.put("id", t.getId());
				j.put("gxttitel", t.getGxttitel());
				j.put("gxtfl", t.getGxtfl());
				j.put("gxtfbtime", t.getGxtfbtime());
				j.put("gxtfbz", t.getGxtfbz());
				j.put("gxtnr", t.getGxtnr());
				j.put("images", t.getImage());
				j.put("gxtzy", t.getGxtzy());// 股学堂摘要
				j.put("plsl", pinglunServiceI.getCount(t.getId()));
				j.put("visitCount", t.getVisitCount());
				if (StringUtils.isNotBlank(userid)) {
					List<Jfxhjl> list_jf = jfxhjlfServiceI.getList(userid, t.getId(), "", "", "", "");
					if (list_jf.size() > 0) {
						j.put("isbuy", "yes");
					} else {
						j.put("isbuy", "no");
					}

				}
				arr.add(j);
			}
			json.put("rows", arr);
			json.put("errorCode", "0");
			json.put("total", list.size());
			return json;
		} else {
			json.put("errorMsg", "无此类别");
			json.put("errorCode", "1");
			return json;
		}
	}

	/***
	 * 当type=login
	 * 
	 * @param username
	 *            用户名 (*)
	 * @param pwd
	 *            密码 (*)
	 * @param nickname
	 *            用户别名
	 * @param registrationId
	 *            极光需要的设备id(注:pc没有设备ID可以不传,移动端设备必传(*))
	 * @param uid
	 *            第三方唯一标示
	 * @param utx
	 *            第三方用户头像
	 * @param uStype
	 *            第三方类型：qq、微信还是微博
	 * @see #getInfo(HttpServletRequest, HttpServletResponse, ModelMap,
	 *      HttpSession)
	 */
	protected JSONObject loginAPI(HttpServletRequest request) throws Exception {
		String username = request.getParameter("username");// 用户名
		String password = request.getParameter("pwd");// 密码
		LoginUser u = null;
		String nickname = request.getParameter("nickname");// 用户名
		String uid = request.getParameter("uid");// 第三方唯一标识
		String utx = request.getParameter("utx");// 第三方用户头像
		String uStype = request.getParameter("uStype");// 第三方类型：qq、微信还是微博
		String registrationId = request.getParameter("registrationId");// 极光需要的设备id

		JSONObject j = new JSONObject();
		User_SanFang usf = new User_SanFang();
		usf.setUid(uid);
		usf.setSfType(uStype);
		usf.setUtx(utx);
		usf.setPassword(MD5Util.md5(password));
		usf.setPhone(username);
		usf.setRegistrationId(registrationId);
		usf.setNickname(nickname);
		if (StringUtils.isNotBlank(username) && StringUtils.isNotBlank(password)) {

			LoginUser user = new LoginUser();
			user.setName(username);
			user.setPwd(password);
			user.setRegistrationId(registrationId);
			u = loginUserService.login(user);
			if (u != null) {
				if (u.getStatus().equals("1")) {
					// 修改最后登录信息
					u.setLogintime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
					u.setLoginip(InfoUtil.getIpAddr(request));
					if (StringUtils.isNotBlank(registrationId)) {
						u.setRegistrationId(registrationId);
					}
					loginUserService.update(u);
					if (StringUtils.isNotBlank(u.getZsname())) {
						j.put("zsname", u.getZsname()); // 用户真实姓名
					} else {
						j.put("zsname", "");
					}
					if (StringUtils.isNotBlank(u.getYhyx())) {
						j.put("yhyx", u.getYhyx()); // 用户邮箱
					} else {
						j.put("yhyx", "");
					}
					if (StringUtils.isNotBlank(uid)) {

						userSanFangService.sfReq(usf);
					}

					if (StringUtils.isBlank(u.getIm_username())) {
						List<Map<String, String>> userList = new ArrayList<Map<String, String>>();
						Map<String, String> map = new HashMap<String, String>();
						map.put("username", u.getPhone());
						map.put("password", u.getPhone());
						userList.add(map);
						ChartUtlis cus = new ChartUtlis();
						cus.addImUser(userList);

						u.setIm_username(u.getPhone());
						u.setIm_password(u.getPhone());
						loginUserService.update(u);
					} else {
						// System.out.println("你已经注册了环信账号了..........");
					}

					j.put("errorCode", "0");
					j.put("errorMsg", "登录成功");
					j.put("user", u);
				} else if (u.getStatus().equals("0")) {
					j.put("errorCode", "9");
					j.put("errorMsg", "该账号处于禁用状态，不可以登录！");
				} else {
					j.put("errorCode", "2");
					j.put("errorMsg", "该账号状态异常");
				}

			} else {
				j.put("errorCode", "1");
				j.put("errorMsg", "用户名或密码错误");
			}

			/*
			 * User_SanFang us=userSanFangService.slogin(usf); if (us != null) {
			 * LoginUser uslu = new LoginUser(); uslu.setName(us.getPhone());
			 * uslu.setPwd(us.getPassword()); LoginUser uu2 =
			 * loginUserService.login(uslu); j.put("errorCode", "0");
			 * j.put("errorMsg", "登录成功"); j.put("user", uu2); } else {
			 * j.put("errorCode", "1"); j.put("errorMsg", "请先绑定手机号，谢谢！"); }
			 */
		} else {
			if (StringUtils.isNotBlank(uid)) {
				User_SanFang us = userSanFangService.slogin(usf);
				if (us != null) {
					LoginUser uslu = new LoginUser();
					uslu.setName(us.getPhone());
					uslu.setPwd(us.getPassword());
					LoginUser uu2 = loginUserService.login(uslu);
					uu2.setNickname(nickname);
					loginUserService.update(uu2);
					j.put("errorCode", "0");
					j.put("errorMsg", "登录成功");
					j.put("user", uu2);
				} else {
					j.put("errorCode", "1");
					j.put("errorMsg", "请先绑定手机号，谢谢！");
				}
			}

		}
		return j;
		/*
		 * LoginUser user = new LoginUser(); user.setName(username);
		 * user.setPwd(password); user.setRegistrationId(registrationId);
		 * LoginUser u = loginUserService.login(user); JSONObject j = new
		 * JSONObject(); if (u != null) { if (u.getStatus().equals("1")) { //
		 * 修改最后登录信息 u.setLogintime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
		 * u.setLoginip(InfoUtil.getIpAddr(request));
		 * loginUserService.update(u); if
		 * (StringUtils.isNotBlank(u.getZsname())) { j.put("zsname",
		 * u.getZsname()); // 用户真实姓名 } else { j.put("zsname", ""); } if
		 * (StringUtils.isNotBlank(u.getYhyx())) { j.put("yhyx", u.getYhyx());
		 * // 用户邮箱 } else { j.put("yhyx", ""); }
		 * 
		 * j.put("errorCode", "0"); j.put("errorMsg", "登录成功"); j.put("user", u);
		 * } else if (u.getStatus().equals("0")) { j.put("errorCode", "9");
		 * j.put("errorMsg", "该账号处于禁用状态，不可以登录！"); } else { j.put("errorCode",
		 * "2"); j.put("errorMsg", "该账号状态异常"); }
		 * 
		 * } else { j.put("errorCode", "1"); j.put("errorMsg", "用户名或密码错误"); }
		 * 
		 * return j;
		 */

	}

}
