package com.admin.controller;

import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.admin.model.JPushChatModel;
import com.admin.model.Log;
import com.admin.model.TxwxGl;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.Json;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.SessionInfo;
import com.admin.service.LogServiceI;
import com.admin.service.PinglunServiceI;
import com.admin.service.XwxServiceI;
import com.admin.util.ConfigUtil;
import com.admin.util.InfoUtil;
import com.lcjh.enummole.LcjhPushEnum;
import com.web.util.TimeUtils;

import jxl.write.WritableWorkbook;

/**
 * 用户控制器
 * 
 * @author
 * 
 */
@Controller
@RequestMapping("/xwxgl")
public class XwxController extends BaseController {

	@Autowired
	private XwxServiceI xwxService;
	@Autowired
	private LogServiceI logService;

	@Autowired
	private PinglunServiceI pinglunServiceI;
	@Autowired
	private XwxJpushUtil util;

	
	WritableWorkbook book = null;

	/**
	 * 跳转到页面
	 * 
	 * @return
	 */
	@RequestMapping("/index")
	public String manager() {
		// 每天的date时刻执行task, 仅执行一次
		// timer.schedule(task, date);
		return "/page/index";

	}

	/**
	 * 跳转到列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/xwxgl")
	public String xwxgl(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/admin/xwx/xwxgl";
	}

	/**
	 * 跳转到独家重磅列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/xwxdjzb")
	public String xwxdjzb(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/admin/xwx/xwxdjzb";
	}

	/**
	 * 跳转到股往金来列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/xwxgwjl")
	public String xwxgwjl(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/admin/xwx/xwxgwjl";
	}

	/**
	 * 跳转到热股探析列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/xwxrgtx")
	public String xwxrgtx(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/admin/xwx/xwxrgtx";
	}

	/**
	 * 跳转到新闻纵深列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/xwxxwzs")
	public String xwxxwzs(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/admin/xwx/xwxxwzs";
	}

	/**
	 * 跳转到实战播报列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/xwxszbb")
	public String xwxszbb(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/admin/xwx/xwxszbb";
	}

	/**
	 * 跳转到理财宝列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/xwxlcb")
	public String xwxlcb(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/admin/xwx/xwxlcb";
	}

	/**
	 * 跳转到数据源列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/xwxsjy")
	public String xwxsjy(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/admin/xwx/xwxsjy";
	}

	/**
	 * 跳转到新闻专题列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/xwxxwzt")
	public String xwxxwzt(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/admin/xwx/xwxxwzt";
	}

	/**
	 * 跳转到实盘播报列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/xwxspbb")
	public String xwxspbb(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/admin/xwx/xwxspbb";
	}

	/**
	 * 跳转到实盘赛列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/xwxsps")
	public String xwxsps(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/admin/xwx/xwxsps";
	}

	/**
	 * 获取用户数据表格
	 * 
	 * @param user
	 * @return
	 */
	@RequestMapping("/dataGrid")
	@ResponseBody
	public DataGrid dataGrid(TxwxGl g, PageHelper ph, String xwxlb) {
		// String lb = null;
		g.setXwfbfl(xwxlb);
		return xwxService.dataGridForOne(g, ph);
	}
	
	/**
	 * 新闻线置顶和主页推荐列表 
	 * @param g
	 * @param ph
	 * @return
	 */
	@RequestMapping("/dataGriddy")
	@ResponseBody
	public DataGrid dataGriddy(TxwxGl g, PageHelper ph) {
		
		return xwxService.dataGrid(g, ph);
	}

	/**
	 * 删除用户
	 * 
	 * @param id
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public Json delete(String id, HttpSession session,
			HttpServletRequest request) throws Exception {
		SessionInfo sessionInfo = (SessionInfo) session.getAttribute(ConfigUtil
				.getSessionInfoName());
		Json j = new Json();
		if (id != null && !id.equalsIgnoreCase(sessionInfo.getId())) {// 不能删除自己
			xwxService.delete(id);
		}
		j.setMsg("删除成功！");

		Log log = new Log();
		log.setType("delete");// 操作描述
		log.setAuthor(InfoUtil.getUser(session));// 操作员
		log.setIp(InfoUtil.getIpAddr(request));// ip
		log.setTteble("t_xwxgl");// 操作的表
		log.setTid(id);// 操作的ID
		log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
		logService.add(log);

		j.setSuccess(true);
		return j;
	}
	
	/**
	 * 取消置顶和主页推荐
	 * @param id
	 * @param session
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/deleteZY")
	@ResponseBody
	public Json deleteZY(String id, HttpSession session,
			HttpServletRequest request) throws Exception {
		/*SessionInfo sessionInfo = (SessionInfo) session.getAttribute(ConfigUtil
				.getSessionInfoName());*/
		Json j = new Json();
		if (org.apache.commons.lang3.StringUtils.isNotBlank(id)) {// 不能删除自己
			xwxService.deleteZdZy(id);
		}
		j.setMsg("取消成功！");

		Log log = new Log();
		log.setType("delete");// 操作描述
		log.setAuthor(InfoUtil.getUser(session));// 操作员
		log.setIp(InfoUtil.getIpAddr(request));// ip
		log.setTteble("t_xwxgl");// 操作的表
		log.setTid(id);// 操作的ID
		log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
		logService.add(log);

		j.setSuccess(true);
		return j;
	}
	
	/**
	 * 批量取消置顶和主页推荐
	 * @param ids
	 * @param session
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/batchDeleteZY")
	@ResponseBody
	public Json batchDeleteZY(String ids, HttpSession session,
			HttpServletRequest request) throws Exception {
		Json j = new Json();
		if (ids != null && ids.length() > 0) {
			for (String id : ids.split(",")) {
				if (id != null) {
					this.deleteZY(id, session, request);
				}
			}
		}
		j.setMsg("批量取消成功！");
		j.setSuccess(true);
		return j;
	}

	/**
	 * 跳转到添加用户页面
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/addxwxPage")
	public String addxwxPage(HttpServletRequest request) {
		String fl = request.getParameter("fl");
		request.setAttribute("fl", fl);
		return "/admin/xwx/addxwxPage";
	}

	/**
	 * 添加
	 * 
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public Json add(TxwxGl p, HttpServletRequest request, HttpSession session) {
		Json j = new Json();
		try {
			xwxService.add(p);
			j.setSuccess(true);
			j.setMsg("添加成功！");
			j.setObj(p);
			JPushChatModel chat = new JPushChatModel();
			String chattitle = "股天乐信息";
			String name = "信息";
			if (p.getXwfbfl().equals("1")) {
				name="新闻资讯";
			}else if(p.getXwfbfl().equals("2")) {
				name="新闻纵深";
			}else if(p.getXwfbfl().equals("3")) {
				name="名家汇";
			}else if(p.getXwfbfl().equals("4")) {
				name="操盘锦囊";
			}else if(p.getXwfbfl().equals("5")) {
				name="主题热点";
			}else if(p.getXwfbfl().equals("6")) {
				name="公告眼";
			}else if(p.getXwfbfl().equals("7")) {
				name="上捷报";
			}else if(p.getXwfbfl().equals("8")) {
				name="新闻专题";
			}else if(p.getXwfbfl().equals("9")) {
				name="涨停揭秘";
			}else if(p.getXwfbfl().equals("10")) {
				name="活动预告";
			}
			String chatcontent = "'新闻线-"+name+"':" + p.getXwtitel();
			chat.setType(LcjhPushEnum.lcjhFailure.getCode());
			chat.setTitle(chattitle);//标题
			chat.setContent(chatcontent);//内容
			chat.setDataId(p.getId());
			util.xwPushCareUser(chat);
			Log log = new Log();
			log.setType("add");// 操作描述
			log.setAuthor(InfoUtil.getUser(session));// 操作员
			log.setIp(InfoUtil.getIpAddr(request));// ip
			log.setTteble("t_xwxgl");// 操作的表
			log.setTid(p.getId());// 操作的ID
			log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
			logService.add(log);

		} catch (Exception e) {
			// e.printStackTrace();
			j.setMsg(e.getMessage());
		}
		return j;
	}

	/**
	 * 跳转到用户修改页面
	 * 
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/editxwxPage")
	public String editxwxPage(HttpServletRequest request, String id)
			throws Exception {
		TxwxGl u = xwxService.getTxwxGl(id);
		request.setAttribute("TxwxGl", u);
		return "/admin/xwx/xwxEdit";// 页面还没写
	}

	/**
	 * 修改用户
	 * 
	 * @param user
	 * @return
	 */
	@RequestMapping("/edit")
	@ResponseBody
	public Json edit(TxwxGl p, HttpServletRequest request, HttpSession session) {
		Json j = new Json();
		try {
			xwxService.edit(p);
			j.setSuccess(true);
			j.setMsg("编辑成功！");
			j.setObj(p);

			Log log = new Log();
			log.setType("update");// 操作描述
			log.setAuthor(InfoUtil.getUser(session));// 操作员
			log.setIp(InfoUtil.getIpAddr(request));// ip
			log.setTteble("t_xwxgl");// 操作的表
			log.setTid(p.getId());// 操作的ID
			log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
			logService.add(log);
		} catch (Exception e) {
			// e.printStackTrace();
			j.setMsg(e.getMessage());
		}
		return j;
	}

	/**
	 * 批量删除记录
	 * 
	 * @param ids
	 *            ('0','1','2')
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/batchDelete")
	@ResponseBody
	public Json batchDelete(String ids, HttpSession session,
			HttpServletRequest request) throws Exception {
		Json j = new Json();
		if (ids != null && ids.length() > 0) {
			for (String id : ids.split(",")) {
				if (id != null) {
					this.delete(id, session, request);
				}
			}
		}
		j.setMsg("批量删除成功！");
		j.setSuccess(true);
		return j;
	}

	/**
	 * 导出数据为excel
	 * 
	 * @param request
	 * @param response
	 * @throws Exception
	 */
	@RequestMapping(value = "/export")
	public void exportExcel(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String fl = request.getParameter("fl");
		List<TxwxGl> list = xwxService.getList(fl, "1", "1000000");

		HSSFWorkbook wb = xwxService.export(list);
		response.setContentType("application/vnd.ms-excel");
		String filename = "股学堂列表" + TimeUtils.getNow14() + ".xls";
		response.setHeader("Content-disposition", "attachment;filename="
				+ filename);
		OutputStream ouputStream = response.getOutputStream();
		wb.write(ouputStream);
		ouputStream.flush();
		ouputStream.close();

	}

}
