package com.web.controller;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.net.URLDecoder;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.admin.controller.BaseController;
import com.admin.model.AnswerQuestions;
import com.admin.model.AppVersion;
import com.admin.model.CzdTj;
import com.admin.model.FtgMyCare;
import com.admin.model.GoodType;
import com.admin.model.GoodsManagement;
import com.admin.model.GywmModel;
import com.admin.model.IntegralConfig;
import com.admin.model.Jfxhjl;
import com.admin.model.LoginUser;
import com.admin.model.MnSjZd;
import com.admin.model.Mncp;
import com.admin.model.Mrzcjs;
import com.admin.model.MyCare;
import com.admin.model.Partner;
import com.admin.model.ReplyQuestions;
import com.admin.model.Tgsdz;
import com.admin.model.Tgshow;
import com.admin.model.Tgsq;
import com.admin.model.Tgxt;
import com.admin.model.TxwxGl;
import com.admin.model.UserJbxfInfo;
import com.admin.model.VIPApplication;
import com.admin.model.WcpApplication;
import com.admin.model.WcpTc;
import com.admin.model.Wordbook;
import com.admin.model.YwbdJf;
import com.admin.model.gpsy;
import com.admin.service.ActualGoldBulletinServiceI;
import com.admin.service.AdServiceI;
import com.admin.service.AnswerQuestionsServiceI;
import com.admin.service.ChatMessageEntityService;
import com.admin.service.CpApplicationServiceI;
import com.admin.service.CzdServiceI;
import com.admin.service.CzdTjServiceI;
import com.admin.service.ExchangeGoodsServiceI;
import com.admin.service.FtgMyCareServiceI;
import com.admin.service.GeneralTipsServiceI;
import com.admin.service.GgxwServiceI;
import com.admin.service.GmlcjhServiceI;
import com.admin.service.GoldTipsServiceI;
import com.admin.service.GoodTypeService;
import com.admin.service.GoodsManagementServiceI;
import com.admin.service.GpsyServiceI;
import com.admin.service.GqbServiceI;
import com.admin.service.GxtServiceI;
import com.admin.service.GywmModelServiceI;
import com.admin.service.IntegralConfigServiceI;
import com.admin.service.JfxhjlfServiceI;
import com.admin.service.JjcpServiceI;
import com.admin.service.JjcpsqServiceI;
import com.admin.service.LcjhServiceI;
import com.admin.service.LiuyanServiceI;
import com.admin.service.LljlServiceI;
import com.admin.service.LoginUserServiceI;
import com.admin.service.LsftServiceI;
import com.admin.service.MallManagementServiceI;
import com.admin.service.MnSjBmServiceI;
import com.admin.service.MnSjZdServiceI;
import com.admin.service.MncpServiceI;
import com.admin.service.MrzcjsServiceI;
import com.admin.service.MyCareServiceI;
import com.admin.service.PartnerService;
import com.admin.service.PinglunServiceI;
import com.admin.service.PinglunbServiceI;
import com.admin.service.PtsBmServiceI;
import com.admin.service.RealTimeQAServiceI;
import com.admin.service.ReplyQuestionsServiceI;
import com.admin.service.RmgpServiceI;
import com.admin.service.SctimeServiceI;
import com.admin.service.SunSharesServiceI;
import com.admin.service.TgInfoServiceI;
import com.admin.service.TgdjServiceI;
import com.admin.service.TgwdszServiceI;
import com.admin.service.TzgwServiceI;
import com.admin.service.UserJbxfInfoServiceI;
import com.admin.service.UserServiceI;
import com.admin.service.VIPApplicationServiceI;
import com.admin.service.WarCareServiceI;
import com.admin.service.WarnServiceI;
import com.admin.service.WcpBzServiceI;
import com.admin.service.WcpJsServiceI;
import com.admin.service.WcpJsSqServiceI;
import com.admin.service.WcpTcServiceI;
import com.admin.service.WcpsqServiceI;
import com.admin.service.WebServiceI;
import com.admin.service.WordServiceI;
import com.admin.service.XieyiServiceI;
import com.admin.service.XwxServiceI;
import com.admin.service.YwbdJfServiceI;
import com.admin.service.ZxgServiceI;
import com.admin.util.InfoUtil;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.web.util.TimeUtils;

/**
 * 前台公共管理controller
 * 
 * @author Administrator
 * 
 */
@Controller
@RequestMapping("/common02")
public class CommonController02 extends BaseController {
	@Autowired
	private WebServiceI webService;

	@Autowired
	private LoginUserServiceI loginUserService;

	@Autowired
	private AdServiceI adService;

	@Autowired
	private TgwdszServiceI tgwdszServiceI;

	@Autowired
	private IntegralConfigServiceI icsServiceI;

	@Autowired
	private XwxServiceI xwxServiceI;

	@Autowired
	private GqbServiceI gqbServiceI;

	@Autowired
	private TzgwServiceI tzgwServiceI;

	@Autowired
	private PinglunServiceI pinglunServiceI;

	@Autowired
	private MallManagementServiceI mallManagementServiceI;

	@Autowired
	private GoodsManagementServiceI goodsManagementServiceI;
	
	@Autowired
	private GoodTypeService goodTypeService;

	@Autowired
	private GxtServiceI gxtServiceI;

	@Autowired
	private LsftServiceI lsftServiceI;

	@Autowired
	private LljlServiceI lljlServiceI;

	@Autowired
	private VIPApplicationServiceI vipApplicationServiceI;

	@Autowired
	private ExchangeGoodsServiceI exchangeGoodsServiceI;

	@Autowired
	private MyCareServiceI myCareServiceI;

	@Autowired
	private UserServiceI userServiceI;

	@Autowired
	private WarCareServiceI warCareServiceI;

	@Autowired
	private ActualGoldBulletinServiceI actualGoldBulletinServiceI;

	@Autowired
	private CpApplicationServiceI cpApplicationServiceI;

	@Autowired
	private WordServiceI wordServiceI;

	@Autowired
	private WarnServiceI warnServiceI;

	@Autowired
	private MncpServiceI mncpServiceI;
	@Autowired
	private SunSharesServiceI sunSharesServiceI;

	@Autowired
	private WcpJsServiceI wcpJsServiceI;

	@Autowired
	private WcpBzServiceI wcpBzServiceI;
	@Autowired
	private AnswerQuestionsServiceI answerQuestionsServiceI;

	@Autowired
	private ReplyQuestionsServiceI replyQuestionsServiceI;

	@Autowired
	private WcpsqServiceI wcpsqServiceI;
	@Autowired
	private WcpTcServiceI wcpTcServiceI;

	@Autowired
	private GeneralTipsServiceI generalTipsServiceI;

	@Autowired
	private GoldTipsServiceI goldTipsServiceI;

	@Autowired
	private JfxhjlfServiceI jfxhjlfServiceI;

	@Autowired
	private WcpJsSqServiceI wcpJsSqServiceI;
	@Autowired
	private CzdServiceI czdServiceI;
	@Autowired
	private MnSjZdServiceI mnSjZdServiceI;

	@Autowired
	private MnSjBmServiceI mnSjBmServiceI;

	@Autowired
	private PtsBmServiceI ptsBmServiceI;

	@Autowired
	private YwbdJfServiceI ywbdJfServiceI;

	@Autowired
	private TgdjServiceI tgdjServiceI;

	@Autowired
	private JjcpServiceI jjcpServiceI;

	@Autowired
	private LcjhServiceI lcjhServiceI;

	@Autowired
	private JjcpsqServiceI jjcpsqServiceI;

	@Autowired
	private IntegralConfigServiceI integralConfigServiceI;

	@Autowired
	private GmlcjhServiceI gmlcjhServiceI;

	@Autowired
	private PinglunbServiceI pinglunbServiceI;

	@Autowired
	private ZxgServiceI zxgServiceI;

	@Autowired
	private LiuyanServiceI liuyanServiceI;

	@Autowired
	private GgxwServiceI ggxwService;

	@Autowired
	private XieyiServiceI xieyiServiceI;

	@Autowired
	private RealTimeQAServiceI realTimeQAServiceI;

	@Autowired
	private SctimeServiceI sctimeServiceI;

	@Autowired
	private RmgpServiceI rmgpServiceI;

	@Autowired
	private MrzcjsServiceI mrzcjsServiceI;
	@Autowired
	private GpsyServiceI gpsyServiceI;

	@Autowired
	private CzdTjServiceI czdTjServiceI;

	@Autowired
	private GywmModelServiceI gywmModelServiceI;
	@Autowired
	private TgInfoServiceI tgInfoServiceI;

	@Autowired
	private FtgMyCareServiceI ftgMyCareServiceI;

	@Autowired
	private PartnerService partnerService;

	@Autowired
	private UserJbxfInfoServiceI userJbxfInfoServiceI;
	
	@Autowired
 	private ChatMessageEntityService chatMessageEntityService;

	/**
	 * 跳转到页面
	 * 
	 * @return
	 */
	@RequestMapping("/getInfo")
	@ResponseBody
	public JSONObject getInfo(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap, HttpSession session)
					throws Exception {

		String type = request.getParameter("type");
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");

		if (type.equals("login")) {// type=login用户登录验证
			String username = request.getParameter("username");// 用户名
			// String phone = request.getParameter("phone");//电话
			String password = request.getParameter("pwd");// 密码
			LoginUser user = new LoginUser();
			user.setName(username);
			user.setPwd(password);
			LoginUser u = loginUserService.login(user);
			JSONObject j = new JSONObject();
			if (u != null) {
				if (u.getStatus().equals("1")) {
					// 修改最后登录信息
					u.setLogintime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
					u.setLoginip(InfoUtil.getIpAddr(request));
					loginUserService.update(u);
					if (StringUtils.isNotBlank(u.getZsname())) {
						j.put("zsname", u.getZsname()); // 用户真实姓名
					} else {
						j.put("zsname", "");
					}
					if (StringUtils.isNotBlank(u.getYhyx())) {
						j.put("yhyx", u.getYhyx()); // 用户邮箱
					} else {
						j.put("yhyx", "");
					}

					j.put("errorCode", "0");
					j.put("errorMsg", "登录成功");
					j.put("user", u);
				} else if (u.getStatus().equals("0")) {
					j.put("errorCode", "9");
					j.put("errorMsg", "该账号处于禁用状态，不可以登录！");
				} else {
					j.put("errorCode", "2");
					j.put("errorMsg", "该账号状态异常");
				}

			} else {
				j.put("errorCode", "1");
				j.put("errorMsg", "用户名或密码错误");
			}

			return j;
		} else if (type.equals("yhtjxx")) { // 用户添加信息（真实姓名，邮箱）
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid"); // 用户id（必传）
			String zsname = request.getParameter("zsname"); // 真实姓名（必传）
			String yhyx = request.getParameter("yhyx"); // 用户邮箱（必传）
			LoginUser loginuser = loginUserService.getUser(userid);
			if (loginuser != null) {
				loginuser.setZsname(zsname);
				loginuser.setYhyx(yhyx);
				loginUserService.update(loginuser);
				json.put("errorCode", "0");
				json.put("errorMsg", "添加成功");
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "该用户不存在，请核实！");
			}
			return json;
		} else if (type.equals("getCzdTjList")) { // 获取猜涨跌个股推荐信息getCzdTjList
			JSONObject json = new JSONObject();

			List<CzdTj> list = czdTjServiceI.getCzdTjList();
			CzdTj czdTj = null;

			if (list.size() > 0) {
				czdTj = list.get(0);
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "无推荐股信息");
				return json;
			}
			String ggnr = czdTj.getGgnr();
			json.put("errorCode", "0");
			json.put("tjgg", ggnr);// 推荐个股信息
			json.put("errorMsg", "查询成功");
			return json;

		} else if (type.equals("gpsyphb")) { // 股票收益排行榜gpsyphb\

			JSONObject json = new JSONObject();
			JSONObject brjson = new JSONObject();
			JSONObject bzjson = new JSONObject();
			JSONObject byjson = new JSONObject();
			JSONObject zsyjson = new JSONObject();
			JSONArray brarr = new JSONArray();
			JSONArray bzarr = new JSONArray();
			JSONArray byarr = new JSONArray();
			JSONArray zsyarr = new JSONArray();
			String userid = request.getParameter("userid");// 用户id
			String lx = request.getParameter("lx");// 必传值：普通赛：0；赛季赛：1
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String sjid = request.getParameter("sjid"); // 单个赛季查询sjid必传;(赛季赛时：传相对应的赛季id；)；统一数据时：不传此值

			List<Mrzcjs> zsyList = mrzcjsServiceI.zsyList(lx, page, rows, sjid);// 总收益排行榜

			List<Mrzcjs> list1 = mrzcjsServiceI.brList(lx, page, rows, sjid);
			List<Mrzcjs> list2 = mrzcjsServiceI.bzList(lx, page, rows, sjid);
			List<Mrzcjs> list3 = mrzcjsServiceI.byList(lx, page, rows, sjid);
			if (list1.size() > 0 && lx.equals("0")) {
				for (int i = 0; i < list1.size(); i++) {
					JSONObject j1 = new JSONObject();
					Mrzcjs mr = list1.get(i);

					j1.put("userid", mr.getUserid());
					LoginUser loginuser = loginUserService.getUser(mr
							.getUserid());
					if (loginuser != null) {
						j1.put("tx", loginuser.getTx());// 头像
						j1.put("username", loginuser.getNickname());
					} else {
						j1.put("tx", "");// 头像
						j1.put("username", "");
					}
					j1.put("brsy", mr.getBrsy()); // 普通赛本日排行

					// 判断是否关注**************
					int istggz = 0;
					int isftggz = 0;
					MyCare myCare = new MyCare();
					myCare.setUserId(userid);
					myCare.setConcernedId(mr.getUserid());
					List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
							"1", "5");
					if (mycareList.size() > 0) {
						istggz = 1;
					}
					FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
							mr.getUserid());
					if (iscare != null) {
						isftggz = 1;
					}
					int sum01 = istggz + isftggz;
					if (sum01 > 0) {
						j1.put("iscare", "1"); // 已关注
					} else {
						j1.put("iscare", "0"); // 未关注
					}
					// 关注数量
					MyCare tggz = new MyCare();
					tggz.setConcernedId(mr.getUserid());
					List<MyCare> tggzList = myCareServiceI.myCareList(tggz,
							"1", "10");
					int tggzd = tggzList.size(); // 投顾关注度
					String ftggzd = ftgMyCareServiceI.getBgzd(mr.getUserid()); // 非投顾关注度
					int gzd = Integer.parseInt(ftggzd) + tggzd;
					j1.put("gzd", gzd); // 关注度
					brarr.add(j1);
				}
				brjson.put("errorCode", "0");
				brjson.put("errorMsg", "查询成功");
				brjson.put("list", brarr);
			} else if (list1.size() > 0 && lx.equals("1")) {
				for (int i = 0; i < list1.size(); i++) {
					JSONObject j1 = new JSONObject();
					Mrzcjs mr = list1.get(i);

					j1.put("userid", mr.getUserid());
					LoginUser loginuser = loginUserService.getUser(mr
							.getUserid());
					if (loginuser != null) {
						j1.put("tx", loginuser.getTx());// 头像
						j1.put("username", loginuser.getNickname());
					} else {
						j1.put("tx", "");// 头像
						j1.put("username", "");
					}

					// j1.put("brsy", mr.getBrsy()); //普通赛本日排行
					j1.put("sjbrsy", mr.getSjbrsy());// 赛季赛本日排行
					j1.put("sjzsy", mr.getSjzsy());// 赛季赛总收益
					j1.put("sjid", mr.getSjid());

					// 判断是否关注**************
					int istggz = 0;
					int isftggz = 0;
					MyCare myCare = new MyCare();
					myCare.setUserId(userid);
					myCare.setConcernedId(mr.getUserid());
					List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
							"1", "5");
					if (mycareList.size() > 0) {
						istggz = 1;
					}
					FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
							mr.getUserid());
					if (iscare != null) {
						isftggz = 1;
					}
					int sum01 = istggz + isftggz;
					if (sum01 > 0) {
						j1.put("iscare", "1"); // 已关注
					} else {
						j1.put("iscare", "0"); // 未关注
					}
					// 关注数量
					MyCare tggz = new MyCare();
					tggz.setConcernedId(mr.getUserid());
					List<MyCare> tggzList = myCareServiceI.myCareList(tggz,
							"1", "10");
					int tggzd = tggzList.size(); // 投顾关注度
					String ftggzd = ftgMyCareServiceI.getBgzd(mr.getUserid()); // 非投顾关注度
					int gzd = Integer.parseInt(ftggzd) + tggzd;
					j1.put("gzd", gzd); // 关注度
					brarr.add(j1);
				}
				brjson.put("errorCode", "0");
				brjson.put("errorMsg", "查询成功");
				brjson.put("list", brarr);
			} else {
				brjson.put("errorCode", "1");
				brjson.put("errorMsg", "无日排行数据");

			}
			if (list2.size() > 0 && lx.equals("0")) {
				for (int i = 0; i < list2.size(); i++) {
					JSONObject j1 = new JSONObject();
					Mrzcjs mr = list2.get(i);
					j1.put("userid", mr.getUserid());
					LoginUser loginuser = loginUserService.getUser(mr
							.getUserid());
					if (loginuser != null) {
						j1.put("tx", loginuser.getTx());// 头像
						j1.put("username", loginuser.getNickname());
					} else {
						j1.put("tx", "");// 头像
						j1.put("username", "");
					}
					j1.put("bzsy", mr.getBzsy());// 普通赛本周排行

					// 判断是否关注**************
					int istggz = 0;
					int isftggz = 0;
					MyCare myCare = new MyCare();
					myCare.setUserId(userid);
					myCare.setConcernedId(mr.getUserid());
					List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
							"1", "5");
					if (mycareList.size() > 0) {
						istggz = 1;
					}
					FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
							mr.getUserid());
					if (iscare != null) {
						isftggz = 1;
					}
					int sum01 = istggz + isftggz;
					if (sum01 > 0) {
						j1.put("iscare", "1"); // 已关注
					} else {
						j1.put("iscare", "0"); // 未关注
					}

					bzarr.add(j1);
				}
				bzjson.put("errorCode", "0");
				bzjson.put("errorMsg", "查询成功");
				bzjson.put("list", bzarr);
			} else if (list2.size() > 0 && lx.equals("1")) {
				for (int i = 0; i < list2.size(); i++) {
					JSONObject j1 = new JSONObject();
					Mrzcjs mr = list2.get(i);
					j1.put("userid", mr.getUserid());
					LoginUser loginuser = loginUserService.getUser(mr
							.getUserid());
					if (loginuser != null) {
						j1.put("tx", loginuser.getTx());// 头像
						j1.put("username", loginuser.getNickname());
					} else {
						j1.put("tx", "");// 头像
						j1.put("username", "");
					}
					// j1.put("bzsy", mr.getBzsy());//普通赛本周排行
					j1.put("sjbzsy", mr.getSjbzsy());// 赛季赛本周排行
					j1.put("sjzsy", mr.getSjzsy());// 赛季赛总收益
					j1.put("sjid", mr.getSjid());

					// 判断是否关注**************
					int istggz = 0;
					int isftggz = 0;
					MyCare myCare = new MyCare();
					myCare.setUserId(userid);
					myCare.setConcernedId(mr.getUserid());
					List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
							"1", "5");
					if (mycareList.size() > 0) {
						istggz = 1;
					}
					FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
							mr.getUserid());
					if (iscare != null) {
						isftggz = 1;
					}
					int sum01 = istggz + isftggz;
					if (sum01 > 0) {
						j1.put("iscare", "1"); // 已关注
					} else {
						j1.put("iscare", "0"); // 未关注
					}
					// 关注数量
					MyCare tggz = new MyCare();
					tggz.setConcernedId(mr.getUserid());
					List<MyCare> tggzList = myCareServiceI.myCareList(tggz,
							"1", "10");
					int tggzd = tggzList.size(); // 投顾关注度
					String ftggzd = ftgMyCareServiceI.getBgzd(mr.getUserid()); // 非投顾关注度
					int gzd = Integer.parseInt(ftggzd) + tggzd;
					j1.put("gzd", gzd); // 关注度
					bzarr.add(j1);
				}
				bzjson.put("errorCode", "0");
				bzjson.put("errorMsg", "查询成功");
				bzjson.put("list", bzarr);
			} else {
				bzjson.put("errorCode", "1");
				bzjson.put("errorMsg", "无周排行数据");
			}
			if (list3.size() > 0 && lx.equals("0")) {
				for (int i = 0; i < list3.size(); i++) {
					JSONObject j1 = new JSONObject();
					Mrzcjs mr = list3.get(i);
					j1.put("userid", mr.getUserid());
					LoginUser loginuser = loginUserService.getUser(mr
							.getUserid());
					if (loginuser != null) {
						j1.put("tx", loginuser.getTx());// 头像
						j1.put("username", loginuser.getNickname());
					} else {
						j1.put("tx", "");// 头像
						j1.put("username", "");
					}
					j1.put("bysy", mr.getBysy());// 普通赛本月排行
					// 判断是否关注**************
					int istggz = 0;
					int isftggz = 0;
					MyCare myCare = new MyCare();
					myCare.setUserId(userid);
					myCare.setConcernedId(mr.getUserid());
					List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
							"1", "5");
					if (mycareList.size() > 0) {
						istggz = 1;
					}
					FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
							mr.getUserid());
					if (iscare != null) {
						isftggz = 1;
					}
					int sum01 = istggz + isftggz;
					if (sum01 > 0) {
						j1.put("iscare", "1"); // 已关注
					} else {
						j1.put("iscare", "0"); // 未关注
					}
					byarr.add(j1);
				}
				byjson.put("errorCode", "0");
				byjson.put("errorMsg", "查询成功");
				byjson.put("list", byarr);
			} else if (list3.size() > 0 && lx.equals("1")) {
				for (int i = 0; i < list3.size(); i++) {
					JSONObject j1 = new JSONObject();
					Mrzcjs mr = list3.get(i);
					j1.put("userid", mr.getUserid());
					LoginUser loginuser = loginUserService.getUser(mr
							.getUserid());
					if (loginuser != null) {
						j1.put("tx", loginuser.getTx());// 头像
						j1.put("username", loginuser.getNickname());
					} else {
						j1.put("tx", "");// 头像
						j1.put("username", "");
					}
					// j1.put("bysy", mr.getBysy());//普通赛本月排行
					j1.put("sjbysy", mr.getSjbysy());// 赛季赛本月排行
					j1.put("sjzsy", mr.getSjzsy());// 赛季赛总收益
					j1.put("sjid", mr.getSjid());
					// 判断是否关注**************
					int istggz = 0;
					int isftggz = 0;
					MyCare myCare = new MyCare();
					myCare.setUserId(userid);
					myCare.setConcernedId(mr.getUserid());
					List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
							"1", "5");
					if (mycareList.size() > 0) {
						istggz = 1;
					}
					FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
							mr.getUserid());
					if (iscare != null) {
						isftggz = 1;
					}
					int sum01 = istggz + isftggz;
					if (sum01 > 0) {
						j1.put("iscare", "1"); // 已关注
					} else {
						j1.put("iscare", "0"); // 未关注
					}
					// 关注数量
					MyCare tggz = new MyCare();
					tggz.setConcernedId(mr.getUserid());
					List<MyCare> tggzList = myCareServiceI.myCareList(tggz,
							"1", "10");
					int tggzd = tggzList.size(); // 投顾关注度
					String ftggzd = ftgMyCareServiceI.getBgzd(mr.getUserid()); // 非投顾关注度
					int gzd = Integer.parseInt(ftggzd) + tggzd;
					j1.put("gzd", gzd); // 关注度

					byarr.add(j1);
				}
				byjson.put("errorCode", "0");
				byjson.put("errorMsg", "查询成功");
				byjson.put("list", byarr);
			} else {
				byjson.put("errorCode", "1");
				byjson.put("errorMsg", "无月排行数据");
			}
			if (zsyList.size() > 0 && lx.equals("0")) {
				for (int i = 0; i < zsyList.size(); i++) {
					JSONObject j1 = new JSONObject();
					Mrzcjs mr = zsyList.get(i);
					j1.put("userid", mr.getUserid());
					LoginUser loginuser = loginUserService.getUser(mr
							.getUserid());
					if (loginuser != null) {
						j1.put("tx", loginuser.getTx());// 头像
						j1.put("username", loginuser.getNickname());
					} else {
						j1.put("tx", "");// 头像
						j1.put("username", "");
					}
					j1.put("zsy", mr.getZsy());// 普通赛总排行
					// 判断是否关注**************
					int istggz = 0;
					int isftggz = 0;
					MyCare myCare = new MyCare();
					myCare.setUserId(userid);
					myCare.setConcernedId(mr.getUserid());
					List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
							"1", "5");
					if (mycareList.size() > 0) {
						istggz = 1;
					}
					FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
							mr.getUserid());
					if (iscare != null) {
						isftggz = 1;
					}
					int sum01 = istggz + isftggz;
					if (sum01 > 0) {
						j1.put("iscare", "1"); // 已关注
					} else {
						j1.put("iscare", "0"); // 未关注
					}
					zsyarr.add(j1);
				}

				zsyjson.put("errorCode", "0");
				zsyjson.put("errorMsg", "查询成功");
				zsyjson.put("list", zsyarr);
			} else if (zsyList.size() > 0 && lx.equals("1")) {
				for (int i = 0; i < zsyList.size(); i++) {
					JSONObject j1 = new JSONObject();
					Mrzcjs mr = zsyList.get(i);
					j1.put("userid", mr.getUserid());
					LoginUser loginuser = loginUserService.getUser(mr
							.getUserid());
					if (loginuser != null) {
						j1.put("tx", loginuser.getTx());// 头像
						j1.put("username", loginuser.getNickname());
					} else {
						j1.put("tx", "");// 头像
						j1.put("username", "");
					}

					j1.put("sjzsy", mr.getSjzsy());// 赛季赛总排行
					j1.put("sjid", mr.getSjid());

					// 判断是否关注**************
					int istggz = 0;
					int isftggz = 0;
					MyCare myCare = new MyCare();
					myCare.setUserId(userid);
					myCare.setConcernedId(mr.getUserid());
					List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
							"1", "5");
					if (mycareList.size() > 0) {
						istggz = 1;
					}
					FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
							mr.getUserid());
					if (iscare != null) {
						isftggz = 1;
					}
					int sum01 = istggz + isftggz;
					if (sum01 > 0) {
						j1.put("iscare", "1"); // 已关注
					} else {
						j1.put("iscare", "0"); // 未关注
					}
					// 关注数量
					MyCare tggz = new MyCare();
					tggz.setConcernedId(mr.getUserid());
					List<MyCare> tggzList = myCareServiceI.myCareList(tggz,
							"1", "10");
					int tggzd = tggzList.size(); // 投顾关注度
					String ftggzd = ftgMyCareServiceI.getBgzd(mr.getUserid()); // 非投顾关注度
					int gzd = Integer.parseInt(ftggzd) + tggzd;
					j1.put("gzd", gzd); // 关注度

					zsyarr.add(j1);
				}

				zsyjson.put("errorCode", "0");
				zsyjson.put("errorMsg", "查询成功");
				zsyjson.put("list", zsyarr);
			} else {
				zsyjson.put("errorCode", "1");
				zsyjson.put("errorMsg", "无总排行数据");
			}

			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("brrows", brjson); // 本日
			json.put("bzrows", bzjson);// 本周
			json.put("byrows", byjson);// 本月
			json.put("zsyrows", zsyjson);// 总收益
			return json;

		} else if (type.equals("cattleRank")) {// 牛人排行
			//JSONObject json = new JSONObject();
			JSONObject brjson = new JSONObject();
			
			JSONArray brarr = new JSONArray();
			
			String userid = request.getParameter("userid");// 用户id
			String lx = request.getParameter("lx");// 必传值：普通赛：0；赛季赛：1
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			

			MnSjZd mnSjZd = new MnSjZd();
			List<MnSjZd> mnSjZdList = mnSjZdServiceI.mnSjZdList(mnSjZd, page,
					rows);

			List<Mrzcjs> list1 = new ArrayList<Mrzcjs>();
			
			for (int i = 0; i < mnSjZdList.size(); i++) {
				JSONArray jai = new JSONArray();
				
				JSONObject jbi = new JSONObject();
				
				list1 = mrzcjsServiceI.brList(lx, page, rows, mnSjZdList.get(i)
						.getId());
				
				if (list1.size() > 0) {
					jbi.put("id", mnSjZdList.get(i).getId());
					// 赛季名称 Text 字符串
					jbi.put("sjName", mnSjZdList.get(i).getSjName());
					for (int j = 0; j < list1.size(); j++) {
						JSONObject jbj = new JSONObject();
						Mrzcjs mr = list1.get(j);

						jbj.put("userid", mr.getUserid());
						LoginUser loginuser = loginUserService.getUser(mr
								.getUserid());
						if (loginuser != null) {
							jbj.put("tx", loginuser.getTx());// 头像
							jbj.put("username", loginuser.getNickname());
						} else {
							jbj.put("tx", "");// 头像
							jbj.put("username", "");
						}

						// jbj.put("brsy", mr.getBrsy()); //普通赛本日排行
						jbj.put("sjbrsy", mr.getSjbrsy());// 赛季赛本日排行
						jbj.put("sjzsy", mr.getSjzsy());// 赛季赛总收益
						jbj.put("sjid", mr.getSjid());

						// 判断是否关注**************
						int istggz = 0;
						int isftggz = 0;
						MyCare myCare = new MyCare();
						myCare.setUserId(userid);
						myCare.setConcernedId(mr.getUserid());
						List<MyCare> mycareList = myCareServiceI.myCareList(
								myCare, "1", "5");
						if (mycareList.size() > 0) {
							istggz = 1;
						}
						FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
								mr.getUserid());
						if (iscare != null) {
							isftggz = 1;
						}
						int sum01 = istggz + isftggz;
						if (sum01 > 0) {
							jbj.put("iscare", "1"); // 已关注
						} else {
							jbj.put("iscare", "0"); // 未关注
						}
						// 关注数量
						MyCare tggz = new MyCare();
						tggz.setConcernedId(mr.getUserid());
						List<MyCare> tggzList = myCareServiceI.myCareList(tggz,
								"1", "10");
						int tggzd = tggzList.size(); // 投顾关注度
						String ftggzd = ftgMyCareServiceI.getBgzd(mr
								.getUserid()); // 非投顾关注度
						int gzd = Integer.parseInt(ftggzd) + tggzd;
						jbj.put("gzd", gzd); // 关注度
						jai.add(jbj);
					}
					jbi.put("brList", jai);
					brarr.add(jbi);
				}


			}
			brjson.put("errorCode", "0");
			brjson.put("errorMsg", "查询成功");
			brjson.put("list", brarr);
			

			
			return brjson;

		} else if (type.equals("pdtgsq")) { // 判断投顾申请pdtgsq
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid"); // 用户id(必传)
			List<Tgsq> list = tzgwServiceI.pdList(userid);
			if (list.size() > 0) {
				json.put("pdzt", "1");// 不能申请
			} else {
				json.put("pdzt", "0");// 允许申请
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			return json;

		} else if (type.equals("pdNRVIP")) {//判断是否申请过牛人或者VIP
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid"); // 用户id(必传)
			String usertype = request.getParameter("usertype"); // 判断类型 v: VIP； n 牛人(必传)
			if (usertype.equals("v")) {
				List<VIPApplication> vv=vipApplicationServiceI.getuserVIP(userid, usertype);
				if (vv != null && vv.size() > 0) {
					json.put("errorCode", "0");
					json.put("errorMsg", "不能申请");
					
					return json;
				} else {
					json.put("errorCode", "1");
					json.put("errorMsg", "可以申请");
					return json;
				}
			} else if (usertype.equals("n")){

				List<VIPApplication> nn=vipApplicationServiceI.getuserNR(userid, usertype);
				if (nn != null && nn.size() > 0) {
					json.put("errorCode", "0");
					json.put("errorMsg", "不能申请");
					
					return json;
				} else {
					json.put("errorCode", "1");
					json.put("errorMsg", "可以申请");
					return json;
				}
			}
			
			
			
		}else if (type.equals("iscattle")) {//判断是否成为牛人或者VIP（既是通过审核的）
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid"); // 用户id(必传)
			String usertype = request.getParameter("usertype"); // 判断类型 v: VIP； n 牛人(必传)
			
			if (StringUtils.isNotBlank(usertype) && usertype.equals("n")) {
				VIPApplication nn=vipApplicationServiceI.getuser(userid, usertype);
				if (nn != null) {
					json.put("errorCode", "0");
					json.put("errorMsg", "用户是牛人");
					
					return json;
				} else {
					json.put("errorCode", "1");
					json.put("errorMsg", "用户不是牛人");
					return json;
				}
			} else if (StringUtils.isNotBlank(usertype) && usertype.equals("v")) {
				VIPApplication vv=vipApplicationServiceI.getuserid(userid, usertype);
				if (vv != null) {
					json.put("errorCode", "0");
					json.put("errorMsg", "用户是VIP");
					
					return json;
				} else {
					json.put("errorCode", "1");
					json.put("errorMsg", "用户不是VIP");
					return json;
				}
			}else {
				json.put("errorCode", "2");
				json.put("errorMsg", "请");
				return json;
			}
			
			
			
		}else if (type.equals("xwxflcx")) {// 新闻线分类查询
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String fl = request.getParameter("fl");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<TxwxGl> list = xwxServiceI.getFlList(fl, page, rows);
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					TxwxGl t = list.get(i);
					j.put("id", t.getId());
					j.put("xwtitel", t.getXwtitel());
					j.put("xwfbz", t.getXwfbz());
					j.put("xwfbfl", t.getXwfbfl());
					j.put("xwfbtime", t.getXwfbtime());
					j.put("xwnr", t.getXwnr());
					j.put("xwsqdj", t.getXwsqdj());
					j.put("xwjfxh", t.getXwjfxh());
					j.put("xwgmcs", t.getXwgmcs());
					j.put("xwbzcs", t.getXwbtccs());
					j.put("xwbtccs", t.getXwbtccs());
					j.put("czip", t.getCzip());
					j.put("czry", t.getCzry());
					j.put("xwtjtime", t.getXwtjtime());
					j.put("images", t.getImage());
					j.put("xwzy", t.getXwzy());// 新闻线新闻摘要
					j.put("plsl", pinglunServiceI.getCount(t.getId()));
					arr.add(j);
				}
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", list.size());
			json.put("rows", arr);
			return json;

		} else if (type.equals("careMeList")) { // 关注投顾用户的用户list
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String tguserid = request.getParameter("tguserid"); // 投顾userid；必传
			List<MyCare> careList = myCareServiceI.careMeList(tguserid, page,
					rows);
			if (careList.size() > 0) {
				for (int i = 0; i < careList.size(); i++) {
					JSONObject j = new JSONObject();
					MyCare mc = careList.get(i);
					String userid = mc.getUserId();
					LoginUser user = loginUserService.getLoginUser(userid);
					if (user != null) {
						j.put("userid", user.getId());
						if (StringUtils.isNotBlank(user.getNickname())) {
							j.put("username", user.getNickname());
						} else {
							j.put("username", "");
						}
						if (StringUtils.isNotBlank(user.getTx())) {
							j.put("tx", user.getTx());
						} else {
							j.put("tx", "");
						}
						String userType = user.getUsertype();
						if (userType.equals("1")) {
							j.put("userType", "普通用户");
						} else if (userType.equals("2")) {
							j.put("userType", "投资顾问");
						}
					}
					arr.add(j);
				}
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", careList.size());
			json.put("rows", arr);
			return json;

		} else if (type.equals("zbTgList")) {// pc 端投顾列表

			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String userid = request.getParameter("userid"); // 用户（必传）
			String bool=request.getParameter("bool");
			List<Tgshow> list = tzgwServiceI.getTglist(); // 获取所有投顾数据
			List<Tgsq> zbList = tzgwServiceI.getZbList(); // 获取值班投顾数据
			if (zbList.size() > 0) {
				for (int j = 0; j < zbList.size(); j++) {
					Tgsq tg = zbList.get(j);
					String zbTgid = tg.getId();
					if (list.size() > 0) {
						for (int i = 0; i < list.size(); i++) {
							JSONObject json1 = new JSONObject();
							//System.out.println(i);
							Tgshow t = list.get(i);
							String xhUserid = t.getTgid();
							if (xhUserid.equals(zbTgid)) {
								json1.put("tgid", tg.getUserid());
								json1.put("szjg", t.getSzjg());
								json1.put("tgqm", tg.getTgqm());// 投顾签名
								json1.put("khdz", tg.getKhdz());// 开户地址
								json1.put("cyzgzh", t.getCyzgzh());
								json1.put("tx", t.getTx());
								LoginUser loginuser = loginUserService
										.getUser(tg.getUserid());
								if (loginuser != null) {
									json1.put("name", loginuser.getNickname());
								} else {
									json1.put("name", "");
								}
								json1.put("fss", t.getFss());
								json1.put("sjspm", t.getSjspm());
								json1.put("sjsyll", t.getSjsyll());
								json1.put("ptsjb", t.getJbsl());
								json1.put("ptspm", t.getPtspm());
								json1.put("ptsyll", t.getPtsyll());
								json1.put("bzxcs", t.getBzxcs());
								json1.put("jdcs", t.getJdcs());
								json1.put("hpl", t.getHpl());
								json1.put("hyd", t.getHyd());
								json1.put("ywbdmyd", t.getYwbdmyd());
								if (StringUtils.isNotBlank(tg.getUserid())) {
									Tgsq t1 = tzgwServiceI.getInfo(tg
											.getUserid());
									json1.put("realname", t1.getRealname());
									json1.put("sex", t1.getSex());
									json1.put("age", t1.getAge());
									json1.put("dq", t1.getDq());
									json1.put("addr", t1.getAddr());
									json1.put("szjg", t1.getSzjg());
									json1.put("cynx", t1.getCynx());
									json1.put("phone", t1.getPhone());

								}
								json1.put("iszb", t.getIszb()); // 是否值班

								if (StringUtils.isBlank(userid)) {
									userid = "11111111111";
								}
								MyCare mycare = new MyCare();
								mycare.setUserId(userid);
								mycare.setConcernedId(tg.getUserid());
								/*
								 * //System.out.println("zbTgid:---"+zbTgid);
								 * System
								 * .out.println("tg.getUserid():----"+tg.getUserid
								 * ());
								 */
								List<MyCare> zbl = myCareServiceI.myCareList(
										mycare, "1", "10");
								if (zbl.size() > 0) {
									json1.put("iscare", "1");// 已关注
								} else {
									json1.put("iscare", "0");// 未关注
								}

								arr.add(json1);
								break;
							}
						}
					}
					if(bool!=null&&bool.equals("true")){
						//limit 设置要取得数据的条数
						List<ReplyQuestions> list2=replyQuestionsServiceI.getQuestionsList(10);

						for(int i=0;i<list2.size();i++){
							if(list2.get(i)!=null){
								JSONObject json1 = new JSONObject();
								AnswerQuestions answerQuestion=answerQuestionsServiceI.get(list2.get(i).getQuestionId());
								json1.put("id", answerQuestion.getId());
								json1.put("title", answerQuestion.getTitle());
								json1.put("userId", answerQuestion.getUserId());
								// j.put("userName", answerQuestions2.getUserName());
								LoginUser loginuser = loginUserService.getUser(answerQuestion.getUserId());
								if (loginuser != null) {
									json1.put("userName", loginuser.getNickname());
								} else {
									json1.put("userName", "");
								}
								json1.put("releaseTime", answerQuestion.getReleaseTime()); // 发布时间
								json1.put("state", answerQuestion.getState());
								json1.put("deleteReason", answerQuestion.getDeleteReason());
								json1.put("releaseContent", answerQuestion.getReleaseContent());
								json1.put("releaseIp", answerQuestion.getReleaseIp());
								json1.put("tzgwId", answerQuestion.getTzgwId());
								if (StringUtils.isBlank(answerQuestion.getFenLei())) {
									json1.put("fenLei", "");
								} else {
									json1.put("fenLei", answerQuestion.getFenLei());
								}
								json1.put("releaseJf", answerQuestion.getReleaseJf());
								json1.put("hfId", list2.get(i).getId());// 回复ID
								json1.put("scyy", list2.get(i).getDeleteReason());// 删除原因
								json1.put("twId", list2.get(i).getQuestionId());// 提问Id
								json1.put("hfnr", list2.get(i).getReleaseContent());// 回复内容
								json1.put("hfIp", list2.get(i).getReleaseIp());// 恢复人ip
								json1.put("hfsj", list2.get(i).getReleaseTime());// 回复时间
								json1.put("hfzt", list2.get(i).getState());// 回复状态
								json1.put("hfrId", list2.get(i).getUserId());// 回复人Id
								LoginUser hfr = loginUserService.getUser(list2.get(i).getUserId());
								if (hfr != null) {
									if (StringUtils.isNotBlank(hfr.getTx())) {
										json1.put("hfrtx", hfr.getTx()); // 回复人头像
									} else {
										json1.put("hfrtx", "");// 回复人头像
									}
								}
								json1.put("hfrXm", list2.get(i).getUserName());// 恢复人姓名
								json1.put("hflx", list2.get(i).getReplyType());// 回复类型
								json1.put("replyId", list2.get(i).getReplyId());
								YwbdJf ywbdJf = ywbdJfServiceI
										.getByReplyId(list2.get(i).getId());// 回复文章和评论一对一
								if (ywbdJf != null) {
									json1.put("ywbdJfId", ywbdJf.getId());// id
									json1.put("ywbdJfMyd", ywbdJf.getMyd());// 满意度
									json1.put("ywbdJfJfS", ywbdJf.getJfS());// 积分数
								}
								arr.add(json1);
							}
						}
					}

				}


			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "今日无值班顾问");
				return json;
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", zbList.size());
			json.put("rows", arr);
			//System.out.println(System.currentTimeMillis());
			return json;
		} else if (type.equals("pcljGlxx")) {// pc端链接管理信息
			String fl = request.getParameter("fl");
			// fl=1---关于我们| fl=2---广告服务 | fl=3---联系我们 | fl=4---诚聘英才
			// fl=5---免责声明 | fl=6---法律声明 |fl=7---征稿启事 | fl=8---软件下载
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(fl)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "请传入查询的分类信息！");
				return json;
			}
			List<GywmModel> list = gywmModelServiceI.getFlList(fl);
			if (list.size() > 0) {
				GywmModel gm = list.get(0);
				json.put("gxtime", gm.getGxtime());
				json.put("nr", gm.getNr());
				json.put("fl", gm.getFl());
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
			}

			return json;

		} else if (type.equals("gxbAdd")) { // 股学吧增加
			JSONObject json = new JSONObject();
			String gxtuserid = request.getParameter("userid");
			String gxttitel = request.getParameter("titel"); // 题目
			String gxtsqdj = request.getParameter("sqdj"); // 0 完全公开;1
			// 会员公开;2积分浏览
			String gxtjfxh = request.getParameter("jfxh"); // 访问需要消耗的积分
			String gxtnr = request.getParameter("nr"); // 内容
			String gxtimages = request.getParameter("images");
			// 图片保存路径：/gtl/attached/image/picture/XXXX.jpg
			String gxtzy = request.getParameter("zy"); // 摘要
			if (StringUtils.isBlank(gxtuserid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "未登录，无法添加！");
				return json;
			} else {
				LoginUser loginUser = loginUserService.getLoginUser(gxtuserid);
				if (loginUser == null) {
					json.put("errorCode", "2");
					json.put("errorMsg", "该用户不存在，请核实！");
					return json;
				}
				String gxtfbz = loginUser.getNickname();
				Tgxt gxb = new Tgxt();
				gxb.setGxttitel(gxttitel);
				gxb.setGxtfl("5");
				gxb.setGxtsqdj(gxtsqdj);
				gxb.setGxtfbz(gxtfbz);
				gxb.setGxtjfxh(gxtjfxh);
				gxb.setGxtnr(gxtnr);
				gxb.setImage(gxtimages);
				gxb.setGxtzy(gxtzy);
				gxtServiceI.add(gxb);
				json.put("errorCode", "0");
				json.put("errorMsg", "添加成功！");
			}
			return json;
		} else if (type.equals("nickNameFinaly")) {
			JSONObject json = new JSONObject();
			String nickName = request.getParameter("nickName");
			String nick = URLDecoder.decode(nickName, "UTF-8");
			List<LoginUser> list = loginUserService.getNickName(nick);
			if (list.size() > 0) {
				json.put("errorCode", "1");
				json.put("errorMsg", "该昵称被占用！");
				return json;
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "该昵称可用！");
			return json;

		} else if (type.equals("checkUserType")) {
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid");
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "无法获取用户ID！");
				return json;
			}
			LoginUser loginuser = loginUserService.getUser(userid);
			if (loginuser != null) {
				String usertype = loginuser.getUsertype();
				json.put("usertype", usertype);
				json.put("errorCode", "0");
				json.put("errorMsg", "获取用户信息成功！");
				return json;
			} else {
				json.put("errorCode", "2");
				json.put("errorMsg", "该用户不存在！");
				return json;
			}

		} else if (type.equals("test005")) {
			JSONObject json = new JSONObject();


			mrzcjsServiceI.insertInterfaceData();
			//mrzcjsServiceI.mrzcjsNo2();
			//mrzcjsServiceI.updateMrizcjsData();

			//mrzcjsServiceI.insertInterfaceData();
			//mrzcjsServiceI.mrzcjsNo2();
			//mrzcjsServiceI.updateMrizcjsData();


			//chatMessageEntityService.addChatMessage();
			//mrzcjsServiceI.insertInterfaceData();
			// mrzcjsServiceI.mrzcjsNo2();
			// mrzcjsServiceI.updateMrizcjsData();

			//gpsyServiceI.sgzdjs();
			json.put("end", "gpMmCjUpdate end");
			return json;
		} else if (type.equals("test001")) {
			JSONObject json = new JSONObject();
			// mncpServiceI.updateWcjjl();
			mrzcjsServiceI.mrzcjs();
			json.put("end", "mrzcjs end");
			return json;
		} else if (type.equals("test002")) {
			JSONObject json = new JSONObject();
			//mncpServiceI.gpMmCjUpdate();
			/* mncpServiceI.updateWcjjl(); */
			// mrzcjsServiceI.mrzcjs();
			mrzcjsServiceI.rzyUpdate();
			//mrzcjsServiceI.fjyDateUpdate();//复制结算数据的
			//gpsyServiceI.sgzdjs();
			//mrzcjsServiceI.zsyUpdate();
			// mncpServiceI.gpMmCjUpdate();

			// tgInfoServiceI.tgInfoAutoInserte();
			// tgInfoServiceI.tgInfoAutoUpdate();
			// mrzcjsServiceI.fjyDateUpdate();
			// String i = mncpServiceI.pdWtTime();
			// mrzcjsServiceI.fjyDateUpdate();
			json.put("end", "rzyUpdate end");
			return json;
		} else if (type.equals("test003")) {
			JSONObject json = new JSONObject();
			mrzcjsServiceI.zsyUpdate();
			json.put("end03", "zsyUpdate end");
			return json;

		} else if (type.equals("testUpdateBmSyl")) {
			JSONObject json = new JSONObject();
			mnSjBmServiceI.updateBmSyl();
			json.put("end", "updateBmSyl end");
			return json;

		} else if (type.equals("getConfigureInfo")) { // 获取配置信息
			JSONObject json = new JSONObject();
			// 获取配置信息实体类
			IntegralConfig integralConfig = integralConfigServiceI.get();
			// Double yhsl = Double.parseDouble(integralConfig.getGpmmyhs())
			// ;//印花税率
			String sxfl = integralConfig.getGpmmsxf(); // 手续费税率
			json.put("sxfl", sxfl); // 手续费率
			json.put("errorCode", "0");
			json.put("errorMsg", "获取配置信息成功！");
			return json;
		} else if (type.equals("mcWtAllwcj")) {// 卖出所有委托未成交，且持股数量为0.0数据
			DecimalFormat df = new DecimalFormat("0.0");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String userid = request.getParameter("userid");
			String mrlx = request.getParameter("mrlx");
			String sjid = request.getParameter("sjid");
			if (mrlx.equals("0")) {
				sjid = "111";
			}
			List<gpsy> list01 = gpsyServiceI.getJrAllmcList(userid, mrlx, sjid);
			if (list01.size() > 0) {
				for (int i = 0; i < list01.size(); i++) {
					gpsy nowgpsy = list01.get(i);
					JSONObject j = new JSONObject();
					j.put("zqdm", nowgpsy.getZqdm()); // 证券代码
					j.put("zqname", nowgpsy.getZqname());// 证券名称
					j.put("gpcbj", nowgpsy.getZgcbjg()); // 持股成本价
					j.put("mrlx", mrlx);
					String zqdm = nowgpsy.getZqdm();// 证券代码
					Double count = mncpServiceI.getwtmcList(userid, zqdm, mrlx); // 委托卖出的股票总数
					j.put("kysl", "0.0"); // 可用数量
					j.put("ccsl", df.format(count));// 持股数量
					arr.add(j);
				}
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("rows", arr);
			json.put("total", list01.size());
			return json;

		} else if (type.equals("mrWcjzc")) { // 买入股票未成交资产
			DecimalFormat df = new DecimalFormat("0.0");
			JSONObject json = new JSONObject();

			String userid = request.getParameter("userid");
			String mrlx = request.getParameter("mrlx");
			Double djzc = mncpServiceI.getMrwtwcj(userid, mrlx);
			json.put("djzc", df.format(djzc));
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			return json;

		} else if (type.equals("wdwcp")) {// 我的微操盘
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<WcpApplication> list = wcpsqServiceI.getList(userid, page,
					rows);
			JSONArray arr = new JSONArray();
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					WcpApplication wcp = list.get(i);
					JSONObject j = new JSONObject();

					WcpTc tc = wcpTcServiceI.get(wcp.getSqtcid());
					if (tc != null) {
						j.put("tcname", tc.getTcName());
					} else {
						j.put("tcname", "");
					}
					j.put("sqtcid", wcp.getSqtcid());
					j.put("sqtime", wcp.getSqtime()); // 申请单据时间
					j.put("shzt", wcp.getShzt()); // 审核状态
					j.put("djxgsj", wcp.getDjxgsj());// 单据相关数据
					j.put("bzj", wcp.getBzj());// 保证金
					j.put("glfsq", wcp.getGlfsq());// 管理费收取
					j.put("starttime", wcp.getStarttime());
					j.put("endtime", wcp.getEndtime());
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("total", wcpsqServiceI.getCount(userid));
				json.put("rows", arr);

			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "没有记录！");

			}
			return json;

		} else if (type.equals("ftgCareAdd")) { // 非投顾关注添加
			synchronized (this) {
				JSONObject json = new JSONObject();
				String userid = request.getParameter("userid");
				String concernedId = request.getParameter("concernedId");// 被关注人id
				if (StringUtils.isBlank(userid)) {
					json.put("errorCode", "1");
					json.put("errorMsg", "请登录！");
					return json;
				}
				LoginUser loginuser = loginUserService.getLoginUser(userid);
				if (loginuser == null) {
					json.put("errorCode", "2");
					json.put("errorMsg", "该用户不存在，请核实！");
					return json;
				}
				LoginUser concerneduser = loginUserService
						.getLoginUser(concernedId);
				if (concerneduser == null) {
					json.put("errorCode", "3");
					json.put("errorMsg", "被关注用户不存在，请核实！");
					return json;
				}
				FtgMyCare ygz = ftgMyCareServiceI.getYgzInfo(userid,
						concernedId);
				if (ygz != null) {
					json.put("errorCode", "4");
					json.put("errorMsg", "已关注！");
					return json;
				}

				FtgMyCare ftg = new FtgMyCare();
				ftg.setConcernedId(concernedId);
				ftg.setUserId(userid);
				ftgMyCareServiceI.add(ftg);
				json.put("errorCode", "0");
				json.put("errorMsg", "关注成功！");
				return json;

			}
		} else if (type.equals("ftgCancelCare")) { // 取消非投顾关注
			synchronized (this) {
				JSONObject json = new JSONObject();
				String userid = request.getParameter("userid");
				String concernedId = request.getParameter("concernedId");// 被关注人id
				LoginUser loginuser = loginUserService.getLoginUser(userid);
				if (loginuser == null) {
					json.put("errorCode", "2");
					json.put("errorMsg", "该用户不存在，请核实！");
					return json;
				}
				LoginUser concerneduser = loginUserService
						.getLoginUser(concernedId);
				if (concerneduser == null) {
					json.put("errorCode", "3");
					json.put("errorMsg", "被关注用户不存在，请核实！");
					return json;
				}
				FtgMyCare ygz = ftgMyCareServiceI.getYgzInfo(userid,
						concernedId);
				if (ygz == null) {
					json.put("errorCode", "4");
					json.put("errorMsg", "未关注！");
					return json;
				}
				ftgMyCareServiceI.delete(ygz.getId());
				json.put("errorCode", "0");
				json.put("errorMsg", "取消关注成功！");
				return json;
			}
		} else if (type.equals("ftgCareList")) { // 非投顾关注list
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String userid = request.getParameter("userid");
			List<FtgMyCare> list = ftgMyCareServiceI
					.ftgCareListByUserid(userid);
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					FtgMyCare ftg = list.get(i);
					JSONObject j = new JSONObject();
					String ftguserid = ftg.getConcernedId();
					j.put("ftguserid", ftguserid); // 非投顾id
					LoginUser ftgUser = loginUserService
							.getLoginUser(ftguserid);
					if (ftgUser != null) {

						if (StringUtils.isNoneBlank(ftgUser.getTx())) {
							j.put("tx", ftgUser.getTx()); // 非投顾头像
						} else {
							j.put("tx", "");
						}
						j.put("ftgnickname", ftgUser.getNickname());

						Mrzcjs mrzc = mrzcjsServiceI.getNewZc(ftguserid);
						if (mrzc != null) {
							j.put("sjbrsy", mrzc.getSjbrsy()); // 赛季本日收益
							j.put("sjbzsy", mrzc.getSjbzsy());// 赛季本周收益
							j.put("sjbysy", mrzc.getSjbysy());// 赛季本月收益
							j.put("sjzsy", mrzc.getSjzsy());// 赛季总收益
							j.put("sjid", mrzc.getSjid());// 赛季id
						}
						// 关注度
						String gzd = ftgMyCareServiceI.getBgzd(ftguserid);
						j.put("gzd", gzd);// 关注度
					}
					arr.add(j);
				}
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", list.size());
			json.put("rows", arr);
			return json;
		} else if (type.equals("gpkcxList")) { // 股票可撤销list
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String userid = request.getParameter("userid");
			String mrlx = request.getParameter("mrlx");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<Mncp> list = mncpServiceI.getKcxList(userid, mrlx, page, rows);
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					Mncp mncp = list.get(i);
					j.put("zqdm", mncp.getZqdm());
					j.put("zqname", mncp.getZqname());
					j.put("wtsl", mncp.getWtsl()); // 委拖数量
					j.put("wtjg", mncp.getWtjg()); // 委托价格
					j.put("cz", mncp.getCz());// 注：cz为0：买入；为1：卖出； 为2：撤销
					j.put("bz", mncp.getBz());// 注：bz为0：未成交；为1：成交
					j.put("cjsl", mncp.getCjsl()); // 成交数量
					j.put("mrlx", mncp.getMrlx());// 买入类型
					j.put("wttime", mncp.getWttime());// 委托时间
					arr.add(j);
				}
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "无可撤销数据！");
				return json;
			}
			json.put("total", list.size());
			json.put("rows", arr);
			json.put("errorCode", "0");
			json.put("errorMsg", "请求成功！");
			return json;

		} else if (type.equals("gqbzdList")) { // 股趣吧置顶List
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<Tgsdz> list = gqbServiceI.getZdList(page, rows);
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					Tgsdz t = list.get(i);
					j.put("id", t.getId());
					j.put("tgname", t.getTgname());
					j.put("dztitel", t.getDztitel());
					j.put("dzfbtime", t.getDzfbtime());
					j.put("dznr", t.getDznr());
					j.put("dzsqdj", t.getDzsqdj());
					j.put("dzjfxh", t.getDzjfxh());
					j.put("dzgmcs", t.getDzgmcs());
					j.put("dzbzcs", t.getDzbzcs());
					j.put("dzbtccs", t.getDzbtccs());
					j.put("qublb", t.getQublb());
					j.put("plsl", pinglunServiceI.getCount(t.getId()));
					j.put("images", t.getImages());
					j.put("gqbzy", t.getGqbzy());// 股趣吧摘要
					arr.add(j);
				}
				json.put("total", list.size());
				json.put("rows", arr);
				json.put("errorCode", "0");
				json.put("errorMsg", "请求成功！");
				return json;
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "无置顶数据！");
				return json;
			}

		} else if (type.equals("gqbZhuyList")) {// 股趣吧推荐到主页List
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<Tgsdz> list = gqbServiceI.getZhuyList(page, rows);
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					Tgsdz t = list.get(i);
					j.put("id", t.getId());
					j.put("tgname", t.getTgname());
					j.put("dztitel", t.getDztitel());
					j.put("dzfbtime", t.getDzfbtime());
					j.put("dznr", t.getDznr());
					j.put("dzsqdj", t.getDzsqdj());
					j.put("dzjfxh", t.getDzjfxh());
					j.put("dzgmcs", t.getDzgmcs());
					j.put("dzbzcs", t.getDzbzcs());
					j.put("dzbtccs", t.getDzbtccs());
					j.put("qublb", t.getQublb());
					j.put("plsl", pinglunServiceI.getCount(t.getId()));
					j.put("images", t.getImages());
					j.put("gqbzy", t.getGqbzy());// 股趣吧摘要
					arr.add(j);
				}
				json.put("total", list.size());
				json.put("rows", arr);
				json.put("errorCode", "0");
				json.put("errorMsg", "请求成功！");
				return json;
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "无置顶数据！");
				return json;
			}
		} else if (type.equals("gpccList02")) {// 股票持仓02
			DecimalFormat df = new DecimalFormat("0.0");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String userid = request.getParameter("userid");
			String mrlx = request.getParameter("mrlx");// 普通赛：0，赛季赛：1
			String sjid = request.getParameter("sjid");// 注：赛季赛持仓时传入用户正参加的当前赛季id（必传）
			if (mrlx.equals("0")) {
				sjid = "111";
			}
			List<gpsy> list = gpsyServiceI.getMyccList(userid, mrlx, page,
					rows, sjid); // 1:未全部卖出持仓信息
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					gpsy gp = list.get(i);
					JSONObject j = new JSONObject();
					j.put("zqdm", gp.getZqdm()); // 证券代码
					j.put("zqname", gp.getZqname());// 证券名称

					j.put("gpcbj", gp.getZgcbjg()); // 持股成本价
					j.put("mrlx", mrlx);
					String zqdm = gp.getZqdm();// 证券代码
					Integer count = 0;
					List<Mncp> list02 = mncpServiceI.getJrcgList(userid, zqdm,
							mrlx);
					if (list.size() > 0) {
						for (int n = 0; n < list02.size(); n++) {
							Mncp mncp = list02.get(n);
							count = count + mncp.getCjsl();
						}
					}
					Double jrmcwtsl = mncpServiceI.getwtmcList(userid, zqdm,
							mrlx); // 今日委托卖出数量
					Double kysl = Double.parseDouble(gp.getCgsl()) - count;
					j.put("kysl", df.format(kysl)); // 可用数量
					Double ccsl = Double.parseDouble(gp.getCgsl()) + jrmcwtsl;
					j.put("ccsl", df.format(ccsl));// 持股数量
					arr.add(j);
				}

			}
			List<gpsy> list03 = gpsyServiceI.getJrqksj(userid, mrlx); // 2：今日全部卖出成交保留显示数据
			if (list03.size() > 0) {
				for (int k = 0; k < list03.size(); k++) {
					gpsy cc = list03.get(k);
					JSONObject j02 = new JSONObject();
					j02.put("zqdm", cc.getZqdm()); // 证券代码
					j02.put("zqname", cc.getZqname());// 证券名称
					j02.put("ccsl", "0");// 持股数量
					j02.put("gpcbj", "0.0"); // 持股成本价
					j02.put("mrlx", mrlx);
					j02.put("kysl", "0");
					j02.put("mcyke", cc.getMcyke()); // 卖出时盈亏额
					j02.put("mcsl", cc.getMcsl()); // 卖出数量
					j02.put("mccbj", cc.getMccbj()); // 卖出时原有成本价格
					arr.add(j02);
				}
			}

			List<gpsy> list04 = gpsyServiceI.getJrAllmcList(userid, mrlx, sjid); // 3：委托全部卖出未成交数据
			if (list04.size() > 0) {
				for (int i = 0; i < list04.size(); i++) {
					gpsy nowgpsy = list04.get(i);
					JSONObject j03 = new JSONObject();
					j03.put("zqdm", nowgpsy.getZqdm()); // 证券代码
					j03.put("zqname", nowgpsy.getZqname());// 证券名称
					j03.put("gpcbj", nowgpsy.getZgcbjg()); // 持股成本价
					j03.put("mrlx", mrlx);
					String zqdm = nowgpsy.getZqdm();// 证券代码
					Double count = mncpServiceI.getwtmcList(userid, zqdm, mrlx); // 委托卖出的股票总数
					j03.put("kysl", "0.0"); // 可用数量
					j03.put("ccsl", df.format(count));// 持股数量
					arr.add(j03);
				}
			}

			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("rows", arr);
			json.put("total", list.size() + list03.size() + list04.size());
			return json;

		} else if(type.equals("partners")){//合作伙伴列表
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String page=request.getParameter("page");
			String rows=request.getParameter("rows");
			List<Partner> lp=partnerService.getList(page, rows);
			if (lp.size() > 0) {
				for (Partner partner : lp) {
					JSONObject jsonp = new JSONObject();
					jsonp.put("id", partner.getId());
					jsonp.put("companyName", partner.getCompanyName());
					jsonp.put("companyLink", partner.getCompanyLink());
					jsonp.put("partnerlogo", partner.getPartnerlogo());
					arr.add(jsonp);
				}
			}

			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("rows", arr);
			json.put("total", lp.size());
			return json;
		}else if (type.equals("nbExpert")) { // 牛人动态（根据收益排行前三数据进行显示：头像，用户昵称，当日收益，最新一条交易动态）
			DecimalFormat df = new DecimalFormat("0.0");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String userid = request.getParameter("userid");// 用户id（必传）

			// 获取当前最新的三条收益最高纪录
			List<Mrzcjs> list = mrzcjsServiceI.getNblist();
			if (list.size() > 0) {
				for (int i = 0; i < 3; i++) {
					Mrzcjs mr = list.get(i);
					JSONObject j = new JSONObject();

					j.put("sjbrsy", mr.getSjbrsy()); // 本日收益
					j.put("sjzsy", mr.getSjzsy());// 总收益
					j.put("sjid", mr.getSjid()); // 赛季id
					LoginUser loginuser = loginUserService.getLoginUser(mr
							.getUserid());
					j.put("userid", loginuser.getId()); // 用户id
					j.put("nickname", loginuser.getNickname()); // 用户昵称
					if (StringUtils.isNotBlank(loginuser.getTx())) {
						j.put("tx", loginuser.getTx()); // 头像
					} else {
						j.put("tx", "");
					}

					Mncp mn = mncpServiceI.getLastTrade(mr.getUserid());
					if (mn != null) {
						j.put("zqdm", mn.getZqdm()); // 交易证券代码
						j.put("zqname", mn.getZqname());// 交易证券名称
						//j.put("cjtime", mn.getCjtime()); // 成交时间
						j.put("cjtime", mn.getCjzqtime()); // 成交正确时间
						j.put("cjsl", mn.getWtsl()); // 成交数量
						j.put("cjjg", mn.getWtjg()); // 成交价格
						j.put("cz", mn.getCz());// 0:买入；1：卖出

					}
					// 关注度
					String gzd = ftgMyCareServiceI.getBgzd(mr.getUserid());
					j.put("gzd", gzd);// 关注度

					FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
							mr.getUserid());
					if (iscare != null) {
						j.put("iscare", "1"); // 已关注
					} else {
						j.put("iscare", "0"); // 未关注
					}
					arr.add(j);
				}
			}

			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("rows", arr);
			json.put("total", list.size());
			return json;

		} else if (type.equals("cattleSearch")) {
			JSONObject json = new JSONObject();
			JSONObject brjson = new JSONObject();
			JSONObject bzjson = new JSONObject();
			JSONObject byjson = new JSONObject();
			JSONObject zsyjson = new JSONObject();
			JSONArray brarr = new JSONArray();
			JSONArray bzarr = new JSONArray();
			JSONArray byarr = new JSONArray();
			JSONArray zsyarr = new JSONArray();
			String userid = request.getParameter("userid");// 用户id
			String lx = request.getParameter("lx");// 必传值：普通赛：0；赛季赛：1
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			//查询类型：br 本日排行;by 本月排行;bz 本周排行;zp 总排行;
			String searchType = request.getParameter("searchType");
			String sjid = request.getParameter("sjid");
			// //单个赛季查询sjid必传;(赛季赛时：传相对应的赛季id；)；统一数据时：不传此值
			if (StringUtils.isBlank(lx)) {
				lx="1";
			}
			if (StringUtils.isNotBlank(sjid) && StringUtils.isNotBlank(searchType)) {

				if (searchType.equals("br")) {

					List<Mrzcjs> list1 = mrzcjsServiceI.brList(lx, page, rows, sjid);//本日排行
					if (list1.size()>0) {
						for (int i = 0; i < list1.size(); i++) {
							JSONObject j1 = new JSONObject();
							Mrzcjs mr = list1.get(i);

							j1.put("userid", mr.getUserid());
							LoginUser loginuser = loginUserService.getUser(mr
									.getUserid());
							if (loginuser != null) {
								j1.put("tx", loginuser.getTx());// 头像
								j1.put("username", loginuser.getNickname());
							} else {
								j1.put("tx", "");// 头像
								j1.put("username", "");
							}

							// j1.put("brsy", mr.getBrsy()); //普通赛本日排行
							j1.put("sjbrsy", mr.getSjbrsy());// 赛季赛本日排行
							j1.put("sjzsy", mr.getSjzsy());// 赛季赛总收益
							j1.put("sjid", mr.getSjid());

							// 判断是否关注**************
							int istggz = 0;
							int isftggz = 0;
							MyCare myCare = new MyCare();
							myCare.setUserId(userid);
							myCare.setConcernedId(mr.getUserid());
							List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
									"1", "5");
							if (mycareList.size() > 0) {
								istggz = 1;
							}
							FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
									mr.getUserid());
							if (iscare != null) {
								isftggz = 1;
							}
							int sum01 = istggz + isftggz;
							if (sum01 > 0) {
								j1.put("iscare", "1"); // 已关注
							} else {
								j1.put("iscare", "0"); // 未关注
							}
							// 关注数量
							MyCare tggz = new MyCare();
							tggz.setConcernedId(mr.getUserid());
							List<MyCare> tggzList = myCareServiceI.myCareList(tggz,
									"1", "10");
							int tggzd = tggzList.size(); // 投顾关注度
							String ftggzd = ftgMyCareServiceI.getBgzd(mr.getUserid()); // 非投顾关注度
							int gzd = Integer.parseInt(ftggzd) + tggzd;
							j1.put("gzd", gzd); // 关注度
							brarr.add(j1);
						}
						brjson.put("errorCode", "0");
						brjson.put("errorMsg", "查询成功");
						brjson.put("list", brarr);
						
						/*json.put("errorCode", "0");
						json.put("errorMsg", "查询成功");
						json.put("brrows", brjson); // 本日
*/						return brjson;
					} else {
						brjson.put("errorCode", "1");
						brjson.put("errorMsg", "无日排行数据");
						
						/*json.put("errorCode", "0");
						json.put("errorMsg", "查询成功");
						json.put("brrows", brjson); // 本日
*/						return brjson;
					}
				}else if(searchType.equals("bz")){

					List<Mrzcjs> list2 = mrzcjsServiceI.bzList(lx, page, rows, sjid);//本周排行
					if (list2.size()>0) {
						for (int i = 0; i < list2.size(); i++) {
							JSONObject j1 = new JSONObject();
							Mrzcjs mr = list2.get(i);
							j1.put("userid", mr.getUserid());
							LoginUser loginuser = loginUserService.getUser(mr
									.getUserid());
							if (loginuser != null) {
								j1.put("tx", loginuser.getTx());// 头像
								j1.put("username", loginuser.getNickname());
							} else {
								j1.put("tx", "");// 头像
								j1.put("username", "");
							}
							// j1.put("bzsy", mr.getBzsy());//普通赛本周排行
							j1.put("sjbzsy", mr.getSjbzsy());// 赛季赛本周排行
							j1.put("sjzsy", mr.getSjzsy());// 赛季赛总收益
							j1.put("sjid", mr.getSjid());

							// 判断是否关注**************
							int istggz = 0;
							int isftggz = 0;
							MyCare myCare = new MyCare();
							myCare.setUserId(userid);
							myCare.setConcernedId(mr.getUserid());
							List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
									"1", "5");
							if (mycareList.size() > 0) {
								istggz = 1;
							}
							FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
									mr.getUserid());
							if (iscare != null) {
								isftggz = 1;
							}
							int sum01 = istggz + isftggz;
							if (sum01 > 0) {
								j1.put("iscare", "1"); // 已关注
							} else {
								j1.put("iscare", "0"); // 未关注
							}
							// 关注数量
							MyCare tggz = new MyCare();
							tggz.setConcernedId(mr.getUserid());
							List<MyCare> tggzList = myCareServiceI.myCareList(tggz,
									"1", "10");
							int tggzd = tggzList.size(); // 投顾关注度
							String ftggzd = ftgMyCareServiceI.getBgzd(mr.getUserid()); // 非投顾关注度
							int gzd = Integer.parseInt(ftggzd) + tggzd;
							j1.put("gzd", gzd); // 关注度
							bzarr.add(j1);
						}
						bzjson.put("errorCode", "0");
						bzjson.put("errorMsg", "查询成功");
						bzjson.put("list", bzarr);
						
						/*json.put("errorCode", "0");
						json.put("errorMsg", "查询成功");
						json.put("bzrows", bzjson);// 本周
*/						return bzjson;
					} else {
						bzjson.put("errorCode", "1");
						bzjson.put("errorMsg", "无周排行数据");
						
						/*json.put("errorCode", "0");
						json.put("errorMsg", "查询成功");
						json.put("bzrows", bzjson);// 本周
*/						return bzjson;
					}
				}else if(searchType.equals("by")){

					List<Mrzcjs> list3 = mrzcjsServiceI.byList(lx, page, rows, sjid);//本月排行
					if (list3.size()>0) {
						for (int i = 0; i < list3.size(); i++) {
							JSONObject j1 = new JSONObject();
							Mrzcjs mr = list3.get(i);
							j1.put("userid", mr.getUserid());
							LoginUser loginuser = loginUserService.getUser(mr
									.getUserid());
							if (loginuser != null) {
								j1.put("tx", loginuser.getTx());// 头像
								j1.put("username", loginuser.getNickname());
							} else {
								j1.put("tx", "");// 头像
								j1.put("username", "");
							}
							// j1.put("bysy", mr.getBysy());//普通赛本月排行
							j1.put("sjbysy", mr.getSjbysy());// 赛季赛本月排行
							j1.put("sjzsy", mr.getSjzsy());// 赛季赛总收益
							j1.put("sjid", mr.getSjid());
							// 判断是否关注**************
							int istggz = 0;
							int isftggz = 0;
							MyCare myCare = new MyCare();
							myCare.setUserId(userid);
							myCare.setConcernedId(mr.getUserid());
							List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
									"1", "5");
							if (mycareList.size() > 0) {
								istggz = 1;
							}
							FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
									mr.getUserid());
							if (iscare != null) {
								isftggz = 1;
							}
							int sum01 = istggz + isftggz;
							if (sum01 > 0) {
								j1.put("iscare", "1"); // 已关注
							} else {
								j1.put("iscare", "0"); // 未关注
							}
							// 关注数量
							MyCare tggz = new MyCare();
							tggz.setConcernedId(mr.getUserid());
							List<MyCare> tggzList = myCareServiceI.myCareList(tggz,
									"1", "10");
							int tggzd = tggzList.size(); // 投顾关注度
							String ftggzd = ftgMyCareServiceI.getBgzd(mr.getUserid()); // 非投顾关注度
							int gzd = Integer.parseInt(ftggzd) + tggzd;
							j1.put("gzd", gzd); // 关注度

							byarr.add(j1);
						}
						byjson.put("errorCode", "0");
						byjson.put("errorMsg", "查询成功");
						byjson.put("list", byarr);
						
						/*json.put("errorCode", "0");
						json.put("errorMsg", "查询成功");
						json.put("byrows", byjson);// 本月
*/						return byjson;
					} else {
						byjson.put("errorCode", "1");
						byjson.put("errorMsg", "无月排行数据");
						
						/*json.put("errorCode", "0");
						json.put("errorMsg", "查询成功");
						json.put("byrows", byjson);// 本月
*/						return byjson;
					}
				}else if(searchType.equals("zp")){

					List<Mrzcjs> zsyList = mrzcjsServiceI.zsyList(lx, page, rows, sjid);// 总收益排行榜
					if (zsyList.size()>0) {

						for (int i = 0; i < zsyList.size(); i++) {
							JSONObject j1 = new JSONObject();
							Mrzcjs mr = zsyList.get(i);
							j1.put("userid", mr.getUserid());
							LoginUser loginuser = loginUserService.getUser(mr
									.getUserid());
							if (loginuser != null) {
								j1.put("tx", loginuser.getTx());// 头像
								j1.put("username", loginuser.getNickname());
							} else {
								j1.put("tx", "");// 头像
								j1.put("username", "");
							}

							j1.put("sjzsy", mr.getSjzsy());// 赛季赛总排行
							j1.put("sjid", mr.getSjid());

							// 判断是否关注**************
							int istggz = 0;
							int isftggz = 0;
							MyCare myCare = new MyCare();
							myCare.setUserId(userid);
							myCare.setConcernedId(mr.getUserid());
							List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
									"1", "5");
							if (mycareList.size() > 0) {
								istggz = 1;
							}
							FtgMyCare iscare = ftgMyCareServiceI.isCare(userid,
									mr.getUserid());
							if (iscare != null) {
								isftggz = 1;
							}
							int sum01 = istggz + isftggz;
							if (sum01 > 0) {
								j1.put("iscare", "1"); // 已关注
							} else {
								j1.put("iscare", "0"); // 未关注
							}
							// 关注数量
							MyCare tggz = new MyCare();
							tggz.setConcernedId(mr.getUserid());
							List<MyCare> tggzList = myCareServiceI.myCareList(tggz,
									"1", "10");
							int tggzd = tggzList.size(); // 投顾关注度
							String ftggzd = ftgMyCareServiceI.getBgzd(mr.getUserid()); // 非投顾关注度
							int gzd = Integer.parseInt(ftggzd) + tggzd;
							j1.put("gzd", gzd); // 关注度

							zsyarr.add(j1);
						}

						zsyjson.put("errorCode", "0");
						zsyjson.put("errorMsg", "查询成功");
						zsyjson.put("list", zsyarr);
						
						/*json.put("errorCode", "0");
						json.put("errorMsg", "查询成功");
						json.put("zsyrows", zsyjson);// 总收益
*/						return zsyjson;
					} else {
						zsyjson.put("errorCode", "1");
						zsyjson.put("errorMsg", "无总排行数据");
						
						/*json.put("errorCode", "0");
						json.put("errorMsg", "查询成功");
						json.put("zsyrows", zsyjson);// 总收益
*/						return zsyjson;
					}
				}
				
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "请传入赛季ID或者查询类型");
				return json;
			}
		} else if (type.equals("getGoodType")) {//获取商品分类列表
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			JSONArray firstArr = new JSONArray();
			List<GoodType> lgt=goodTypeService.getAllList();
			if (lgt != null && lgt.size() > 0) {
				for (GoodType goodType : lgt) {
					JSONObject j = new JSONObject();
					j.put("id", goodType.getId());
					j.put("typeNme", goodType.getTypeName());
					arr.add(j);
				}
				List<GoodsManagement> lgm=goodsManagementServiceI.goodsManagementListByType(lgt.get(0).getTypeName(), page, rows);
				if (lgm != null && lgm.size() > 0) {
					for (GoodsManagement good : lgm) {
						JSONObject j = new JSONObject();
						j.put("id", good.getId());
						j.put("goodsName", good.getGoodsName());
						j.put("goodslogo", good.getGoodslogo());
						j.put("goodsprofile", good.getGoodsprofile());
						j.put("mallId", good.getMallId());
						j.put("goodsPictures", good.getGoodsPictures());
						j.put("goodsPrice", good.getGoodsPrice());
						j.put("goodsNum", good.getGoodsNum());
						j.put("mallName", good.getMallName());
						j.put("goodType", good.getGoodType());
						firstArr.add(j);
					}
					
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("goodType", arr);//商品分类列表
				json.put("goods", firstArr);//商品列表
				json.put("goodsTotal", goodsManagementServiceI.goodsManagementListByTypeCount(lgt.get(0).getTypeName()));//商品列表总数
			} else {
				List<GoodsManagement> lgm=goodsManagementServiceI.goodAll(page, rows);
				if (lgm != null && lgm.size() > 0) {
					for (GoodsManagement good : lgm) {
						JSONObject j = new JSONObject();
						j.put("id", good.getId());
						j.put("goodsName", good.getGoodsName());
						j.put("goodslogo", good.getGoodslogo());
						j.put("goodsprofile", good.getGoodsprofile());
						j.put("mallId", good.getMallId());
						j.put("goodsPictures", good.getGoodsPictures());
						j.put("goodsPrice", good.getGoodsPrice());
						j.put("goodsNum", good.getGoodsNum());
						j.put("mallName", good.getMallName());
						j.put("goodType", good.getGoodType());
						firstArr.add(j);
					}
					
				}
				json.put("errorCode", "1");
				json.put("errorMsg", "没有商品分类");
				json.put("goods", firstArr);//商品列表
				json.put("goodsTotal", lgm.size());//商品列表总数
			}
			
			return json;

		} else if (type.equals("getGoodByType")) {//根据商品分类获取商品列表
			String page = request.getParameter("page");//页数
			String rows = request.getParameter("rows");//个数
			String goodType = request.getParameter("goodType");//商品分类
			JSONObject json = new JSONObject();
			JSONArray firstArr = new JSONArray();
			List<GoodsManagement> lgm=goodsManagementServiceI.goodsManagementListByType(goodType, page, rows);
			if (lgm != null && lgm.size() > 0) {
				for (GoodsManagement good : lgm) {
					JSONObject j = new JSONObject();
					j.put("id", good.getId());
					j.put("goodsName", good.getGoodsName());
					j.put("goodslogo", good.getGoodslogo());
					j.put("goodsprofile", good.getGoodsprofile());
					j.put("mallId", good.getMallId());
					j.put("goodsPictures", good.getGoodsPictures());
					j.put("goodsPrice", good.getGoodsPrice());
					j.put("goodsNum", good.getGoodsNum());
					j.put("mallName", good.getMallName());
					j.put("goodType", good.getGoodType());
					firstArr.add(j);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("goods", firstArr);//商品列表
				json.put("goodsTotal", lgm.size());//商品列表总数
			}else{
				json.put("errorCode", "1");
				json.put("errorMsg", "该分类没有商品");
			}
			return json;
		}else if (type.equals("wzlb")) {// 文章列表
			String userid = request.getParameter("userid");
			String lanmu = request.getParameter("lanmu");

			String page = request.getParameter("page");
			String rows = request.getParameter("rows");

			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			// lanmu=8新闻线 7股趣吧 6股学堂

			if (lanmu.equals("8")) {
				String fl = request.getParameter("fl");// 新闻线分类
				List<TxwxGl> list = xwxServiceI.getList(fl, page, rows);
				int total = xwxServiceI.getCount(fl);
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					TxwxGl t = list.get(i);
					j.put("id", t.getId());
					j.put("xwtitel", t.getXwtitel());
					j.put("xwfbz", t.getXwfbz());
					j.put("xwfbfl", t.getXwfbfl());
					j.put("xwfbtime", t.getXwfbtime());
					j.put("xwnr", t.getXwnr());
					j.put("xwsqdj", t.getXwsqdj());
					j.put("xwjfxh", t.getXwjfxh());
					j.put("xwgmcs", t.getXwgmcs());
					j.put("xwbzcs", t.getXwbtccs());
					j.put("xwbtccs", t.getXwbtccs());
					j.put("czip", t.getCzip());
					j.put("czry", t.getCzry());
					j.put("xwtjtime", t.getXwtjtime());
					j.put("images", t.getImage());
					j.put("xwzy", t.getXwzy());// 新闻线新闻摘要
					j.put("plsl", pinglunServiceI.getCount(t.getId()));
					if (StringUtils.isNotBlank(userid)) {
						List<Jfxhjl> list_jf = jfxhjlfServiceI.getList(userid,
								t.getId(), "", "", "", "");
						if (list_jf.size() > 0) {
							j.put("isbuy", "yes");
						} else {
							j.put("isbuy", "no");
						}

					}

					arr.add(j);

				}
				json.put("errorCode", "0");
				json.put("total", list.size());
				json.put("pcAllcout", total);
				json.put("rows", arr);
				return json;

			} else if (lanmu.equals("7")) {// 股趣吧
				String fl = request.getParameter("fl");// 1股市段子 2甘甜股事 3 股道情歌
				// 4趣味小图 5 有趣视频
				if (fl != null) {
					if (fl.equals("1")) {
						fl = "股市段子";
					} else if (fl.equals("2")) {
						fl = "甘甜股事";
					} else if (fl.equals("3")) {
						fl = "股道情歌";
					} else if (fl.equals("4")) {
						fl = "趣味小图";
					} else if (fl.equals("5")) {
						fl = "有趣视频";
					}
				}
				List<Tgsdz> list = gqbServiceI.getList(fl, page, rows);
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					Tgsdz t = list.get(i);
					j.put("id", t.getId());
					j.put("tgname", t.getTgname());
					j.put("dztitel", t.getDztitel());
					j.put("dzfbtime", t.getDzfbtime());
					j.put("dznr", t.getDznr());
					j.put("dzsqdj", t.getDzsqdj());
					j.put("dzjfxh", t.getDzjfxh());
					j.put("dzgmcs", t.getDzgmcs());
					j.put("dzbzcs", t.getDzbzcs());
					j.put("dzbtccs", t.getDzbtccs());
					j.put("qublb", t.getQublb());
					j.put("plsl", pinglunServiceI.getCount(t.getId()));
					j.put("images", t.getImages());
					j.put("gqbzy", t.getGqbzy());// 股趣吧摘要
					if (StringUtils.isNotBlank(userid)) {
						List<Jfxhjl> list_jf = jfxhjlfServiceI.getList(userid,
								t.getId(), "", "", "", "");
						if (list_jf.size() > 0) {
							j.put("isbuy", "yes");
						} else {
							j.put("isbuy", "no");
						}

					}
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("total", list.size());
				json.put("pcAllcout", gqbServiceI.getCount(fl));
				json.put("rows", arr);
				return json;

			} else if (lanmu.equals("6")) {// 股学堂
				String fl = request.getParameter("fl");// 分类 1草根教师 2教授讲堂 0憨豆评股
				// 3高手故事、4实战秘籍 5股学吧
				List<Tgxt> list = gxtServiceI.getList(fl, page, rows);
				for (int i = 0; i < list.size(); i++) {
					Tgxt t = list.get(i);
					JSONObject j = new JSONObject();
					j.put("id", t.getId());
					j.put("gxttitel", t.getGxttitel());
					j.put("gxtfl", t.getGxtfl());
					j.put("gxtfbtime", t.getGxtfbtime());
					j.put("gxtfbz", t.getGxtfbz());
					j.put("gxtnr", t.getGxtnr());
					j.put("images", t.getImage());
					j.put("gxtzy", t.getGxtzy());// 股学堂摘要
					j.put("plsl", pinglunServiceI.getCount(t.getId()));
					if (StringUtils.isNotBlank(userid)) {
						List<Jfxhjl> list_jf = jfxhjlfServiceI.getList(userid,
								t.getId(), "", "", "", "");
						if (list_jf.size() > 0) {
							j.put("isbuy", "yes");
						} else {
							j.put("isbuy", "no");
						}

					}
					arr.add(j);
				}
				json.put("rows", arr);
				json.put("errorCode", "0");
				json.put("total", list.size());
				json.put("pcAllcout", gxtServiceI.getCount(fl));
				return json;
			} else {
				json.put("errorMsg", "无此类别");
				json.put("errorCode", "1");
				return json;
			}

		}else if(type.equals("wzxq")){//文章详情
			JSONObject j = new JSONObject();
			String lanmu=request.getParameter("lanmu");
			if(lanmu.equals("8")){//新闻线
				String wzid=request.getParameter("wzid");//文章ID
				TxwxGl t=xwxServiceI.getTxwxGl(wzid);
				
				j.put("id", t.getId());//ID
				j.put("xwtitel", t.getXwtitel());//title
				j.put("xwfbz",t.getXwfbz() );//作者
				j.put("xwfbfl", t.getXwfbfl());
				j.put("xwfbtime", t.getXwfbtime());//发布时间
				j.put("xwnr", t.getXwnr());
				j.put("xwsqdj", t.getXwsqdj());
				j.put("xwjfxh", t.getXwjfxh());
				j.put("xwgmcs", t.getXwgmcs());
				j.put("xwbzcs", t.getXwbtccs());
				j.put("xwbtccs", t.getXwbtccs());
				j.put("czip", t.getCzip());
				j.put("czry", t.getCzry());
				j.put("xwtjtime", t.getXwtjtime());
				j.put("wzlx", "xwx");
				j.put("xwzy",t.getXwzy());
				int a=pinglunServiceI.getCount(wzid);
				j.put("plcount", a);//评论数
				j.put("zan", t.getXwbzcs());//被赞次数
				j.put("images", t.getImage());//图片
				return j;
			}else if(lanmu.equals("7")){//股趣吧
				String wzid=request.getParameter("wzid");
				JSONObject json=new JSONObject();
				if(wzid==null){
					json.put("errorCode", "1");
					json.put("errorMsg", "请输入文章的ID");
				}else{
					if(!wzid.equals("")){
						Tgsdz t=gqbServiceI.getGqbdz(wzid);
						if(t==null){
							json.put("errorCode", "2");
							json.put("errorMsg", "无此文章");
						}else{
							json.put("id", t.getId());json.put("tgname", t.getTgname());json.put("dztitel",t.getDztitel() );
							json.put("dzfbtime",t.getDzfbtime() );json.put("dznr", t.getDznr());json.put("dzsqdj", t.getDzsqdj());
							json.put("dzjfxh", t.getDzjfxh());json.put("dzgmcs", t.getDzgmcs());json.put("dzbzcs", t.getDzbzcs());
							json.put("dzbtccs",t.getDzbtccs() );json.put("qublb", t.getQublb());json.put("wzlx", "gqb");
							json.put("images", t.getImages());j.put("gqbzy", t.getGqbzy());//股趣吧摘要
							json.put("zan",t.getDzbzcs());
							int a=pinglunServiceI.getCount(wzid);
							json.put("plcount", a);
						}
					}else{
						json.put("errorCode", "1");
						json.put("errorMsg", "请输入文章的ID");
					}
				}
				
				return json;
				
			}else if(lanmu.equals("6")){//股学堂
				String wzid=request.getParameter("wzid");//文章ID
				JSONObject json=new JSONObject();
				if(wzid==null){
					json.put("errorCode", "1");
					json.put("errorMsg", "请输入文章的ID");
				}else{
					if(!wzid.equals("")){
						Tgxt t=gxtServiceI.getGxt(wzid);
						if(t==null){
							json.put("errorCode", "2");
							json.put("errorMsg", "无此文章");
						}else{
							json.put("id",t.getId() );json.put("gxttitel",t.getGxttitel() );
							json.put("gxtfl", t.getGxtfl());json.put("gxtfbtime", t.getGxtfbtime());
							json.put("gxtfbz", t.getGxtfbz());json.put("gxtnr", t.getGxtnr());
							json.put("wzlx", "gxt");
							json.put("gxtzy", t.getGxtzy());//摘要
							json.put("images", t.getImage());
							json.put("zan",t.getGxtbzcs());
							int a=pinglunServiceI.getCount(wzid);
							json.put("plcount", a);
						}
					}else{
						json.put("errorCode", "1");
						json.put("errorMsg", "请输入文章的ID");
					}
				}
				return json;
				
				
			}else{
				j.put("errorMsg", "无此类别");
				j.put("errorCode", "1");
				return j;
			}
	}

		return null;
	}

	/**
	 * ajax跨域请求
	 * 
	 * @param request
	 * @param response
	 * @throws Exception
	 */
	@RequestMapping("/getInfo2")
	@ResponseBody
	public void getInfo2(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String callback = (String) request.getParameter("callback");
		AppVersion app = icsServiceI.getVersion();
		JSONObject j = new JSONObject();
		if (app.getId() != null) {
			j.put("android", app.getAndroid());
			j.put("IOS", app.getIOS());
		}

		String retStr = callback + "(" + j.toJSONString() + ")";
		response.getWriter().print(retStr);
	}

	public boolean available(String str) throws Exception {
		List<Wordbook> list = wordServiceI.getList();
		for (int i = 0; i < list.size(); i++) {
			String word = list.get(i).getWords();
			if (str.contains(word)) {
				return false;
			}
		}
		return true;
	}

	// 详细信息
	@RequestMapping("/upload")
	@ResponseBody
	public JSONObject messageupload(
			@RequestParam("fileUp") CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename = saveImage(files, request, modelMap, response,
				TimeUtils.getNow14());
		JSONObject j = new JSONObject();
		j.put("filename", "/gtl/attached/image/picture" + filename);
		return j;
	}

	@RequestMapping("/upload1")
	@ResponseBody
	public JSONObject messageupload1(
			@RequestParam("fileUp1") CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename = saveImage(files, request, modelMap, response,
				TimeUtils.getNow14());
		JSONObject j = new JSONObject();
		j.put("filename", "/gtl/attached/image/picture" + filename);
		return j;
	}

	@RequestMapping("/upload2")
	@ResponseBody
	public JSONObject messageupload2(
			@RequestParam("fileUp2") CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename = saveImage(files, request, modelMap, response,
				TimeUtils.getNow14());
		JSONObject j = new JSONObject();
		j.put("filename", "/gtl/attached/image/picture" + filename);
		return j;
	}

	@RequestMapping("/upload3")
	@ResponseBody
	public JSONObject messageupload3(
			@RequestParam("fileUp3") CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename = saveImage(files, request, modelMap, response,
				TimeUtils.getNow14());
		JSONObject j = new JSONObject();
		j.put("filename", "/gtl/attached/image/picture" + filename);
		return j;
	}

	@RequestMapping("/upload4")
	@ResponseBody
	public JSONObject messageupload4(
			@RequestParam("fileUp4") CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename = saveImage(files, request, modelMap, response,
				TimeUtils.getNow14());
		JSONObject j = new JSONObject();
		j.put("filename", "/gtl/attached/image/picture" + filename);
		return j;
	}

	// 一个fileUp,实现多图上传
	@RequestMapping("/uploadMore")
	@ResponseBody
	public JSONObject messageuploadMore(
			@RequestParam("fileUp") CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		JSONObject j = new JSONObject();
		try {
			String filename = saveManyImage(files, request, modelMap, response);
			j.put("errorCode", "0");
			j.put("errorMsg", "上传成功!");
			j.put("filename", filename);
			return j;
		} catch (Exception e) {
			j.put("errorCode", "1");
			j.put("errorMsg", "上传错误！error:" + e.getMessage());
			return j;
		}

	}

	@RequestMapping("/uploadAll")
	@ResponseBody
	public JSONObject messageuploadAll(
			@RequestParam("fileUp1") CommonsMultipartFile[] files1,
			@RequestParam("fileUp2") CommonsMultipartFile[] files2,
			@RequestParam("fileUp3") CommonsMultipartFile[] files3,
			@RequestParam("fileUp4") CommonsMultipartFile[] files4,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename1 = saveImage(files1, request, modelMap, response,
				TimeUtils.getNow14());
		String filename2 = saveImage(files2, request, modelMap, response,
				TimeUtils.getNow14());
		String filename3 = saveImage(files3, request, modelMap, response,
				TimeUtils.getNow14());
		String filename4 = saveImage(files4, request, modelMap, response,
				TimeUtils.getNow14());
		JSONObject j = new JSONObject();
		j.put("filename1", "/gtl/attached/image/picture" + filename1);
		j.put("filename2", "/gtl/attached/image/picture" + filename2);
		j.put("filename3", "/gtl/attached/image/picture" + filename3);
		j.put("filename4", "/gtl/attached/image/picture" + filename4);
		return j;
	}

	/**
	 * 单图上传
	 * 
	 * @param files
	 * @param request
	 * @param modelMap
	 * @param response
	 * @param logoid
	 * @return
	 * @throws Exception
	 */
	public String saveImage(CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response, String logoid) throws Exception {
		String filename = "";
		for (int i = 0; i < files.length; i++) {
			if (!files[i].isEmpty()) {
				String newFileName = "";
				int pre = (int) System.currentTimeMillis();
				try {
					ServletContext sc = request.getSession()
							.getServletContext();
					String dir = sc.getRealPath("/attached/image/picture/"); // 设定文件保存的目录
					// 拿到输出流，同时重命名上传的文件
					String fileExt = files[i]
							.getOriginalFilename()
							.substring(
									files[i].getOriginalFilename().lastIndexOf(
											".") + 1).toLowerCase();
					newFileName = UUID.randomUUID().toString() + "." + fileExt;
					FileOutputStream os = new FileOutputStream(dir
							+ newFileName);

					// 拿到上传文件的输入流
					FileInputStream in = (FileInputStream) files[i]
							.getInputStream();
					// 以写字节的方式写文件
					int b = 0;
					while ((b = in.read()) != -1) {
						os.write(b);
					}
					os.flush();
					os.close();
					in.close();
					int finaltime = (int) System.currentTimeMillis();

				} catch (Exception e) {
					e.printStackTrace();
					//System.out.println("上传出错");
				}
				//
				return newFileName;
				// filename+=newFileName+",";//多图上传
			} else {
				return "";
			}
		}
		return filename;
	}

	/**
	 * 多图同时上传
	 * 
	 * @param files
	 * @param request
	 * @param modelMap
	 * @param response
	 * @param logoid
	 * @return
	 * @throws Exception
	 */
	public String saveManyImage(CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename = "";
		for (int i = 0; i < files.length; i++) {
			if (!files[i].isEmpty()) {
				String newFileName = "";
				int pre = (int) System.currentTimeMillis();
				try {
					ServletContext sc = request.getSession()
							.getServletContext();
					String dir = sc.getRealPath("/attached/image/picture/"); // 设定文件保存的目录
					// 拿到输出流，同时重命名上传的文件
					String fileExt = files[i]
							.getOriginalFilename()
							.substring(
									files[i].getOriginalFilename().lastIndexOf(
											".") + 1).toLowerCase();
					newFileName = UUID.randomUUID().toString() + "." + fileExt;
					FileOutputStream os = new FileOutputStream(dir
							+ newFileName);

					// 拿到上传文件的输入流
					FileInputStream in = (FileInputStream) files[i]
							.getInputStream();
					// 以写字节的方式写文件
					int b = 0;
					while ((b = in.read()) != -1) {
						os.write(b);
					}
					os.flush();
					os.close();
					in.close();
					int finaltime = (int) System.currentTimeMillis();
				} catch (Exception e) {
					e.printStackTrace();
					//System.out.println("上传出错");
				}
				filename += "/gtl/attached/image/picture" + newFileName + ",";// 多图上传
			} else {
				return "";
			}
		}
		return filename.substring(0, filename.length() - 1);
	}

	@RequestMapping("/deleteFile")
	@ResponseBody
	public JSONObject deleteFile(HttpServletRequest req) {
		String sPath = req.getParameter("path");
		String e = "F:/MyEclipseProfessionalWorkspace/.metadata/.me_tcat7/webapps/gtl";// 本地测试路径，部署到服务器上应该使用服务器上的路径
		String f = e + sPath;
		boolean flag = false;
		File file = new File(f);
		// 路径为文件且不为空则进行删除
		if (file.isFile() && file.exists()) {
			file.delete();
			flag = true;
		}
		JSONObject j = new JSONObject();
		j.put("flag", flag);
		return j;
	}

	@RequestMapping("/getInfo111")
	@ResponseBody
	public String getInfo111(HttpServletRequest req) throws Exception{
		String name = req.getParameter("name");
		LoginUser u=new LoginUser();
		u.setId(UUID.randomUUID().toString());
		u.setName(name);
		u.setPwd("123456");
		u.setPhone("11111111111");
		loginUserService.add(u);
		Mncp m = new Mncp();
		//m.setUserid(u.getId());
		//m.setUsername(u.getName());
		//m.setCz("0");
		mncpServiceI.add(null);
		
		UserJbxfInfo uj = new UserJbxfInfo();
		uj.setUserid(u.getId());
		userJbxfInfoServiceI.add(uj);
		
		return "true";
		
	}
	
	
	public static void main(String[] args) {
		String e = "F:/MyEclipseProfessionalWorkspace/.metadata/.me_tcat7/webapps/gtl";
		String f = "/gtl/attached/image/picture201508201633172.jpg";
		boolean flag = false;
		File file = new File(f);
		// 路径为文件且不为空则进行删除
		if (file.isFile() && file.exists()) {
			file.delete();
			flag = true;
		}
		//System.out.println(flag);

	}
}
