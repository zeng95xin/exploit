package com.web.util;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class TimeBj {
	public static final int YEAR_RETURN = 0;

	public static final int MONTH_RETURN = 1;

	public static final int DAY_RETURN = 2;

	public static final int HOUR_RETURN = 3;

	public static final int MINUTE_RETURN = 4;

	public static final int SECOND_RETURN = 5;

	public static final String YYYY = "yyyy";

	public static final String YYYYMM = "yyyy-MM";

	public static final String YYYYMMDD = "yyyy-MM-dd";

	public static final String YYYYMMDDHH = "yyyy-MM-dd HH";

	public static final String YYYYMMDDHHMM = "yyyy-MM-dd HH:mm";

	public static final String YYYYMMDDHHMMSS = "yyyy-MM-dd HH:mm:ss";

	public static long getBetween(String beginTime, String endTime,
			String formatPattern, int returnPattern) throws ParseException {
		SimpleDateFormat simpleDateFormat = new SimpleDateFormat(formatPattern);
		Date beginDate = simpleDateFormat.parse(beginTime);
		Date endDate = simpleDateFormat.parse(endTime);

		Calendar beginCalendar = Calendar.getInstance();
		Calendar endCalendar = Calendar.getInstance();
		beginCalendar.setTime(beginDate);
		endCalendar.setTime(endDate);
		switch (returnPattern) {
		case YEAR_RETURN:
			return TimeBj.getByField(beginCalendar, endCalendar, Calendar.YEAR);
		case MONTH_RETURN:
			return TimeBj.getByField(beginCalendar, endCalendar, Calendar.YEAR)
					* 12
					+ TimeBj.getByField(beginCalendar, endCalendar,
							Calendar.MONTH);
		case DAY_RETURN:
			return TimeBj.getTime(beginDate, endDate) / (24 * 60 * 60 * 1000);
		case HOUR_RETURN:
			return TimeBj.getTime(beginDate, endDate) / (60 * 60 * 1000);
		case MINUTE_RETURN:
			return TimeBj.getTime(beginDate, endDate) / (60 * 1000);
		case SECOND_RETURN:
			return TimeBj.getTime(beginDate, endDate) / 1000;
		default:
			return 0;
		}
	}

	private static long getByField(Calendar beginCalendar,
			Calendar endCalendar, int calendarField) {
		return endCalendar.get(calendarField)
				- beginCalendar.get(calendarField);
	}

	private static long getTime(Date beginDate, Date endDate) {
		return endDate.getTime() - beginDate.getTime();
	}

	public static void main(String[] args) {
		try {
			//System.out.println(TimeBj.getBetween("2013-05-02 12:02:04","2013-05-02 14:05:04", TimeBj.YYYYMMDDHHMMSS,TimeBj.SECOND_RETURN));
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
