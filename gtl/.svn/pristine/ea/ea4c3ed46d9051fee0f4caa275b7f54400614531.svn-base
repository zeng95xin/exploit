package com.admin.service.impl;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.UserSanFangDao;
import com.admin.model.JgDevice;
import com.admin.model.User_SanFang;
import com.admin.service.UserSanFangService;
import com.alibaba.fastjson.JSON;
import com.web.util.HttpClientUtil;
import com.web.util.TimeUtils;

@Service
public class UserSanFangServiceImpl implements UserSanFangService{
	
	@Autowired
	private UserSanFangDao usdao;

	@Override
	public User_SanFang slogin(User_SanFang usf) {
		
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("uid", usf.getUid());
		
		User_SanFang usg=usdao.get("from User_SanFang t where t.uid = :uid ",params);
		
		if (usg != null) {
			String token = "NzZkNGY0NTkyYmQ1OTA5ZTY2NmVhNTI3OmM5YWNjMjJiNjlkODY3YjU5MTMwNjRjNA==";
			String url = "https://device.jpush.cn/v3/devices/"
					+ usf.getRegistrationId(); // 绑定用户设备编号

			JgDevice jsdever = new JgDevice();
			jsdever.setAlias(usg.getId().replace("-", ""));
			String requestBody = JSON.toJSONString(jsdever);
			Map<String, String> headerMap = new HashMap<String, String>(); // 请求头header
			headerMap.put("Authorization", "Basic " + token);
			headerMap.put("Accept", "application/json");
			String abc = HttpClientUtil.postHttps(url, requestBody,
					"application/json; charset=utf-8", headerMap);
			//System.out.println("极光绑定设备日志输出：" + abc);
			return usg;
		}
		
		return null;
	}

	@Override
	public int sfReq(User_SanFang usf) throws Exception {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("uid", usf.getUid());
		int errorcode = 0;
		User_SanFang usg=usdao.get("from User_SanFang t where t.uid = :uid ",params);
		if (usg != null) {
			errorcode=9;//该用户已经存在
		}else{
			usf.setId(UUID.randomUUID().toString());
			usf.setRowAddTime(TimeUtils.getTime("yyyy-MM-dd"));
			usf.setRowUpdateTime(TimeUtils.getTime("yyyy-MM-dd"));
			usdao.save(usf);
			errorcode=8;//第三方注册成功
		}
		
		return errorcode;
	}

	/*@Override
	public String add(User_SanFang usf) throws Exception {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("uid", usf.getUid());
		String code="";
		User_SanFang usg=usdao.get("from User_SanFang t where t.uid = :uid ",params);
		if (usg != null) {
			code=null;//该用户已经存在
		}else{
			usf.setId(UUID.randomUUID().toString());
			usf.setRowAddTime(TimeUtils.getTime("yyyy-MM-dd"));
			usf.setRowUpdateTime(TimeUtils.getTime("yyyy-MM-dd"));
			usdao.save(usf);
			code=null;//第三方注册成功
		}
		return null;
	}*/

	

}
