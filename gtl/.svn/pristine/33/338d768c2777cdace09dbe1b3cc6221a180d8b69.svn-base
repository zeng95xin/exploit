package com.admin.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.admin.model.Jfxhjl;
import com.admin.model.LoginUser;
import com.admin.model.Score;
import com.admin.model.ScoreType;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.Json;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.SessionInfo;
import com.admin.service.LoginUserServiceI;
import com.admin.service.ScoreServiceI;
import com.admin.service.ScoreTypeServiceI;
import com.admin.util.ConfigUtil;

@Controller
@RequestMapping("/score")
public class ScoreController {
	@Autowired
	private ScoreServiceI scoreServiceI;
	@Autowired
	private ScoreTypeServiceI scoreTypeServiceI;
	@Autowired
	private LoginUserServiceI loginUserService;
	
	@RequestMapping("/index")
	public String manager(HttpServletRequest request) {
		List<ScoreType> scoreTypes=scoreTypeServiceI.find("from ScoreType");
		request.getSession().setAttribute("types",scoreTypes);
		return "admin/score/score";
	}
	
	
	@RequestMapping("/edit")
	public String editPage(){
		return "";
	}
	
	/**
	 * 获取积分列表
	 * @param score
	 * @param ph
	 * @return
	 */
	@RequestMapping("/dataGrid")
	@ResponseBody
	public DataGrid dataGrid(Score score, PageHelper ph,HttpServletRequest request) {
		
		String userName=request.getParameter("username");
		String typeId=request.getParameter("typeId");
		if(StringUtils.isNotBlank(userName)){
			LoginUser loginuser = loginUserService.getUserByName(userName);
			if(loginuser!=null){
				score.setLoginUser(loginuser);	
			}else{
				loginuser=new LoginUser();
				loginuser.setName(userName);
				score.setLoginUser(loginuser);
			}
			
		}
		if(StringUtils.isNotBlank(typeId)){
			ScoreType scoreType=new ScoreType();
			scoreType.setId(typeId);
			score.setScoreType(scoreType);
		}
		return scoreServiceI.dataGridForOne(score, ph);
	}
	
	
	@RequestMapping("/delete")
	@ResponseBody
	public Json delete(String id, HttpSession session,
			HttpServletRequest request) {
		Json j = new Json();
		try {
			Score s=scoreServiceI.get(Score.class, id);
			scoreServiceI.delete(s);
			j.setMsg("删除成功！");
			j.setSuccess(true);
		} catch (Exception e) {
			j.setMsg("删除失败！");
			j.setSuccess(false);
		}
		return j;
	}
	
	
	
	
	
	
}
