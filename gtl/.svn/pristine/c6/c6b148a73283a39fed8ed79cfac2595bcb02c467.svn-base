package com.admin.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.AskSharesDao;
import com.admin.service.AskSharesService;
import com.admin.service.HostMainService;
import com.web.entity.AskShares;
import com.web.entity.HostMain;

@Service
public class AskSharesServiceImpl implements AskSharesService{
	
	@Autowired
	private AskSharesDao askSharesDao;
	
	@Autowired
	private HostMainService hostMainService;

	@Override
	public void add(AskShares askShares) throws Exception {
		askSharesDao.save(askShares);
		
	}

	@Override
	public List<AskShares> getAskList(AskShares askShares) throws Exception {
		List<AskShares> list =new ArrayList<AskShares>();
		String hql=" from AskShares where 1=1 ";
		if (StringUtils.isNotBlank(askShares.getUserId()) && StringUtils.isNotBlank(askShares.getChatHouseId())) {
			hql+=" and userId='"+askShares.getUserId()+"'  and chatHouseId='"+askShares.getChatHouseId()+"' ";
			list=askSharesDao.find(hql);
			if (list != null && ( list.size() > 0)) {
				return list;
			}
		}
		
		return null;
	}

	@Override
	public List<AskShares> getAskListByChatHouseId(AskShares askShares)
			throws Exception {
		List<AskShares> list =new ArrayList<AskShares>();
		String hql=" from AskShares where 1=1 ";
		if ( StringUtils.isNotBlank(askShares.getChatHouseId())) {
			hql+="  and chatHouseId='"+askShares.getChatHouseId()+"' ";
			list=askSharesDao.find(hql);
			if (list != null && ( list.size() > 0)) {
				return list;
			}
		}
		return null;
	}

	@Override
	public List<AskShares> getAskListByHostIdAndTimeYMD(AskShares askShares,String row,String page)
			throws Exception {
		if (StringUtils.isBlank(row)) {
			row="10";
		}
		if (StringUtils.isBlank(page)) {
			page="1";
		}
		List<AskShares> list =new ArrayList<AskShares>();
		String hql=" from AskShares where 1=1 ";
		if ( StringUtils.isNotBlank(askShares.getAskYMD()) && StringUtils.isNotBlank(askShares.getHostId())) {
			hql+="  and askYMD='"+askShares.getAskYMD()+"' and  hostId='"+askShares.getHostId()+"' order by askHMS desc";
			list=askSharesDao.find(hql);
			if (list != null && ( list.size() > 0)) {
				return list;
			}
		}
		if ( StringUtils.isBlank(askShares.getAskYMD()) && StringUtils.isNotBlank(askShares.getHostId())) {
			hql+=" and  hostId='"+askShares.getHostId()+"' order by askYMD desc, askHMS desc";
			list=askSharesDao.find(hql, Integer.parseInt(page), Integer.parseInt(row));
			if (list != null && ( list.size() > 0)) {
				return list;
			}
		}
		return null;
	}

	@Override
	public List<AskShares> getAskBuyUserId(String userId, String row,
			String page) {
		if (StringUtils.isBlank(row)) {
			row="10";
		}
		if (StringUtils.isBlank(page)) {
			page="1";
		}
		List<AskShares> list =new ArrayList<AskShares>();
		String hql=" from AskShares where 1=1 ";
		if (StringUtils.isNotBlank(userId)) {
			hql+=" and userId='"+userId+"' order by askYMD desc ";
			list=askSharesDao.find(hql, Integer.parseInt(page), Integer.parseInt(row));
		}
		if (list != null && list.size() >0 ) {
			return list;
		}
		return null;
	}

	

}
