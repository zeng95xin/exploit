package com.web.controller;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.math.BigDecimal;
import java.net.URLDecoder;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.admin.controller.BaseController;
import com.admin.model.ActualGoldBulletin;
import com.admin.model.Ad;
import com.admin.model.AnswerQuestions;
import com.admin.model.AppVersion;
import com.admin.model.ExchangeGoods;
import com.admin.model.GeneralTips;
import com.admin.model.Ggxw;
import com.admin.model.Gmlcjh;
import com.admin.model.GoldQuesAnw;
import com.admin.model.GoldTips;
import com.admin.model.GoodsManagement;
import com.admin.model.IntegralConfig;
import com.admin.model.Jfxhjl;
import com.admin.model.Jjcp;
import com.admin.model.Jjcpsq;
import com.admin.model.Lcjh;
import com.admin.model.Lljl;
import com.admin.model.LoginUser;
import com.admin.model.Lsft;
import com.admin.model.MallManagement;
import com.admin.model.MnSjBm;
import com.admin.model.MnSjZd;
import com.admin.model.Mncp;
import com.admin.model.Mrzcjs;
import com.admin.model.MyCare;
import com.admin.model.PtsBm;
import com.admin.model.RealTimeQA;
import com.admin.model.ReplyQuestions;
import com.admin.model.ReplyQuestions2;
import com.admin.model.Rmgp;
import com.admin.model.Sctime;
import com.admin.model.SunShares;
import com.admin.model.TcpApplication;
import com.admin.model.TczdXz;
import com.admin.model.Tgdj;
import com.admin.model.Tgsdz;
import com.admin.model.Tgshow;
import com.admin.model.Tgsq;
import com.admin.model.Tgwdsz;
import com.admin.model.Tgxt;
import com.admin.model.TliuYan;
import com.admin.model.Tpinglun;
import com.admin.model.Tpinglunb;
import com.admin.model.TxwxGl;
import com.admin.model.User_SanFang;
import com.admin.model.WarCare;
import com.admin.model.Warn;
import com.admin.model.WcpApplication;
import com.admin.model.WcpBz;
import com.admin.model.WcpJs;
import com.admin.model.WcpJsSq;
import com.admin.model.WcpTc;
import com.admin.model.Wordbook;
import com.admin.model.Xieyi;
import com.admin.model.YwbdJf;
import com.admin.model.Zxg;
import com.admin.model.gpsy;
import com.admin.service.ActualGoldBulletinServiceI;
import com.admin.service.AdServiceI;
import com.admin.service.AnswerQuestionsServiceI;
import com.admin.service.CpApplicationServiceI;
import com.admin.service.CzdServiceI;
import com.admin.service.CzdTjServiceI;
import com.admin.service.ExchangeGoodsServiceI;
import com.admin.service.GeneralTipsServiceI;
import com.admin.service.GgxwServiceI;
import com.admin.service.GmlcjhServiceI;
import com.admin.service.GoldTipsServiceI;
import com.admin.service.GoodsManagementServiceI;
import com.admin.service.GpBuySellService;
import com.admin.service.GpsyServiceI;
import com.admin.service.GqbServiceI;
import com.admin.service.GxtServiceI;
import com.admin.service.IntegralConfigServiceI;
import com.admin.service.JPushApiClient;
import com.admin.service.JfxhjlfServiceI;
import com.admin.service.JjcpServiceI;
import com.admin.service.JjcpsqServiceI;
import com.admin.service.LcjhServiceI;
import com.admin.service.LiuyanServiceI;
import com.admin.service.LljlServiceI;
import com.admin.service.LoginUserServiceI;
import com.admin.service.LsftServiceI;
import com.admin.service.MallManagementServiceI;
import com.admin.service.MnSjBmServiceI;
import com.admin.service.MnSjZdServiceI;
import com.admin.service.MncpServiceI;
import com.admin.service.MrzcjsServiceI;
import com.admin.service.MyCareServiceI;
import com.admin.service.PinglunServiceI;
import com.admin.service.PinglunbServiceI;
import com.admin.service.PtsBmServiceI;
import com.admin.service.RealTimeQAServiceI;
import com.admin.service.ReplyQuestions2ServiceI;
import com.admin.service.ReplyQuestionsServiceI;
import com.admin.service.RmgpServiceI;
import com.admin.service.ScoreServiceI;
import com.admin.service.ScoreTypeServiceI;
import com.admin.service.SctimeServiceI;
import com.admin.service.SunSharesServiceI;
import com.admin.service.TgdjServiceI;
import com.admin.service.TgwdszServiceI;
import com.admin.service.TzgwServiceI;
import com.admin.service.UserJbxfInfoServiceI;
import com.admin.service.UserSanFangService;
import com.admin.service.UserServiceI;
import com.admin.service.VIPApplicationServiceI;
import com.admin.service.WarCareServiceI;
import com.admin.service.WarnServiceI;
import com.admin.service.WcpBzServiceI;
import com.admin.service.WcpJsServiceI;
import com.admin.service.WcpJsSqServiceI;
import com.admin.service.WcpTcServiceI;
import com.admin.service.WcpsqServiceI;
import com.admin.service.WebServiceI;
import com.admin.service.WordServiceI;
import com.admin.service.XieyiServiceI;
import com.admin.service.XwxServiceI;
import com.admin.service.YwbdJfServiceI;
import com.admin.service.ZxgServiceI;
import com.admin.util.InfoUtil;
import com.admin.util.MD5Util;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.huanxin.util.ChartUtlis;
import com.lcjh.biz.SunSharesUserBuyRecordBiz;
import com.util.FileUtil;
import com.web.util.TimeBj;
import com.web.util.TimeUtils;

/**
 * 前台公共管理controller
 * 
 * @author Cyl
 * </br>
 * (*)必传字段
 */
@Controller
@RequestMapping("/common")
public class CommonController extends BaseController {
	
	private static Logger logger=LoggerFactory.getLogger(CommonController.class);
	
	@Autowired
	private WebServiceI webService;
	@Autowired
	private LoginUserServiceI loginUserService;
	@Autowired
	private UserSanFangService userSanFangService;
	@Autowired
	private AdServiceI adService;
	@Autowired
	private TgwdszServiceI tgwdszServiceI;
	@Autowired
	private IntegralConfigServiceI icsServiceI;
	@Autowired
	private XwxServiceI xwxServiceI;
	@Autowired
	private GqbServiceI gqbServiceI;
	@Autowired
	private TzgwServiceI tzgwServiceI;
	@Autowired
	private PinglunServiceI pinglunServiceI;
	@Autowired
	private MallManagementServiceI mallManagementServiceI;
	@Autowired
	private GoodsManagementServiceI goodsManagementServiceI;
	@Autowired
	private GxtServiceI gxtServiceI;
	@Autowired
	private LsftServiceI lsftServiceI;
	@Autowired
	private LljlServiceI lljlServiceI;
	@Autowired
	private VIPApplicationServiceI vipApplicationServiceI;
	@Autowired
	private ExchangeGoodsServiceI exchangeGoodsServiceI;
	@Autowired
	private MyCareServiceI myCareServiceI;
	@Autowired
	private UserServiceI userServiceI;
	@Autowired
	private WarCareServiceI warCareServiceI;
	@Autowired
	private ActualGoldBulletinServiceI actualGoldBulletinServiceI;
	@Autowired
	private CpApplicationServiceI cpApplicationServiceI;
	@Autowired
	private WordServiceI wordServiceI;
	@Autowired
	private WarnServiceI warnServiceI;
	@Autowired
	private MncpServiceI mncpServiceI;
	@Autowired
	private SunSharesServiceI sunSharesServiceI;
	@Autowired
	private WcpJsServiceI wcpJsServiceI;
	@Autowired
	private WcpBzServiceI wcpBzServiceI;
	@Autowired
	private AnswerQuestionsServiceI answerQuestionsServiceI;
	@Autowired
	private ReplyQuestionsServiceI replyQuestionsServiceI;
	@Autowired
	private ReplyQuestions2ServiceI replyQuestionsServiceI2;
	@Autowired
	private WcpsqServiceI wcpsqServiceI;
	@Autowired
	private WcpTcServiceI wcpTcServiceI;
	@Autowired
	private GeneralTipsServiceI generalTipsServiceI;
	@Autowired
	private GoldTipsServiceI goldTipsServiceI;
	@Autowired
	private JfxhjlfServiceI jfxhjlfServiceI;
	@Autowired
	private WcpJsSqServiceI wcpJsSqServiceI;
	@Autowired
	private CzdServiceI czdServiceI;
	@Autowired
	private MnSjZdServiceI mnSjZdServiceI;
	@Autowired
	private MnSjBmServiceI mnSjBmServiceI;
	@Autowired
	private PtsBmServiceI ptsBmServiceI;
	@Autowired
	private YwbdJfServiceI ywbdJfServiceI;
	@Autowired
	private TgdjServiceI tgdjServiceI;
	@Autowired
	private JjcpServiceI jjcpServiceI;
	@Autowired
	private LcjhServiceI lcjhServiceI;
	@Autowired
	private JjcpsqServiceI jjcpsqServiceI;
	@Autowired
	private IntegralConfigServiceI integralConfigServiceI;
	@Autowired
	private GmlcjhServiceI gmlcjhServiceI;
	@Autowired
	private PinglunbServiceI pinglunbServiceI;
	@Autowired
	private ZxgServiceI zxgServiceI;
	@Autowired
	private LiuyanServiceI liuyanServiceI;
	@Autowired
	private GgxwServiceI ggxwService;
	@Autowired
	private XieyiServiceI xieyiServiceI;

	@Autowired
	private RealTimeQAServiceI realTimeQAServiceI;

	@Autowired
	private SctimeServiceI sctimeServiceI;

	@Autowired
	private RmgpServiceI rmgpServiceI;
	@Autowired
	private MrzcjsServiceI mrzcjsServiceI;
	@Autowired
	private GpsyServiceI gpsyServiceI;
	@Autowired
	private CzdTjServiceI czdTjServiceI;
	@Autowired
	private JPushApiClient jPushApiClient;
	@Autowired
	private UserJbxfInfoServiceI userJbxfInfoServiceI;
	@Autowired
	private ScoreServiceI scoreServiceI;
	@Autowired
	private ScoreTypeServiceI scoreTypeServiceI;
	
	@Autowired
	private GpBuySellService gpBuySellService;
	
	@Autowired private SunSharesUserBuyRecordBiz sunSharesUserBuyRecordBiz;
	private static final String zidian = FileUtil.readClassPathFileToString("stock");

	/**
	 * 股天乐接口文档
	 * <br>
	 * <h3>描述:</h3>
	 * 根据type跳转不同的控制器
	 * @param type 
	 * @return
	 */
	@RequestMapping("/getInfo")
	@ResponseBody
	public JSONObject getInfo(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap, HttpSession session)
			throws Exception {
		
		String type = request.getParameter("type");
		response.setCharacterEncoding("utf-8");
		if (type.equals("login")) {// type=login用户登录验证
			return this.loginAPI(request);
		}else if(type.equals("uidlogin")){//第三方登录
			return this.uidLoginAPI(request);
		}else if (type.equals("reg")) {// type=reg用户注册
			request.setCharacterEncoding("utf-8");
			JSONObject j = new JSONObject();
			String name = request.getParameter("username"); // 用户名
			String userid = request.getParameter("userid"); // 用户id
			
			String nickname = request.getParameter("nickname");// 昵称
			String pwd = request.getParameter("pwd"); // 密码
			String phone = request.getParameter("phone"); // 电话
			String gxqm = request.getParameter("gxqm"); // 个性签名
			String tjr = request.getParameter("tjr");// 推荐人 ；ps:非必传
			LoginUser lg = new LoginUser();
			if (StringUtils.isNotBlank(userid)) {
				lg.setId(userid);
			}else{
				lg.setId(UUID.randomUUID().toString());
			}
			lg.setName(name);
			lg.setPwd(pwd);
			lg.setPhone(phone);
			lg.setNickname(nickname);
			lg.setGxqm(gxqm);
			IntegralConfig con = integralConfigServiceI.get();
			String zcjf = con.getZcjf();
			lg.setJifen(Integer.valueOf(zcjf));
			lg.setPtsjb(con.getPtsjb());
			lg.setSjsjb("0.0");
			if (StringUtils.isNotBlank(tjr)) {
				lg.setTjr(tjr);
			}
			int error = loginUserService.add(lg);

			if (error == 1) {
				j.put("errorCode", "2");
				j.put("errorMsg", "该手机或用户名已存在，请核实");
			} else {
				j.put("errorCode", error);
				
				if(StringUtils.isNotBlank(lg.getTjr())){
					loginUserService.saveScore(lg, "新增用户", null, "接口注册用户");
					LoginUser lg1= loginUserService.getUserByName(lg.getTjr());
					if(lg1!=null){
						Integer integer=new Integer(lg1.getJifen()+500);
						lg1.setJifen(integer);
						loginUserService.saveScore(lg1, "系统打赏", null, "推荐人奖励");
						j.put("errorMsg", "注册成功");
					}else{
						j.put("errorMsg", "注册成功,推荐人不存在");
					}
					
				}else{
					j.put("errorMsg", "注册成功");
					loginUserService.saveScore(lg, "新增用户", null, "接口注册用户");
				}
				Jfxhjl jj = new Jfxhjl();
				jj.setResaon("注册");
				jj.setUserid(lg.getId());
				jj.setSl("+" + zcjf);
				jj.setWzid("");
				jfxhjlfServiceI.add(jj);
			}

			return j;
		}else if(type.equals("checknp")){//实时监测用户名或者电话号码是否已经被注册
			String name = request.getParameter("username"); // 用户名
			String phone = request.getParameter("phone"); // 电话
			JSONObject json = new JSONObject();
			if (StringUtils.isNotBlank(phone) && StringUtils.isBlank(name)) {
				LoginUser ul=loginUserService.getUserByPhone(phone);
				if (ul != null) {
					
					json.put("errorCode", "1");
					json.put("errorMsg", "此电话号码已被注册，请重新输入");
					
					return json;
				}else{
					json.put("errorCode", "0");
					json.put("errorMsg", "此电话号码未被注册");
					
					return json;
				}
			}else if(StringUtils.isNotBlank(name) && StringUtils.isBlank(phone)){
				LoginUser ul=loginUserService.getUserByName(name);
				if (ul != null) {
					json.put("errorCode", "2");
					json.put("errorMsg", "此用户名已被注册，请重新输入");
					return json;
				}else{
					json.put("errorCode", "0");
					json.put("errorMsg", "此用户名未被注册");
					
					return json;
				}
			}else {
				json.put("errorCode", "3");
				json.put("errorMsg", "请输入检测内容");
				
				return json;
			}
			
		}else if (type.equals("ad")) {// type=ad广告接口
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String lanmu = request.getParameter("lanmu");
			// 1:首页;2:微操盘;3:投顾圈;4:实战秀;5:投资计划;6:股学堂;7:股趣吧;8:新闻线;9:金融超市;
			// 新增栏目分类：11:首页web;12:微操盘web;13:投顾圈web;14:实战秀web;15:投资计划web;16:股学堂web;17:股趣吧web;18:新闻线web;19:金融超市web
			// 20:主页WEB底部左侧;21:主页WEB底部右侧；22：漂浮WEB；23：值班投顾广告；24：新增广告1；25：新增广告2；26：新增广告3；27：新增广告4；28：实盘开户；
			//29：有问必答web；30：有问必答APP；
			List<Ad> list = adService.getAdList(lanmu, page, rows);
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			for (int i = 0; i < list.size(); i++) {
				JSONObject j = new JSONObject();
				Ad ad = list.get(i);
				j.put("lanmu", ad.getLanmu());
				j.put("title", ad.getTitle());
				j.put("href", ad.getHref());
				j.put("image", ad.getImage());
				arr.add(j);
			}

			json.put("errorCode", "0");
			json.put("total", adService.getCount(lanmu));
			json.put("rows", arr);
			return json;
		} else if (type.equals("tzgw")) {// 投资顾问列表
			String userid = request.getParameter("userid");
			String status = request.getParameter("status");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<Tgsq> list = tzgwServiceI
					.getAdList(status, userid, page, rows);

			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			for (int i = 0; i < list.size(); i++) {
				JSONObject j = new JSONObject();
				Tgsq t = list.get(i);
				j.put("id", t.getId());
				j.put("userid", t.getUserid());
				j.put("username", t.getUsername());
				j.put("realname", t.getRealname());
				j.put("sex", t.getSex());
				j.put("age", t.getAge());
				j.put("dq", t.getDq());
				j.put("sfzh", t.getSfzh());
				j.put("sfzimg", t.getSfzimg());
				j.put("cyzgh", t.getCyzgh());
				j.put("cyzgimg", t.getCyzgimg());
				j.put("phone", t.getPhone());
				j.put("addr", t.getAddr());
				j.put("szjg", t.getSzjg());
				j.put("cynx", t.getCynx());
				j.put("addtime", t.getAddtime());
				j.put("status", t.getStatus());
				j.put("btgly", t.getBtgly());
				if (StringUtils.isNotBlank(t.getIszb())) {
					j.put("iszb", t.getIszb());
				} else {
					j.put("iszb", "0");// 是否值班 1是 0否
				}

				arr.add(j);
			}

			json.put("errorCode", "0");
			json.put("total", list.size());
			json.put("rows", arr);
			return json;
		} else if (type.equals("appversion")) {// 移动端最新版本号
			AppVersion app = icsServiceI.getVersion();
			JSONObject j = new JSONObject();
			if (app.getId() != null) {
				j.put("android", app.getAndroid());
				j.put("IOS", app.getIOS());
			}
			return j;

		} else if (type.equals("wzlb")) {// 文章列表
			return this.newsAPI(request);
		} else if(type.equals("newsClick")){
			return this.newsClickAlike(request);
		}else if (type.equals("plxx")) {// 评论查询
			JSONObject json = new JSONObject();
			String wzid = request.getParameter("wzid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			if (wzid == null) {
				json.put("errorCode", "1");
				json.put("errorMsg", "文章ID为空");
				return json;
			}

			JSONArray arr = new JSONArray();
			if (wzid != null) {
				if (!wzid.equals("")) {
					List<Tpinglun> list = pinglunServiceI.getList(wzid, page,
							rows);
					for (int i = 0; i < list.size(); i++) {
						JSONObject j = new JSONObject();
						Tpinglun t = list.get(i);
						j.put("time", t.getTime());
						j.put("content", t.getContent());
						LoginUser lg = loginUserService.getLoginUser(t
								.getUserid());
						if (lg != null) {
							if (StringUtils.isNotBlank(lg.getNickname())) {
								j.put("nickname", lg.getNickname());
							} else {
								j.put("nickname", "");
							}

							if (StringUtils.isNotBlank(lg.getTx())) {
								j.put("tx", lg.getTx());
							} else {
								j.put("tx", "");
							}

							if (StringUtils.isNotBlank(lg.getId())) {
								j.put("userid", lg.getId());
							} else {
								j.put("userid", "");
							}
						} else {
							j.put("nickname", "");
							j.put("tx", "");
							j.put("userid", "");
						}
						j.put("plid", t.getId());
						j.put("zan", t.getZan());
						List<Tpinglunb> list_plpl = pinglunbServiceI.getList(
								t.getId(), page, "1000");
						j.put("plcs", list_plpl.size());
						JSONArray arr_plpl = new JSONArray();
						for (int k = 0; k < list_plpl.size(); k++) {
							Tpinglunb tb = list_plpl.get(k);
							JSONObject j1 = new JSONObject();
							j1.put("id", tb.getId());
							j1.put("plid", tb.getPlid());
							j1.put("userid", tb.getUserid());
							LoginUser user = loginUserService.getLoginUser(tb
									.getUserid());
							j1.put("username", user.getNickname());
							j1.put("usertx", user.getTx());
							j1.put("content", tb.getContent());
							j1.put("pltime", tb.getTime());
							arr_plpl.add(j1);
						}
						j.put("plpl", arr_plpl);
						arr.add(j);
					}
					json.put("rows", arr);
					json.put("total", pinglunServiceI.getCount(wzid));
					json.put("errorCode", "0");
					json.put("errorMsg", "查询成功");
					return json;
				}
			}

		} else if (type.equals("pladd")) {// 评论新增
			String wzid = request.getParameter("wzid");// 文章的ID
			String userid = request.getParameter("userid");// 用户ID
			String content = request.getParameter("content");// 评论内容
			JSONObject json = new JSONObject();
			if (wzid == null) {
				json.put("errorCode", "1");
				json.put("errorMsg", "文章ID为空");
				return json;
			}
			if (userid == null) {
				json.put("errorCode", "2");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			if (content == null) {
				json.put("errorCode", "3");
				json.put("errorMsg", "评论内容为空");
				return json;
			}
			if (wzid.equals("")) {
				json.put("errorCode", "1");
				json.put("errorMsg", "文章ID为空");
			} else if (userid.equals("")) {
				json.put("errorCode", "2");
				json.put("errorMsg", "用户ID为空");
			} else if (content.equals("")) {
				json.put("errorCode", "3");
				json.put("errorMsg", "评论内容为空");
			} else {
				Tpinglun tp = new Tpinglun();
				tp.setWzid(wzid);
				tp.setContent(content);
				tp.setUserid(userid);
				pinglunServiceI.add(tp);
				json.put("errorCode", "0");
				json.put("errorMsg", "保存成功");
			}
			return json;
		} else if (type.equals("pljb")) {// 评论举报
			JSONObject json = new JSONObject();
			String plid = request.getParameter("plid");
			String userid = request.getParameter("userid");
			if (plid == null) {
				json.put("errorCode", "4");
				json.put("errorMsg", "评论ID为空");
				return json;
			}
			if (userid == null) {
				json.put("errorCode", "2");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			if (plid.equals("")) {
				json.put("errorCode", "4");
				json.put("errorMsg", "评论ID为空");
			} else if (userid.equals("")) {
				json.put("errorCode", "2");
				json.put("errorMsg", "用户ID为空");
			} else {
				LoginUser l = loginUserService.getLoginUser(userid);
				Tpinglun tp = new Tpinglun();
				tp.setJbr(l.getName());
				tp.setJbrid(userid);
				tp.setId(plid);
				pinglunServiceI.update(tp);
				json.put("errorCode", "0");
				json.put("errorMsg", "举报成功");
			}
			return json;
		} else if (type.equals("tgsq")) {// 投资顾问申请
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid");
			String username = request.getParameter("username");
			String realname = request.getParameter("realname");
			String sex = request.getParameter("sex");
			String age = request.getParameter("age");
			String dq = request.getParameter("dq");
			String sfzh = request.getParameter("sfzh");
			String sfzimg = request.getParameter("sfzimg");
			String cyzgh = request.getParameter("cyzgh");
			String cyzgimg = request.getParameter("cyzgimg");
			String phone = request.getParameter("phone");
			String addr = request.getParameter("addr");
			String szjg = request.getParameter("szjg");
			String cynx = request.getParameter("cynx");
			String tgqm = request.getParameter("tgqm");
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			/*
			 * Tgsq t=new Tgsq(); t.setUserid(userid); t.setUsername(username);
			 * t.setRealname(realname); t.setSex(sex); t.setAge(age);
			 * t.setDq(dq); t.setSfzh(sfzh); t.setSfzimg(sfzimg);
			 * t.setCyzgh(cyzgh); t.setCyzgimg(cyzgimg); t.setPhone(phone);
			 * t.setAddr(addr); t.setSzjg(szjg); t.setCynx(cynx);
			 * t.setTgqm(tgqm);
			 */
			tzgwServiceI.add(userid, username, realname, sex, age, dq, sfzh,
					sfzimg, cyzgh, cyzgimg, phone, addr, szjg, cynx, tgqm);
			// tzgwServiceI.add(t);

			json.put("errorCode", "0");
			json.put("errorMsg", "申请成功");
			return json;
		} else if (type.equals("sjlb")) {// 商家列表
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<MallManagement> list = mallManagementServiceI
					.mallManagementList(page, rows);
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			for (int i = 0; i < list.size(); i++) {
				MallManagement m = list.get(i);
				JSONObject j = new JSONObject();
				j.put("mallName", m.getMallName());
				j.put("mallid", m.getId());
				j.put("malllogo", m.getMalllogo());
				j.put("mallprofile", m.getMallprofile());
				arr.add(j);
			}
			json.put("rows", arr);
			json.put("errorCode", "0");
			json.put("total", mallManagementServiceI.getCount());
			return json;

		} else if (type.equals("splb")) {// 商品列表
			String sjid = request.getParameter("sjid"); // 商家
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();

			List<GoodsManagement> list = goodsManagementServiceI
					.goodsManagementList(sjid, page, rows);
			for (int i = 0; i < list.size(); i++) {
				GoodsManagement good = list.get(i);
				JSONObject j = new JSONObject();
				j.put("id", good.getId());
				j.put("goodsName", good.getGoodsName());
				j.put("goodslogo", good.getGoodslogo());
				j.put("goodsprofile", good.getGoodsprofile());
				j.put("mallId", good.getMallId());
				j.put("goodsPictures", good.getGoodsPictures());
				j.put("goodsPrice", good.getGoodsPrice());
				j.put("goodsNum", good.getGoodsNum());
				j.put("mallName", good.getMallName());
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("rows", arr);
			json.put("total", goodsManagementServiceI.getCount(sjid));

			return json;

		} else if (type.equals("spxq")) {// 商品详情
			JSONObject json = new JSONObject();
			String goodsId = request.getParameter("goodsId");// 商品id
			if (!StringUtils.isNotBlank(goodsId)) {
				json.put("errorCode", "1");// 没有该商品
				json.put("errorMsg", "没有该商品");
				return json;
			}
			GoodsManagement goodsManagement = goodsManagementServiceI
					.get(goodsId);
			if (goodsManagement != null) {
				if (StringUtils.isNotBlank(goodsManagement.getMallId())) {
					MallManagement mallManagement = mallManagementServiceI
							.get(goodsManagement.getMallId());
					json.put("mallName", mallManagement.getMallName());
					json.put("malllogo", mallManagement.getMalllogo());
					json.put("mallprofile", mallManagement.getMallprofile());
				}
				json.put("id", goodsManagement.getId());
				json.put("goodlogo", goodsManagement.getGoodslogo());
				json.put("goodsName", goodsManagement.getGoodsName());
				json.put("goodsNum", goodsManagement.getGoodsNum());
				json.put("goodsPictures", goodsManagement.getGoodsPictures());
				json.put("goodsPrice", goodsManagement.getGoodsPrice());
				json.put("goodsprofile", goodsManagement.getGoodsprofile());
				json.put("mallId", goodsManagement.getMallId());
				json.put("errorCode", "0");// 商品详情信息
				json.put("errorMsg", "商品详情信息");
				return json;
			} else {
				json.put("errorCode", "1");// 没有该商品
				json.put("errorMsg", "没有该商品");
				return json;
			}
		} else if (type.equals("gqbadd")) {// 股趣吧添加信息内容
			JSONObject j = new JSONObject();
			Tgsdz p = new Tgsdz();
			String lb = null;
			String qublb = request.getParameter("fl"); // 获取股趣吧添加页面分类信息
			String titel = request.getParameter("title");// 获取股趣分类信息标题
			String tgid = request.getParameter("tgid");// 获取投顾ID
			String sqdj = request.getParameter("sqdj"); // 获取文章授权等级
			String jfxh = request.getParameter("jfxh");// 获取文章积分消耗
			String gqbzy = request.getParameter("gqbzy");// 摘要
			String fbtime = TimeUtils.getTime("yyyy-MM-dd HH:mm:ss");
			String nr = request.getParameter("nr");// 获取文章内容
			String images = request.getParameter("images");// 获取文章图片

			if ("01".equals(qublb)) {
				lb = "股市段子";
			} else if ("02".equals(qublb)) {
				lb = "甘甜股事";
			} else if ("04".equals(qublb)) {
				lb = "趣味小图";
			} else if ("05".equals(qublb)) {
				lb = "有趣视频";
			} else if ("03".equals(qublb)) {
				lb = "股道情歌";
			}
			p.setQublb(lb);
			p.setDztitel(titel);
			p.setDzsqdj(sqdj);
			p.setTgid(tgid);
			p.setTgname("");
			p.setDzjfxh(jfxh);
			p.setDzfbtime(fbtime);
			p.setDznr(nr);
			p.setImages(images);
			p.setGqbzy(gqbzy);
			try {
				gqbServiceI.add(p);
				j.put("errorCode", "0");
				j.put("errorMsg", "添加成功");
			} catch (Exception e) {
				j.put("errorCode", "1");
				j.put("errorMsg", e.getMessage());
			}
			return j;

		} else if (type.equals("czdadd")) {// 猜涨跌新增

			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid");
			TczdXz p = new TczdXz();
			String xzlx = request.getParameter("xzlx"); // 下注类型
			p.setUserid(userid);
			p.setCzdxzlx(xzlx);// 下注类型：01 大盘; 02 个股
			p.setCzdxzid(request.getParameter("userid"));
			p.setXzjf(request.getParameter("xzjf"));
			p.setCzdxzdm(request.getParameter("xzdm"));
			p.setCcd(request.getParameter("ccd")); // 大盘，个股均为猜测涨跌幅 +-
													// XXX%(注：跌幅时为：例
													// -0.005；涨幅时为：例 0.005)
			p.setXztime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
			p.setCdzt("03");// 01 猜中，02 未猜中，03 未结算

			LoginUser loginUser = loginUserService.getLoginUser(userid);
			Integer xzjf = Integer.parseInt(request.getParameter("xzjf")); // 下注积分

			Integer newJf = loginUser.getJifen(); // 用户现有积分
			Integer xzhjf = newJf - xzjf; // 下注后积分
			try {
				if (xzhjf >= 0) {
					loginUser.setJifen(xzhjf);
//					loginUserService.update(loginUser);// 更新用户积分
					loginUserService.saveScore(null, "猜涨跌下注",loginUser,"接口修改积分");
					czdServiceI.add(p); // 下注添加

					Jfxhjl newJl = new Jfxhjl();
					newJl.setSl("-" + xzjf.toString());// 积分消耗记录增加积分数量
					newJl.setUserid(userid);// //积分消耗记录userid
					newJl.setResaon("猜涨跌下注扣除！");
					jfxhjlfServiceI.add(newJl);
					json.put("errorCode", "0");
					json.put("errorMsg", "下注成功");
				} else {
					json.put("errorCode", "2");
					json.put("errorMsg", "下注失败，积分不够，请充值！");
				}
			} catch (Exception e) {
				// e.printStackTrace();
				json.put("errorCode", "1");
				json.put("errorMsg", "添加失败" + e.getMessage());
			}
			return json;

		} else if (type.equals("czdList")) {// 猜涨跌list
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String userid = request.getParameter("userid");
			List<TczdXz> list = czdServiceI.getList(userid, page, rows);
			int countTotal = czdServiceI.countGetList(userid);
			if (list.size() > 0 && list.size() <= 10) {
				for (int i = 0; i < list.size(); i++) {
					TczdXz czd = list.get(i);
					JSONObject j = new JSONObject();
					j.put("userid", czd.getUserid()); // 用户userid
					LoginUser user = loginUserService.getUser(czd.getUserid());
					j.put("username", user.getNickname()); // 用户昵称

					j.put("czdxzdm", czd.getCzdxzdm()); // 猜涨跌下注代码
					j.put("czdxzlx", czd.getCzdxzlx()); // 猜涨跌下注类型：01 大盘; 02 个股
					j.put("ccd", czd.getCcd()); // 猜涨跌猜测点
					j.put("xzjf", czd.getXzjf()); // 下注积分
					j.put("xztime", czd.getXztime()); // 下注时间
					j.put("cdzt", czd.getCdzt()); // 猜测状态 01 猜中，02 未猜中，03 未结算
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("total", countTotal);
				json.put("rows", arr);

			} else if (list.size() > 10) {
				for (int i = 0; i < 10; i++) {
					TczdXz czd = list.get(i);
					JSONObject j = new JSONObject();
					j.put("userid", czd.getUserid()); // 用户userid
					LoginUser user = loginUserService.getUser(czd.getUserid());
					j.put("username", user.getNickname());// 用户昵称
					j.put("czdxzdm", czd.getCzdxzdm()); // 猜涨跌下注代码
					j.put("czdxzlx", czd.getCzdxzlx()); // 猜涨跌下注类型：01 大盘; 02 个股
					j.put("ccd", czd.getCcd()); // 猜涨跌猜测点
					j.put("xzjf", czd.getXzjf()); // 下注积分
					j.put("xztime", czd.getXztime()); // 下注时间
					j.put("cdzt", czd.getCdzt()); // 猜测状态 01 猜中，02 未猜中，03 未结算
					arr.add(j);
				}

				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("total", countTotal);
				json.put("rows", arr);
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "没有猜涨跌记录！");
			}
			return json;

		} else if (type.equals("lsft")) {// 历史发帖查询
			String userid = request.getParameter("userid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String startdate = request.getParameter("startdate");
			String enddate = request.getParameter("enddate");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			if (!StringUtils.isNoneBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
				return json;
			} else {
				List<Lsft> list = lsftServiceI.getList(userid, startdate,
						enddate, page, rows);
				for (int i = 0; i < list.size(); i++) {
					Lsft l = list.get(i);
					JSONObject j = new JSONObject();
					j.put("id", l.getId());
					j.put("title", l.getTitle());
					j.put("turl", l.getTurl());
					j.put("userid", l.getUserid());
					j.put("username", l.getUsername());
					j.put("addtime", l.getAddtime());

					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("rows", arr);
				json.put("total",
						lsftServiceI.getCount(userid, startdate, enddate));
				return json;
			}
		} else if (type.equals("jfcx")) {// 积分查询
			String userid = request.getParameter("userid");

			JSONObject json = new JSONObject();
			if (!StringUtils.isNoneBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
			} else {
				LoginUser l = loginUserService.getLoginUser(userid);
				if (l == null) {
					json.put("errorCode", "2");
					json.put("errorMsg", "无此用户");
				} else {
					json.put("errorCode", "0");
					json.put("userid", l.getId());
					json.put("jifen", l.getJifen());
				}

			}
			return json;

		} else if (type.equals("hydj")) {// 会员等级
			String userid = request.getParameter("userid");
			JSONObject json = new JSONObject();
			if (!StringUtils.isNoneBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
			} else {
				LoginUser l = loginUserService.getLoginUser(userid);
				if (l == null) {
					json.put("errorCode", "2");
					json.put("errorMsg", "无此用户");
				} else {
					json.put("errorCode", "0");
					json.put("userid", l.getId());
					json.put("level", l.getLevel());
				}

			}
			return json;
		} else if (type.equals("lljl")) {// 浏览记录
			String userid = request.getParameter("userid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			if (!StringUtils.isNoneBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
			} else {
				List<Lljl> list = lljlServiceI.getList(userid, page, rows);
				for (int i = 0; i < list.size(); i++) {
					Lljl l = list.get(i);
					JSONObject j = new JSONObject();
					j.put("id", l.getId());
					j.put("userid", l.getUserid());
					j.put("username", l.getUsername());
					j.put("title", l.getTitle());
					j.put("turl", l.getTurl());
					j.put("lltime", l.getLltime());
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("rows", arr);
				json.put("total", lljlServiceI.getCount(userid));
			}
			return json;

		} else if (type.equals("VIPApplication")) {// VIP申请，必须是会员情况下
			JSONObject json = new JSONObject();
			String username = request.getParameter("username");
			String realname = request.getParameter("realname");
			String cardid = request.getParameter("cardid");
			String jzd = request.getParameter("jzd");
			String phoneno = request.getParameter("phoneno");
			String jtldzc = request.getParameter("jtldzc");
			String jtgdzc = request.getParameter("jtgdzc");
			String cytzsd = request.getParameter("cytzsd");
			String tzfxxh = request.getParameter("tzfxxh");
			String xfxyy = request.getParameter("xfxyy");
			String usertype = request.getParameter("usertype");
			String userid = request.getParameter("userid");
			/*
			 * VIPApplication vipApplication = new VIPApplication();
			 * vipApplication.setUsername(username);
			 * vipApplication.setRealname(realname);
			 * vipApplication.setCardid(cardid); vipApplication.setJzd(jzd);
			 * vipApplication.setPhoneno(phoneno);
			 * vipApplication.setJtldzc(jtldzc);
			 * vipApplication.setJtgdzc(jtgdzc);
			 * vipApplication.setCytzsd(cytzsd);
			 * vipApplication.setTzfxxh(tzfxxh); vipApplication.setXfxyy(xfxyy);
			 */
			if (usertype.equals("v")) {
				

					vipApplicationServiceI.add(userid,username, realname, cardid, jzd,
							phoneno, jtldzc, jtgdzc, cytzsd, tzfxxh, xfxyy,usertype);
					json.put("errorCode", "0");
					json.put("errorMsg", "申请成功");
				
			} else if(usertype.equals("n")){
				

					vipApplicationServiceI.addn(userid,username, realname, cardid, jzd,
							phoneno, jtldzc, jtgdzc, cytzsd, tzfxxh, xfxyy,usertype);
					json.put("errorCode", "0");
					json.put("errorMsg", "申请成功");
				
			}else{
				json.put("errorCode", "2");
				json.put("errorMsg", "请选择申请的类型");
			}
			/* vipApplicationServiceI.add(vipApplication); */
			
			return json;
		} else if (type.equals("convertible")) {// 兑换商品（需要接收兑换商品的id和兑换的数量以及当前登录人员id）
			JSONObject json = new JSONObject();
			String goodsId = request.getParameter("goodsId");// 商品id
			String userId = request.getParameter("userid");// 用户id

			// 扣除积分
			LoginUser user = loginUserService.getLoginUser(userId);// 得到用户信息
			GoodsManagement good = goodsManagementServiceI.get(goodsId);// 得到商品信息
			String goodsNum = request.getParameter("goodsNum");// 商品数量
			String receiveUser = request.getParameter("receiveUser");// 收货人
			String receiveAddress = request.getParameter("receiveAddress");// 收获地址
			String lxdh = request.getParameter("lxdh");// 收货人的联系电话

			if (!StringUtils.isNotBlank(goodsId)) {
				json.put("errorCode", "5");// 请选择兑换商品
				json.put("errorMsg", "请选择兑换商品");
				return json;

			}
			if (!StringUtils.isNotBlank(lxdh)) {
				json.put("errorCode", "7");
				json.put("errorMsg", "收货人联系电话为空(字段lxdh)");
				return json;

			}
			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "1");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			if (!StringUtils.isNotBlank(goodsNum)
					&& Integer.parseInt(goodsNum) < 0) {
				json.put("errorCode", "2");// 请填写正确的兑换数量
				json.put("errorMsg", "请填写正确的兑换数量");
				return json;
			}
			String jifen = good.getGoodsPrice();// 商品价格
			int yhjf = user.getJifen();// 用户积分
			if (Integer.valueOf(jifen) * Integer.valueOf(goodsNum) > yhjf) {
				json.put("errorCode", "6");// 请选择兑换商品
				json.put("errorMsg", "积分不够");
				return json;
			} else {
				user.setJifen(yhjf - Integer.valueOf(jifen)
						* Integer.valueOf(goodsNum));
				loginUserService.saveScore(null, "消费积分", user, "商品兑换");
				loginUserService.update(user);
				
				Jfxhjl jj = new Jfxhjl();
				jj.setResaon("商品兑换");
				jj.setUserid(userId);
				jj.setSl(goodsNum);
				jj.setWzid(goodsId);
				int a = Integer.valueOf(jifen) * Integer.valueOf(goodsNum);
				jj.setSl("-" + a);
				jfxhjlfServiceI.add(jj);
				json.put("errorCode", "0");
				json.put("errorMsg", "操作成功");
			}

			GoodsManagement goodsManagement = goodsManagementServiceI
					.get(goodsId);
			if (goodsManagement != null
					&& StringUtils.isNotBlank(goodsManagement.getGoodsNum())) {
				if (Integer.parseInt(goodsNum) > Integer
						.parseInt(goodsManagement.getGoodsNum())) {
					json.put("errorCode", "2");// 请填写正确的兑换数量
					json.put("errorMsg", "请填写正确的兑换数量");
					return json;
				} else {
					if (Integer.parseInt(goodsManagement.getGoodsNum()) <= 0) {
						json.put("errorCode", "3");// 该商品已经被兑换完
						json.put("errorMsg", "该商品已经被兑换完");
						return json;
					} else {
						// 记录兑换
						ExchangeGoods exchangeGoods = new ExchangeGoods();
						exchangeGoods.setId(UUID.randomUUID().toString());
						// 得到兑换日期
						exchangeGoods.setExchangeTime(TimeUtils
								.getTime("yyyy-MM-dd HH:mm:ss"));
						// 商品id
						exchangeGoods.setGoodsId(goodsId);
						// 用户名
						exchangeGoods.setUserId(userId);
						exchangeGoods.setLxdh(lxdh);
						// 兑换数量
						exchangeGoods.setExchangeNum(goodsNum);
						exchangeGoods.setReceiveUser(receiveUser);
						exchangeGoods.setReceiveAddress(receiveAddress);
						exchangeGoods.setState("0");
						// 计算消耗积分
						String consumptionIntegral = "";
						if (StringUtils.isNotBlank(goodsManagement
								.getGoodsPrice())) {
							Integer xhjf = Integer.parseInt(goodsManagement
									.getGoodsPrice())
									* Integer.parseInt(goodsNum);
							consumptionIntegral = xhjf.toString();
						}
						// 消耗积分
						exchangeGoods
								.setConsumptionIntegral(consumptionIntegral);
						exchangeGoodsServiceI.add(exchangeGoods);
						Integer num = Integer.parseInt(goodsManagement
								.getGoodsNum()) - Integer.parseInt(goodsNum);
						goodsManagement.setGoodsNum(num.toString());
						goodsManagementServiceI.edit(goodsManagement);
						json.put("errorCode", "0");// 兑换成功
						json.put("errorMsg", "兑换成功");
					}
				}
			} else {
				json.put("errorCode", "5");// 请选择兑换商品
				json.put("errorMsg", "请选择兑换商品");
				return json;
			}
			return json;
		} else if (type.equals("myCare")) {// 添加关注
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");// 用户id
			String concernedId = request.getParameter("concernedId");// 被关注人id
			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "2");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			if (!StringUtils.isNotBlank(concernedId)) {
				json.put("errorCode", "1");// 请选择被关注人
				json.put("errorMsg", "请选择被关注人");
				return json;
			}
			LoginUser user = loginUserService.getLoginUser(concernedId);
			if (user == null) {
				json.put("errorCode", "3");// 请选择被关注人
				json.put("errorMsg", "被关注的投资顾问无效");
				return json;
			} else {
				if (!user.getUsertype().equals("2")) {
					json.put("errorCode", "4");// 请选择被关注人
					json.put("errorMsg", "被关注的人不是投资顾问");
					return json;
				}
			}

			// 关注人信息
			LoginUser gzr = loginUserService.getLoginUser(userId);
			if (gzr == null) {
				json.put("errorCode", "5");
				json.put("errorMsg", "错误！无此用户");
				return json;
			}
			MyCare myCare2 = new MyCare();
			myCare2.setUserId(userId);
			myCare2.setConcernedId(concernedId);
			List<MyCare> mycareList = myCareServiceI.myCareList(myCare2, "1",
					"10");
			if (mycareList.size()>0) {
				json.put("errorCode", "6");
				json.put("errorMsg", "您已关注该投资顾问！");

				return json;
			} else {
				MyCare myCare = new MyCare();
				myCare.setId(UUID.randomUUID().toString());
				myCare.setUserId(userId);
				myCare.setConcernedId(concernedId);
				myCareServiceI.add(myCare);

				json.put("errorCode", "0");// 关注成功
				json.put("errorMsg", "关注成功");

				return json;
			}
			
		} else if (type.equals("myCareCancel")) {// 取消关注
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");// 用户id
			String concernedId = request.getParameter("concernedId");// 被关注人id
			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "2");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			if (!StringUtils.isNotBlank(concernedId)) {
				json.put("errorCode", "1");// 请选择被关注人
				json.put("errorMsg", "请选择被关注人");
				return json;
			}
			MyCare myCare = new MyCare();
			myCare.setUserId(userId);
			myCare.setConcernedId(concernedId);
			List<MyCare> mycareList = myCareServiceI.myCareList(myCare, "1",
					"10");
			if (mycareList.size() > 0) {
				for (MyCare myCare2 : mycareList) {
					myCareServiceI.delete(myCare2.getId());
				}
				json.put("errorCode", "0");// 取消成功
				json.put("errorMsg", "取消成功");
				return json;
			} else {
				json.put("errorCode", "3");// 取消失败
				json.put("errorMsg", "取消失败，用户未关注此投资顾问");
				return json;
			}
		} else if (type.equals("exchangeGoods")) {// 兑换记录
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String userId = request.getParameter("userid");// 用户id
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "1");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			ExchangeGoods exchangeGoods = new ExchangeGoods();
			exchangeGoods.setUserId(userId);
			List<ExchangeGoods> exchangeGoodsList = exchangeGoodsServiceI
					.exchangeGoodsListByUserId(userId, page, rows);

			for (int i = 0; i < exchangeGoodsList.size(); i++) {
				ExchangeGoods eg = exchangeGoodsList.get(i);
				JSONObject j = new JSONObject();
				j.put("id", eg.getId());
				j.put("userid", eg.getUserId());
				j.put("EXCHANGETIME", eg.getExchangeTime());
				j.put("EXCHANGENUM", eg.getExchangeNum());
				j.put("GOODSID", eg.getGoodsId());
				j.put("CONSUMPTIONINTEGRAL", eg.getConsumptionIntegral());
				j.put("RECEIVEUSER", eg.getReceiveUser());
				j.put("STATE", eg.getState());// //0:购买；1：配送；2：已完成配送
				j.put("RECEIVEADDRESS", eg.getReceiveAddress());
				GoodsManagement g = goodsManagementServiceI
						.get(eg.getGoodsId());
				j.put("goodsName", g.getGoodsName());
				arr.add(j);
			}
			json.put("rows", arr);
			json.put("total", exchangeGoodsServiceI.getCount(userId));
			json.put("errorCode", "0");// 返回兑换记录
			json.put("errorMsg", "返回兑换记录");
			return json;
		} else if (type.equals("updateExchangeState")) {// 修改兑换商品状态
			JSONObject json = new JSONObject();
			String state = request.getParameter("state");// //0:购买；1：配送；2：已完成配送
			String exchangeGoodsId = request.getParameter("exchangegoodid");// 兑换商品记录id
			if (StringUtils.isBlank(exchangeGoodsId)) {
				json.put("errorCode", "1");// 请登录
				json.put("errorMsg", "请选择兑换商品的记录id");
				return json;
			}
			if (StringUtils.isBlank(state)) {
				json.put("errorCode", "2");// 请登录
				json.put("errorMsg", "请选择兑换商品的需要修改状态");
				return json;
			}
			ExchangeGoods exchangeGoods = exchangeGoodsServiceI
					.get(exchangeGoodsId);
			if (exchangeGoods != null) {
				exchangeGoods.setState(state);
				exchangeGoodsServiceI.edit(exchangeGoods);
				json.put("errorCode", "0");// 修改成功
				json.put("errorMsg", "修改成功");
				return json;
			} else {
				json.put("errorCode", "1");// 请登录
				json.put("errorMsg", "请选择兑换商品的记录id");
				return json;
			}
		} else if (type.equals("warCar")) {// 跟战投顾新增
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");// 用户id
			String title = request.getParameter("title");// 标题
			String releaseContent = request.getParameter("releaseContent");// 发布内容
			String power = request.getParameter("power");
			String xhJf = request.getParameter("xhjf");
			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "3");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			if (!StringUtils.isNotBlank(title)) {
				json.put("errorCode", "1");// 请填写发布标题
				json.put("errorMsg", "请填写发布标题");
				return json;
			}
			if (!StringUtils.isNotBlank(releaseContent)) {
				json.put("errorCode", "2");// 请填写发布内容
				json.put("errorMsg", "请填写发布内容");
				return json;
			}
			// 如果消耗积分未填写默认为0
			if (!StringUtils.isNotBlank(xhJf)) {
				xhJf = "0";
			}
			// 如果未选择授权等级默认为完全公开
			if (!StringUtils.isNotBlank(power)) {
				xhJf = "1";
			}
			LoginUser loginUser = loginUserService.getLoginUser(userId);
			String userName = "";
			if (loginUser != null) {
				userName = loginUser.getNickname();
			}
			String releaseIp = InfoUtil.getIpAddr(request);
			String releaseTime = TimeUtils.getTime("yyyy-MM-dd HH:mm:ss");
			WarCare warCare = new WarCare();
			warCare.setId(UUID.randomUUID().toString());
			warCare.setUserId(userId);
			warCare.setUserName(userName);
			warCare.setReleaseContent(releaseContent);
			warCare.setReleaseTime(releaseTime);
			warCare.setReleaseIp(releaseIp);
			warCare.setTitle(title);
			warCare.setState("1");
			warCare.setPower(power);
			warCare.setGmCs("0");
			warCare.setTuCao("0");
			warCare.setZan("0");
			warCare.setXhJf(xhJf);
			warCare.setDeleteReason("");
			warCareServiceI.add(warCare);
			json.put("errorCode", "0");// 发布成功
			json.put("errorMsg", "发布成功");
			return json;
		} else if (type.equals("warCareList")) {// 跟战投顾列表
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");
			String loginUserId = request.getParameter("loginUserId");
			String sort = request.getParameter("sort");// zj=早间 wj=午间
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			WarCare warCare1 = new WarCare();
			warCare1.setUserId(userId);
			List<WarCare> warCareList = warCareServiceI.warCareList(warCare1,
					page, rows, sort);
			JSONArray jsonArray = new JSONArray();
			JSONObject j = null;
			for (WarCare warCare : warCareList) {
				j = new JSONObject();
				j.put("id", warCare.getId());
				j.put("title", warCare.getTitle());
				j.put("userId", warCare.getUserId());
				j.put("userName", warCare.getUserName());
				j.put("releaseTime", warCare.getReleaseTime());
				j.put("state", warCare.getState());
				j.put("deleteReason", warCare.getDeleteReason());
				j.put("power", warCare.getPower());
				j.put("zan", warCare.getZan());
				j.put("releaseContent", warCare.getReleaseContent());
				j.put("tuCao", warCare.getTuCao());
				j.put("gmCs", warCare.getGmCs());
				j.put("xhJf", warCare.getXhJf());
				j.put("releaseIp", warCare.getReleaseIp());
				if (StringUtils.isNotBlank(loginUserId)) {// 传递有userid,返回是否购买
					List<Jfxhjl> list_jf = jfxhjlfServiceI.getList(loginUserId,
							warCare.getId(), "", "", "", "");
					if (list_jf.size() > 0) {
						j.put("isbuy", "yes");
					} else {
						j.put("isbuy", "no");
					}
				}
				jsonArray.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", warCareServiceI.getCount(userId, sort));
			json.put("rows", jsonArray);
			return json;
		} else if (type.equals("warCareDetail")) {// 跟战投顾详情展示
			JSONObject json = new JSONObject();
			String warCareId = request.getParameter("warCareId");
			String userid = request.getParameter("userid");
			WarCare warCare = warCareServiceI.get(warCareId);// 得到文章
			LoginUser user = loginUserService.getLoginUser(userid);
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "2");
				json.put("errorMsg", "用户ID为空");
				return json;
			}

			if (!StringUtils.isNotBlank(warCareId)) {
				json.put("errorCode", "1");// 请选择正确的文章
				json.put("errorMsg", "请选择正确的文章");
				return json;
			}
			// 扣除积分
			String jifen = warCare.getXhJf();// 文章需要积分
			int yhjf = user.getJifen();// 用户积分

			List<Jfxhjl> jf = jfxhjlfServiceI.getList(userid, warCareId, "",
					"", "", "");
			if (jf.size() < 1) {
				if (Integer.valueOf(jifen) > yhjf) {
					json.put("errorCode", "6");// 请选择兑换商品
					json.put("errorMsg", "积分不够");
					return json;
				} else {
					user.setJifen(yhjf - Integer.valueOf(jifen));
					loginUserService.update(user);

					Jfxhjl jj = new Jfxhjl();
					jj.setResaon("跟战投顾");
					jj.setUserid(userid);
					jj.setSl("-" + jifen);
					jj.setWzid(warCare.getId());
					jfxhjlfServiceI.add(jj);
					json.put("errorCode", "0");
					json.put("errorMsg", "操作成功");
				}
			}

			json.put("id", warCare.getId());
			json.put("title", warCare.getTitle());
			json.put("userId", warCare.getUserId());
			json.put("userName", warCare.getUserName());
			json.put("releaseTime", warCare.getReleaseTime());
			json.put("state", warCare.getState());
			json.put("deleteReason", warCare.getDeleteReason());
			json.put("power", warCare.getPower());
			json.put("zan", warCare.getZan());
			json.put("releaseContent", warCare.getReleaseContent());
			json.put("tuCao", warCare.getTuCao());
			json.put("gmCs", warCare.getGmCs());
			json.put("xhJf", warCare.getXhJf());
			json.put("releaseIp", warCare.getReleaseIp());
			json.put("wzlx", "gz");
			json.put("errorCode", "0");// 返回跟战投顾
			json.put("errorMsg", "返回跟战投顾");
			return json;
		} else if (type.equals("actualGoldBulletin")) {// 实战夺金公告
			JSONObject json = new JSONObject();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String broadcastTime = request.getParameter("broadcastTime");
			if (!StringUtils.isNotBlank(broadcastTime)) {
				broadcastTime = TimeUtils.getTime("yyyy-MM-dd HH:mm:ss");
			}
			List<ActualGoldBulletin> actualGoldBulletins = actualGoldBulletinServiceI
					.actualGoldBulletinListByBroadcastTime(broadcastTime, page,
							rows);
			json.put("errorCode", "0");// 查询成功
			json.put("errorMsg", "查询成功");
			json.put("total",
					actualGoldBulletinServiceI.getCount(broadcastTime));
			json.put("actualGoldBulletins", actualGoldBulletins);
			return json;
		} else if (type.equals("cpApplication")) {// 产品发布申请
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid");
			String username = request.getParameter("username");
			String sqcpname = request.getParameter("sqcpname");
			String xybztk = request.getParameter("xybztk");
			String cnsyl = request.getParameter("cnsyl");
			String needmoney = request.getParameter("needmoney");
			TcpApplication tcpApplication = new TcpApplication();

			tcpApplication.setUserid(userid);
			tcpApplication.setUsername(username);
			tcpApplication.setSqcpname(sqcpname);
			tcpApplication.setXybztk(xybztk);
			tcpApplication.setCnsyl(cnsyl);
			tcpApplication.setNeedmoney(needmoney);
			cpApplicationServiceI.add(tcpApplication);
			json.put("errorCode", "0");
			json.put("errorMsg", "申请成功");
			return json;

		} else if (type.equals("ckcpxxlb")) {// 查看投顾产品信息列表
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			JSONArray arr = new JSONArray();
			List<TcpApplication> list = cpApplicationServiceI.getList(userid,
					page, rows);
			for (int i = 0; i < list.size(); i++) {
				TcpApplication l = list.get(i);
				JSONObject j = new JSONObject();
				j.put("id", l.getId());
				j.put("userid", l.getUserid());
				j.put("username", l.getUsername());
				j.put("sqcpname", l.getSqcpname());
				j.put("xybztk", l.getXybztk());
				j.put("cnsyl", l.getCnsyl());
				j.put("sqtime", l.getSqtime());
				j.put("shzt", l.getShzt());
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("rows", arr);
			json.put("total", cpApplicationServiceI.getCount(userid));

			return json;
		} else if (type.equals("gpmr")) {// 股票买入
			JSONObject json=gpBuySellService.updateGPMR(request, response, modelMap, session);
			return json;

		} else if (type.equals("yygl")) {// 判断用户发表的评论或者语言是否通过过滤
			String str = request.getParameter("words");
			JSONObject j = new JSONObject();
			if (StringUtils.isNotBlank(str)) {
				boolean flag = available(str);
				j.put("flag", flag);
				j.put("errorCode", "0");
				j.put("errorMsg", "检测成功");
				return j;
			} else {
				j.put("errorCode", "1");
				j.put("errorMsg", "没有需要检查的文字");
				return j;
			}

		} else if (type.equals("lljlAdd")) {// 浏览记录新增
			String userid = request.getParameter("userid");
			String title = request.getParameter("title");
			String turl = request.getParameter("turl");
			LoginUser user = loginUserService.getLoginUser(userid);
			Lljl l = new Lljl();
			l.setUserid(userid);
			l.setUsername(user.getNickname());
			l.setTitle(title);
			l.setTurl(turl);
			l.setId(UUID.randomUUID().toString());
			JSONObject j = new JSONObject();
			try {
				lljlServiceI.add(l);
				j.put("errorCode", "0");
				j.put("errorMsg", "保存成功");
			} catch (Exception e) {
				j.put("errorCode", "1");
				j.put("errorMsg", "保存失败！错误" + e.getMessage());
			}
			return j;
		} else if (type.equals("warnquery")) {// 警告查询
			String userid = request.getParameter("userid");
			String status = request.getParameter("status");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			List<Warn> list = warnServiceI.getList(userid, status);
			for (int i = 0; i < list.size(); i++) {
				JSONObject j = new JSONObject();
				Warn w = list.get(i);
				j.put("id", w.getId());
				j.put("userid", w.getUserid());
				j.put("title", w.getTitle());
				j.put("content", w.getContent());
				j.put("addtime", w.getAddtime());
				arr.add(j);
			}

			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", list.size());
			json.put("rows", arr);

			return json;
		} else if (type.equals("warnck")) {// 警告查看
			String warnid = request.getParameter("warnid");
			JSONObject json = new JSONObject();
			warnServiceI.update(warnid);
			json.put("errorCode", "0");
			json.put("errorMsg", "处理成功");

		} else if (type.equals("zxgAdd")) {// 自选股增加
			JSONObject j = new JSONObject();
			String userid = request.getParameter("userid");
			String zqdm = request.getParameter("zqdm");
			String zqName = request.getParameter("zqName");
			if (StringUtils.isBlank(userid)) {
				j.put("errorCode", "2");
				j.put("errorMsg", "用户ID为空");
				return j;
			}
			if (StringUtils.isBlank(zqdm)) {
				j.put("errorCode", "3");
				j.put("errorMsg", "证券代码为空");
				return j;
			}
			Zxg zxg = new Zxg();
			zxg.setUserid(userid);
			zxg.setZqdm(zqdm);
			zxg.setZqName(zqName);
			Integer count = zxgServiceI.getCount(userid, zqdm);
			if (count == 0) {
				zxgServiceI.add(zxg);
				j.put("errorCode", "0");
				j.put("errorMsg", "添加成功");
			} else if (count > 0) {
				j.put("errorCode", "1");
				j.put("errorMsg", "该股已自选!");
			}
			return j;

		} else if (type.equals("zxgLb")) {// 自选股列表
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String userid = request.getParameter("userid");
			List<Zxg> zxgList = zxgServiceI.getList(userid);
			for (int i = 0; i < zxgList.size(); i++) {
				JSONObject j = new JSONObject();
				Zxg zxg = zxgList.get(i);
				j.put("id", zxg.getId());
				j.put("userid", zxg.getUserid());
				j.put("zqdm", zxg.getZqdm());
				j.put("zqname", zxg.getZqName());
				j.put("zxTime", zxg.getZxTime());
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", zxgList.size());
			json.put("rows", arr);

			return json;

		} else if (type.equals("zxgDelete")) {// 自选股删除
			JSONObject j = new JSONObject();
			String userid = request.getParameter("userid");
			String zqdm = request.getParameter("zqdm");
			try {
				zxgServiceI.delete(userid, zqdm);
				j.put("errorCode", "0");
				j.put("errorMsg", "删除成功");
			} catch (Exception e) {
				// TODO: handle exception
				j.put("errorCode", "1");
				j.put("errorMsg", "删除失败！错误" + e.getMessage());
			}

			return j;
		} else if (type.equals("wcpsq")) {// 微操盘申请
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid");
			String username = request.getParameter("username");
			String sqtcid = request.getParameter("sqtcid"); // 申请套餐ID
			String sfty = request.getParameter("sfty"); // 是否同意
			String bzj = request.getParameter("bzj"); // 保证金
			String glfsq = request.getParameter("glfsq");// 管理费收取
			WcpApplication ad = new WcpApplication();
			ad.setUserid(userid);
			ad.setUsername(username);
			ad.setSfty(sfty);
			ad.setSqtcid(sqtcid);
			ad.setBzj(bzj);
			ad.setGlfsq(glfsq);
			wcpsqServiceI.add(ad);
			if (userid != null) {
				json.put("errorCode", "0");
				json.put("errorMsg", "申请成功");
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "请登录！");
			}
			return json;
		} else if (type.equals("cjsjlb")) {// 成交数据列表
			String userid = request.getParameter("userid");
			JSONObject json = mncpServiceI.mmLb(userid);
			return json;

		} else if (type.equals("xyList")) {// 获取协议list
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String theme = request.getParameter("theme");// 协议主题
															// 非空：查询一个主题list；空：查询所有协议list
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<Xieyi> list = xieyiServiceI.getList(theme, page, rows);
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					Xieyi xy = list.get(i);
					j.put("theme", xy.getTheme());
					j.put("edittime", xy.getEdittime());
					j.put("editer", xy.getEditer());
					j.put("content", xy.getContent());
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("total", list.size());
				json.put("rows", arr);

			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "没有协议记录！");
			}
			return json;

		} else if (type.equals("zcsl")) {// 用户资产总额数量zcsl
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid"); // 必传，用户id
			String mrlx = request.getParameter("mrlx"); // 必传，买入类型
			String sjid = request.getParameter("sjid"); // 当赛季资产查询是必传；sjid
			if (StringUtils.isBlank(sjid)) {
				sjid = "111";
			}
			Mrzcjs dqzcjs = mrzcjsServiceI.getMyzc(userid, mrlx, sjid); // 当前持股资产+资产总额
			LoginUser dqkyzc = loginUserService.getUser(userid); // 该用户信息
			String zcze = null;
			String kyzc = null;
			if (dqkyzc != null) {
				if (mrlx.equals("0")) {// 普通赛
					kyzc = dqkyzc.getPtsjb();// 获取可用余额
					if (dqzcjs != null) {
						zcze = dqzcjs.getZczl(); // 获取资产总额
					} else {
						zcze = dqkyzc.getPtsjb();
					}
					json.put("zzc", zcze); // 资产总额
					json.put("kyzc", kyzc);// 可用资产
					json.put("errorCode", "0");
					json.put("errorMsg", "查询成功！");
				} else if (mrlx.equals("1")) {// 赛季赛
					kyzc = dqkyzc.getSjsjb();
					if (dqzcjs != null) {
						zcze = dqzcjs.getSjzczl(); // 获取资产总额
					} else {
						zcze = dqkyzc.getSjsjb();
					}
					json.put("zzc", zcze);
					json.put("kyzc", kyzc);
					json.put("errorCode", "0");
					json.put("errorMsg", "查询成功！");
				}
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "没有该用户信息，请核实！");
				return json;
			}

			return json;

		} else if (type.equals("grsylb")) {// 个人收益信息列表grsylb
			JSONObject json = new JSONObject();
			JSONObject grjson = new JSONObject();
			JSONArray arr = new JSONArray();
			String szjg = null;
			String userid = request.getParameter("userid"); // 用户id
			String mrlx = request.getParameter("mrlx"); // 买入类型
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			LoginUser loginuser = loginUserService.getUser(userid);
			String tx = null;
			if (loginuser == null) {
				json.put("errorCode", "2");
				json.put("errorMsg", "该用户不存在！");
				return json;
			}
			String username = loginuser.getNickname();
			String ptsjb = loginuser.getPtsjb();
			String sjsjb = loginuser.getSjsjb();
			if (StringUtils.isNotBlank(loginuser.getTx())) {
				tx = loginuser.getTx();// 头像
			} else {
				tx = ""; // 头像
			}
			Tgsq tg = tzgwServiceI.getInfo(userid);
			if (tg != null) {
				szjg = tg.getSzjg();
			} else {
				szjg = "无所属机构";
			}
			grjson.put("userid", userid); // 用户id
			grjson.put("username", username); // 用户名
			grjson.put("ptsjb", ptsjb); // 普通赛金币
			grjson.put("sjsjb", sjsjb); // 赛季赛金币
			grjson.put("tx", tx);// 头像
			if (StringUtils.isNotBlank(loginuser.getGxqm())) {
				grjson.put("gxqm", loginuser.getGxqm()); // 个性签名
			} else {
				grjson.put("gxqm", ""); // 个性签名
			}
			grjson.put("szjg", szjg); // 所在机构
			List<Mrzcjs> list = mrzcjsServiceI.getListByUserid(userid, page,
					rows);
			if (list.size() > 0) {
				if (mrlx.equals("1")) {
					for (int i = 0; i < list.size(); i++) {
						JSONObject j = new JSONObject();
						Mrzcjs mrjs = list.get(i);
						String sjid = mrjs.getSjid();
						MnSjZd sjzd = mnSjZdServiceI.get(sjid);
						if (sjzd != null) {
							j.put("sjname", sjzd.getSjName()); // 赛季name
						} else {
							j.put("sjname", ""); // 赛季name
						}
						j.put("sjrsy", mrjs.getSjbrsy()); // 赛季日收益
						j.put("sjzsy", mrjs.getSjbzsy());// 赛季周收益
						j.put("sjysy", mrjs.getSjbysy());// 赛季月收益
						j.put("jstime", mrjs.getJstime()); // 结算时间
						arr.add(j);
					}

				} else {
					for (int i = 0; i < list.size(); i++) {
						JSONObject j = new JSONObject();
						Mrzcjs mrjs = list.get(i);
						j.put("sjname", "普通赛");
						j.put("rsy", mrjs.getBrsy()); // 日收益
						j.put("zsy", mrjs.getBzsy()); // 周收益
						j.put("ysy", mrjs.getBysy()); // 月收益
						j.put("jstime", mrjs.getJstime());
						arr.add(j);
					}

				}

			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "没有该用户收益信息，请核实！");
				return json;
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("grinfo", grjson);
			json.put("total", list.size());
			json.put("rows", arr);
			return json;

		} else if (type.equals("jrccsl")) {// 今日持股不可交易数量 jrccsl
			JSONObject json = new JSONObject();

			String userid = request.getParameter("userid"); // 用户id
			String zqdm = request.getParameter("zqdm");// 证券代码
			String mrlx = request.getParameter("mrlx"); // 买入类型
			Integer count = 0;
			List<Mncp> list = mncpServiceI.getJrcgList(userid, zqdm, mrlx);
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					Mncp mncp = list.get(i);
					count = count + mncp.getCjsl();
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("count", count);// 今日成交数量
			} else {
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("count", count);// 今日成交数量
			}
			return json;

		} else if (type.equals("dqcgzs")) {// 当前个股持股数量
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid");
			String mrlx = request.getParameter("mrlx");
			String zqdm = request.getParameter("zqdm");
			List<gpsy> list = gpsyServiceI.getGgccList(userid, mrlx, zqdm);
			if (list.size() > 0) {
				gpsy gp = list.get(0);
				String dqcgsl = gp.getCgsl();
				json.put("count", dqcgsl);// 当前持股除委托卖出未成交数量
				json.put("zqdm", zqdm);// 当前持股代码
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
			} else {
				json.put("count", "0");// 当前持股数量
				json.put("zqdm", zqdm);// 当前持股代码
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
			}
			return json;

		} else if (type.equals("cczcInfo")) {// 持仓资产信息
			DecimalFormat df = new DecimalFormat("#.##");
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid"); // 用户ID （必传）
			String mrlx = request.getParameter("mrlx"); // 买入类型 0：普通赛；1：赛季赛 （必传）
			String sjid = request.getParameter("sjid"); // 当赛季资产查询是必传；sjid
			if (StringUtils.isBlank(sjid)) {
				sjid = "111";
			}

			Double cczj = 0.0; // 持仓总价
			Double zczj = 0.0; // 资产总价
			Double ptsjb = 0.0;
			Double sjsjb = 0.0;
			LoginUser loginuser = loginUserService.getUser(userid);
			if (loginuser != null) {
				ptsjb = Double.parseDouble(loginuser.getPtsjb());
				sjsjb = Double.parseDouble(loginuser.getSjsjb());
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "该用户不存在！");
				return json;
			}
			List<gpsy> list = gpsyServiceI.getCcinfo(userid, mrlx, sjid);
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					gpsy gp = list.get(i);
					Double ggzj = Double.parseDouble(gp.getCgsl())
							* Double.parseDouble(gp.getZgcbjg());
					cczj = cczj + ggzj;
				}
			}
			Mrzcjs mr = mrzcjsServiceI.getMyzc(userid, mrlx, sjid); // 获取资产收益记录
			if (mr != null) {
				if (mrlx.equals("0")) { // 普通赛
					zczj = cczj + ptsjb;
					json.put("zzc", df.format(zczj));// 总资产
					json.put("zsz", df.format(cczj));// 总市值
					json.put("kyzc", ptsjb.toString());// 可用值
					json.put("ylv", mr.getZsy()); // 盈利率
					json.put("ysy", mr.getBysy());// 月盈利率
					json.put("zsy", mr.getBzsy());// 周盈利率
					String pm = mrzcjsServiceI.getPmCount(userid, mrlx, sjid);
					Integer pm01 = Integer.parseInt(pm) + 1;
					json.put("pm", pm01.toString()); // 排名
				} else if (mrlx.equals("1")) {
					zczj = cczj + sjsjb;
					json.put("zzc", df.format(zczj));// 总资产
					json.put("zsz", df.format(cczj));// 总市值
					json.put("kyzc", sjsjb.toString());// 可用值
					json.put("ylv", mr.getSjzsy()); // 盈利率
					json.put("ysy", mr.getSjbysy());// 月盈利率
					json.put("zsy", mr.getSjbzsy());// 周盈利率
					String pm = mrzcjsServiceI.getPmCount(userid, mrlx, sjid);
					Integer pm01 = Integer.parseInt(pm) + 1;
					json.put("pm", pm01.toString()); // 排名
				}
			} else {
				if (mrlx.equals("0")) { // ---------------普通赛
					zczj = cczj + ptsjb;
					json.put("zzc", df.format(zczj));// 总资产
					json.put("zsz", df.format(cczj));// 总市值
					json.put("kyzc", ptsjb.toString());// 可用值
					json.put("ylv", "0.0"); // 盈利率
					json.put("ysy", "0.0");// 月盈利率
					json.put("zsy", "0.0");// 周盈利率
					json.put("pm", ""); // 排名
				} else if (mrlx.equals("1")) { // ---------------赛季赛
					zczj = cczj + sjsjb;
					json.put("zzc", df.format(zczj));// 总资产
					json.put("zsz", df.format(cczj));// 总市值
					json.put("kyzc", sjsjb.toString());// 可用值
					json.put("ylv", "0.0"); // 盈利率
					json.put("ysy", "0.0");// 月盈利率
					json.put("zsy", "0.0");// 周盈利率
					json.put("pm", ""); // 排名
				}

			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功！");
			return json;

		} else if (type.equals("xwxzxqb")) {// 新闻线最新情报

			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String xwsslx = request.getParameter("xwsslx"); // 新闻所属类型：
															// 01：推荐到主页；02：置顶
															// （必传）
			List<TxwxGl> list = xwxServiceI.getzxList(xwsslx);
			if (list.size() > 0 && list.size() <= 8) {
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					TxwxGl t = list.get(i);
					j.put("id", t.getId());
					j.put("xwtitel", t.getXwtitel());
					j.put("xwfbz", t.getXwfbz());
					j.put("xwfbfl", t.getXwfbfl());
					j.put("xwfbtime", t.getXwfbtime());
					j.put("xwnr", t.getXwnr());
					j.put("xwsqdj", t.getXwsqdj());
					j.put("xwjfxh", t.getXwjfxh());
					j.put("xwgmcs", t.getXwgmcs());
					j.put("xwbzcs", t.getXwbtccs());
					j.put("xwbtccs", t.getXwbtccs());
					j.put("czip", t.getCzip());
					j.put("czry", t.getCzry());
					j.put("xwtjtime", t.getXwtjtime());
					j.put("images", t.getImage());
					j.put("xwzy", t.getXwzy());// 新闻线新闻摘要
					j.put("plsl", pinglunServiceI.getCount(t.getId()));
					j.put("xwzd", t.getXwzd());
					j.put("xwzhuy", t.getXwzhuy());
					arr.add(j);
				}
			} else if (list.size() > 8) {
				for (int i = 0; i < 8; i++) {
					JSONObject j = new JSONObject();
					TxwxGl t = list.get(i);
					j.put("id", t.getId());
					j.put("xwtitel", t.getXwtitel());
					j.put("xwfbz", t.getXwfbz());
					j.put("xwfbfl", t.getXwfbfl());
					j.put("xwfbtime", t.getXwfbtime());
					j.put("xwnr", t.getXwnr());
					j.put("xwsqdj", t.getXwsqdj());
					j.put("xwjfxh", t.getXwjfxh());
					j.put("xwgmcs", t.getXwgmcs());
					j.put("xwbzcs", t.getXwbtccs());
					j.put("xwbtccs", t.getXwbtccs());
					j.put("czip", t.getCzip());
					j.put("czry", t.getCzry());
					j.put("xwtjtime", t.getXwtjtime());
					j.put("images", t.getImage());
					j.put("xwzy", t.getXwzy());// 新闻线新闻摘要
					j.put("plsl", pinglunServiceI.getCount(t.getId()));
					j.put("xwzd", t.getXwzd());
					j.put("xwzhuy", t.getXwzhuy());
					arr.add(j);
				}
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", list.size());
			json.put("rows", arr);
			return json;
		} else if (type.equals("getYhSjsInfo")) {// 获取用户赛季赛信息
			JSONObject j = new JSONObject();
			String userid = request.getParameter("userid"); // 获取当前登录用户id
			String nowdate = TimeUtils.getTime("yyyy-MM-dd HH:mm:ss");
			MnSjZd nowsjs = mnSjZdServiceI.getDqSjs(nowdate);
			if (nowsjs != null) {

			} else {
				j.put("dqsjs", ""); // 当前正在进行的赛季赛
			}
			List<MnSjBm> list = mnSjBmServiceI.getMybmsj(userid);
			if (list.size() > 0) {
				MnSjBm dqbm = list.get(0);
				j.put("dqBmsjs", dqbm.getSjId()); // 当前报名赛季赛
				j.put("dqsjs", dqbm.getSjId()); // 当前正在进行的赛季赛
			} else {
				j.put("dqBmsjs", ""); // 当前报名赛季赛
			}
			j.put("errorCode", "0");
			j.put("errorMsg", "查询成功");

			return j;

		} else if (type.equals("tcdqsjs")) {// 退出当前赛季赛操作 tcdqsjs
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid"); // 用户id （必传）
			String sjsid = request.getParameter("sjsid"); // 用户当前参加的赛季赛id（必传）
			LoginUser loginuser = loginUserService.getUser(userid);
			if (loginuser != null) {
				loginuser.setSjsjb("0"); // 赛季赛金币设置为0
				loginUserService.update(loginuser);
			}

			/*
			 * mncpServiceI.deleteDqwt(userid, sjsid); //删除当前赛季赛委托数据（成交+未成交+撤销）
			 * gpsyServiceI.deleteDqsy(userid, sjsid); //删除当前赛季赛持仓信息
			 * mrzcjsServiceI.deleteDqmrzc(userid, sjsid);//删除当前赛季赛每日结算记录
			 * mnSjBmServiceI.deleteDqbm(userid, sjsid);//删除当前赛季赛报名信息
			 */
			mncpServiceI.tcbsMethod(userid, sjsid);
			json.put("errorCode", "0");
			json.put("errorMsg", "退出成功");
			return json;
		} else if (type.equals("gpmc")) {// 股票卖出
			JSONObject json=gpBuySellService.updateGPMC(request, response, modelMap, session);
			return json;
			/************************* 徐东接口 ************************/
		} else if (type.equals("gpwtlb")) {// 委托列表
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String userid = request.getParameter("userid");
			String mrlx = request.getParameter("mrlx"); // 买入类型
			String startTime = request.getParameter("startTime");
			String endTime = request.getParameter("endTime");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<Mncp> mncpList = mncpServiceI.getWtList(userid, mrlx,
					startTime, endTime, page, rows);
			if (mncpList.size() > 0) {
				for (int i = 0; i < mncpList.size(); i++) {
					JSONObject j = new JSONObject();
					Mncp mncp = mncpList.get(i);
					j.put("zqdm", mncp.getZqdm());
					j.put("zqname", mncp.getZqname());
					j.put("wtsl", mncp.getWtsl()); // 委拖数量
					j.put("wtjg", mncp.getWtjg()); // 委托价格
					j.put("cz", mncp.getCz());// 注：cz为0：买入；为1：卖出； 为2：撤销
					j.put("bz", mncp.getBz());// 注：bz为0：未成交；为1：成交
					j.put("cjsl", mncp.getCjsl()); // 成交数量
					j.put("mrlx", mncp.getMrlx());// 买入类型
					j.put("wttime", mncp.getWttime());// 委托时间
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("total", mncpList.size());
				json.put("rows", arr);

			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "没有委托记录！");

			}
			return json;

		} else if (type.equals("tgdjgmzd")) {// 投顾点金购买最多数据tgdjgmzd
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			List<Tgdj> list = tgdjServiceI.getGmMaxList();
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					Tgdj tgdj = list.get(i);
					j.put("id", tgdj.getId());
					j.put("title", tgdj.getTitle());
					j.put("userid", tgdj.getUserid());
					j.put("gmcs", tgdj.getGmcs());
					j.put("fl", tgdj.getType());
					j.put("add_time", tgdj.getAdd_time());
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("total", list.size());
				json.put("rows", arr);

			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "没有购买记录！");
			}
			return json;

		} else if (type.equals("tgdjhpzd")) {// 投顾点金好评最多数据tgdjhpzd

			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			List<Tgdj> list = tgdjServiceI.getHpMaxList();
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					Tgdj tgdj = list.get(i);
					j.put("id", tgdj.getId());
					j.put("title", tgdj.getTitle());
					j.put("userid", tgdj.getUserid());
					j.put("zan", tgdj.getZan());
					j.put("fl", tgdj.getType());
					j.put("add_time", tgdj.getAdd_time());
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("total", list.size());
				json.put("rows", arr);

			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "没有购买记录！");
			}
			return json;
		} else if (type.equals("liuyanCommit")) {// 提交留言
			String ztid = request.getParameter("ztid");// 主题的ID
			String userid = request.getParameter("userid");// 用户ID
			String lynr = request.getParameter("lynr");// 留言内容
			JSONObject json = new JSONObject();
			if (ztid == null) {
				json.put("errorCode", "1");
				json.put("errorMsg", "主题ID为空");
				return json;
			}
			if (userid == null) {
				json.put("errorCode", "2");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			if (lynr == null) {
				json.put("errorCode", "3");
				json.put("errorMsg", "留言内容为空");
				return json;
			}
			if (ztid.equals("")) {
				json.put("errorCode", "1");
				json.put("errorMsg", "主题ID为空");
			} else if (userid.equals("")) {
				json.put("errorCode", "2");
				json.put("errorMsg", "用户ID为空");
			} else if (lynr.equals("")) {
				json.put("errorCode", "3");
				json.put("errorMsg", "留言内容为空");
			} else {
				TliuYan ly = new TliuYan();
				ly.setZtid(ztid);
				ly.setLynr(lynr);
				ly.setUserid(userid);
				liuyanServiceI.add(ly);
				json.put("errorCode", "0");
				json.put("errorMsg", "保存成功");
			}
			return json;

		} else if (type.equals("liuyanQuery")) {// 留言查询
			JSONObject json = new JSONObject();
			String ztid = request.getParameter("ztid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			if (ztid == null) {
				json.put("errorCode", "1");
				json.put("errorMsg", "主题ID为空");
				return json;
			}

			JSONArray arr = new JSONArray();
			if (ztid != null) {
				if (!ztid.equals("")) {
					List<TliuYan> list = liuyanServiceI.getList(ztid, page,
							rows);
					for (int i = 0; i < list.size(); i++) {
						JSONObject j = new JSONObject();
						TliuYan t = list.get(i);
						j.put("time", t.getLytime());
						j.put("content", t.getLynr());
						LoginUser lg = loginUserService.getLoginUser(t
								.getUserid());
						if (lg != null) {
							if (StringUtils.isNotBlank(lg.getNickname())) {
								j.put("nickname", lg.getNickname());
							} else {
								j.put("nickname", "");
							}

							if (StringUtils.isNotBlank(lg.getTx())) {
								j.put("tx", lg.getTx());
							} else {
								j.put("tx", "");
							}

							if (StringUtils.isNotBlank(lg.getId())) {
								j.put("userid", lg.getId());
							} else {
								j.put("userid", "");
							}
						} else {
							j.put("nickname", "");
							j.put("tx", "");
							j.put("userid", "");
						}
						j.put("lyid", t.getId());

						arr.add(j);
					}
					json.put("rows", arr);
					json.put("errorCode", "0");
					json.put("errorMsg", "查询成功");
					return json;
				}
			}

		} else if (type.equals("ggxwlb")) {// 个股新闻列表ggxwlb
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String lx = request.getParameter("lx"); // （非必须）：1:新闻；2：公告；3：F10
			String gplb = request.getParameter("zqdm");// （非必须） 证券代码
			List<Ggxw> list = ggxwService.getList(lx, gplb, page, rows);
			if (list.size() > 0) {

				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					Ggxw ggxw = list.get(i);
					j.put("title", ggxw.getTitle()); // 标题
					j.put("ms", ggxw.getMs()); // 描述
					j.put("lx", ggxw.getLx()); // 1:新闻；2：公告；3：F10
					j.put("nr", ggxw.getNr()); // 内容
					j.put("fbtime", ggxw.getFbtime()); // 发布时间
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("total", list.size());
				json.put("rows", arr);

			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "没有新闻信息！");
			}
			return json;

		} else if (type.equals("gpjydt")) {// 股票交易动态接口gpjydt
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String gpdm = request.getParameter("zqdm"); // 证券代码
			if (StringUtils.isNotBlank(gpdm)) {
				List<Mncp> jydtList = mncpServiceI.getjydtList(gpdm);
				if (jydtList.size() > 0 && jydtList.size() <= 10) {
					for (int i = 0; i < jydtList.size(); i++) {
						JSONObject j = new JSONObject();
						Mncp mncp = jydtList.get(i);
						String userid = mncp.getUserid();
						String username = mncp.getUsername();
						j.put("username", username);
						LoginUser user = loginUserService.getUser(userid);
						j.put("tx", user.getTx());
						Tgsq tg = tzgwServiceI.getInfo(userid);
						if (tg != null) {
							j.put("jgmc", tg.getSzjg());
						} else {
							j.put("jgmc", "");
						}
						j.put("wtsl", mncp.getWtsl()); // 委托数量
						j.put("wtjg", mncp.getWtjg());// 委托价格
						j.put("cz", mncp.getCz());// 注：cz为0：买入；为1：卖出；
						j.put("bz", mncp.getBz());// 注：bz为0：未成交；为1：成交
						j.put("cjsl", mncp.getCjsl()); // 成交数量
						j.put("cjtime", mncp.getCjtime()); // 成交时间
						j.put("mrlx", mncp.getMrlx()); // 普通赛 赛季赛
						arr.add(j);
					}
					json.put("errorCode", "0");
					json.put("errorMsg", "查询成功");
					json.put("total", jydtList.size());
					json.put("rows", arr);

				} else if (jydtList.size() > 10) {
					for (int i = 0; i < 10; i++) {
						JSONObject j = new JSONObject();
						Mncp mncp = jydtList.get(i);
						String userid = mncp.getUserid();
						String username = mncp.getUsername();
						j.put("username", username);
						LoginUser user = loginUserService.getUser(userid);
						j.put("tx", user.getTx());
						Tgsq tg = tzgwServiceI.getInfo(userid);
						if (tg != null) {
							j.put("jgmc", tg.getSzjg());
						} else {
							j.put("jgmc", "");
						}
						j.put("wtsl", mncp.getWtsl());
						j.put("wtjg", mncp.getWtjg());
						j.put("cz", mncp.getCz());// 注：cz为0：买入；为1：卖出；
						j.put("bz", mncp.getBz());// 注：bz为0：未成交；为1：成交
						j.put("cjsl", mncp.getCjsl());
						j.put("cjtime", mncp.getCjtime());
						j.put("mrlx", mncp.getMrlx()); // 普通赛 赛季赛

						arr.add(j);
					}
					json.put("errorCode", "0");
					json.put("errorMsg", "查询成功");
					json.put("total", jydtList.size());
					json.put("rows", arr);

				} else {
					json.put("errorCode", "1");
					json.put("errorMsg", "没有交易记录！");

				}

			} else {
				json.put("errorCode", "2");
				json.put("errorMsg", "请输入股票代码！");
			}

			return json;

		} else if (type.equals("getMust")) {
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			List<LoginUser> loginUsers = loginUserService.getAllUser();
			if (loginUsers.size() > 0) {
				for (int i = 0; i < loginUsers.size(); i++) {
					LoginUser lg = loginUsers.get(i);
					JSONObject j = new JSONObject();
					j.put("name", lg.getName());
					j.put("dh", lg.getPhone());
					j.put("zsname", lg.getZsname());
					j.put("jf", lg.getJifen());
					j.put("type", lg.getUsertype());
					j.put("ye", lg.getYue());
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("rows", arr);
				json.put("total", loginUsers.size());
			}
			return json;

		} else if (type.equals("")) {//

		} else if (type.equals("sunShares")) {// 股友晒股列表
			JSONObject json = new JSONObject();
			// 如果userid为空即得到所有人的晒股信息
			String userId = request.getParameter("userid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<SunShares> sunSharesList = sunSharesServiceI
					.sunSharesListByUserId(userId, page, rows);
			JSONArray jsonArray = new JSONArray();
			JSONObject j = null;
			for (SunShares sunShares : sunSharesList) {
				j = new JSONObject();
				j.put("id", sunShares.getId());
				/*List<Tpinglunb> list_plpl = pinglunbServiceI.getList(
						sunShares.getId(), page, "1000");*/
				List<Tpinglun> list_pl=pinglunServiceI.getListByWid(sunShares.getId());
				j.put("plsl", list_pl.size()); // 评论数量
				j.put("title", sunShares.getTitle());
				j.put("userId", sunShares.getUserId());
				LoginUser loginuser = loginUserService.getUser(sunShares
						.getUserId());
				if (loginuser != null) {
					j.put("tx", loginuser.getTx());// 头像
				} else {
					j.put("tx", "");// 头像
				}
				j.put("userName", sunShares.getUserName());
				j.put("releaseTime", sunShares.getReleaseTime());
				j.put("state", sunShares.getState());
				j.put("deleteReason", sunShares.getDeleteReason());
				j.put("power", sunShares.getPower());
				j.put("zan", sunShares.getZan());
				j.put("content", sunShares.getContent());
				j.put("tuCao", sunShares.getTuCao());
				j.put("gmCs", sunShares.getGmCs());
				j.put("xhJf", sunShares.getXhJf());
				j.put("zy", sunShares.getZy()); // 摘要
				if (StringUtils.isNotBlank(sunShares.getImages())) {
					j.put("images", sunShares.getImages());
				} else {
					j.put("images", "");
				}
				jsonArray.add(j);
			}
			json.put("errorCode", "0");// 返回股友晒股列表
			json.put("errorMsg", "返回股友晒股列表");
			json.put("total", sunSharesServiceI.getCount(userId));
			json.put("rows", jsonArray);
			return json;
		} else if (type.equals("sunSharesAdd")) {// 新增股友晒股
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");
			String title = request.getParameter("title");

			String power = request.getParameter("power");
			String content = request.getParameter("content");
			String zy = request.getParameter("zy");
			String xhJf = request.getParameter("xhjf");
			String images = request.getParameter("images");

			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "2");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			if (!StringUtils.isNotBlank(title)) {
				json.put("errorCode", "1");// 请填写发布标题
				json.put("errorMsg", "请填写发布标题");
				return json;
			}
			if (!StringUtils.isNotBlank(content)) {
				json.put("errorCode", "3");// 请填写内容
				json.put("errorMsg", "请填写内容");
				return json;
			}
			LoginUser loginUser = loginUserService.getLoginUser(userId);
			String userName = "";
			if (loginUser != null) {
				userName = loginUser.getNickname();
			}
			// 如果消耗积分未填写默认为0
			if (!StringUtils.isNotBlank(xhJf)) {
				xhJf = "0";
			}
			// 如果未选择授权等级默认为完全公开
			if (StringUtils.isBlank(power) && !"4".equals(power)) {
				xhJf = "0";
			}
			String releaseTime = TimeUtils.getTime("yyyy-MM-dd HH:mm:ss");
			SunShares shares = new SunShares();
			shares.setFreeTime(new Date(System.currentTimeMillis() + 1000*60*60*24*3));
			shares.setId(UUID.randomUUID().toString());
			shares.setUserId(userId);
			shares.setUserName(userName);
			shares.setTitle(title);
			shares.setReleaseTime(releaseTime);
			shares.setState("1");
			shares.setDeleteReason("");
			shares.setContent(content);
			shares.setPower(power);
			shares.setGmCs("0");
			shares.setTuCao("0");
			shares.setZan("0");
			shares.setXhJf(xhJf);
			shares.setImages(images);
			shares.setZy(zy);
			sunSharesServiceI.add(shares);
			json.put("errorCode", "0");// 网友晒股成功
			json.put("id", shares.getId());// id
			json.put("errorMsg", "网友晒股成功");
			return json;
		} else if (type.equals("sunSharesDetail")) {// 股友晒股详情展示
			JSONObject json = new JSONObject();
			String sunSharesId = request.getParameter("sunSharesId");
			String userid = request.getParameter("userid");
			if (!StringUtils.isNotBlank(sunSharesId)) {
				json.put("errorCode", "1");// 请选择正确的文章
				json.put("errorMsg", "请选择正确的文章");
				return json;
			}
			//授权等级 1:完全公开、2:会员公开、3:积分浏览、4:付费浏览,到期免费,5:付费浏览,到期不免费,到期时间默认3天
			SunShares sunShares = sunSharesServiceI.get(sunSharesId);
			if(null != sunShares && !(null != sunShares.getUserId() && sunShares.getUserId().equals(userid))
					&& ("4".equals(sunShares.getPower()) || "5".equals(sunShares.getPower()))){
				if("5".equals(sunShares.getPower()) || ("4".equals(sunShares.getPower()) && sunShares.getFreeTime().getTime() > System.currentTimeMillis())){
					String isBuyHql = "from SunSharesUserBuyRecord where userId = :userId and sunSharesId = :sunSharesId";
					HashMap<String, Object> params_isbuy = new HashMap<>(2);
					params_isbuy.put("userId", userid);
					params_isbuy.put("sunSharesId", sunSharesId);
					if(sunSharesUserBuyRecordBiz.count(isBuyHql, params_isbuy) < 1){
						json.put("errorCode", "3");// 请选择正确的文章
						json.put("errorMsg", "请购买该信息");
						return json;
					}
				}
			}
			if(null != sunShares && "4".equals(sunShares.getPower()) && sunShares.getFreeTime().getTime() < System.currentTimeMillis()){
			}
			// 得到用户信息
			if (StringUtils.isNotBlank(userid)) {
				LoginUser user = loginUserService.getLoginUser(userid);
				List<Jfxhjl> list_jfxhjl = jfxhjlfServiceI.getList(userid,
						sunSharesId, "", "", "", "");
				if (list_jfxhjl.size() < 1) {
					int jf = user.getJifen();
					int sxjf = Integer.valueOf(sunShares.getXhJf());
					if (sxjf > jf) {
						json.put("errorCode", "2");
						json.put("errorMsg", "积分不够");
						return json;
					} else {
						// 扣除积分，
						int jf1 = jf - sxjf;
						user.setJifen(jf1);
						loginUserService.update(user);
						// 写消耗记录
						Jfxhjl jj = new Jfxhjl();
						jj.setResaon("股友晒股");
						jj.setUserid(userid);
						jj.setSl("-" + sxjf);
						jj.setWzid(sunSharesId);
						jfxhjlfServiceI.add(jj);
						// 修改此购买次数
						String gmcs = sunShares.getGmCs();
						int cs = Integer.valueOf(gmcs) + 1;
						sunShares.setGmCs(cs + "");
						sunSharesServiceI.update(sunShares);
					}
				}
			}
			json.put("id", sunShares.getId());
			json.put("title", sunShares.getTitle());
			json.put("userId", sunShares.getUserId());
			json.put("userName", sunShares.getUserName());
			json.put("releaseTime", sunShares.getReleaseTime());
			json.put("state", sunShares.getState());
			json.put("power", sunShares.getPower());
			json.put("zan", sunShares.getZan());
			json.put("content", sunShares.getContent());
			json.put("tuCao", sunShares.getTuCao());
			json.put("gmCs", sunShares.getGmCs());
			json.put("xhJf", sunShares.getXhJf());
			json.put("deleteReason", sunShares.getDeleteReason());
			json.put("wzlx", "sq");
			json.put("errorCode", "0");// 返回股友晒股
			json.put("errorMsg", "返回股友晒股");

			return json;
		} else if (type.equals("wcpJs")) {// 微操盘介绍
			JSONObject json = new JSONObject();
			// 默认查询最近发布的微操盘介绍
			List<WcpJs> wcpJsList = wcpJsServiceI.wcpJsList();
			WcpJs wcpJs = new WcpJs();
			if (wcpJsList.size() > 0) {
				wcpJs = wcpJsList.get(0);
			}
			json.put("id", wcpJs.getId());
			json.put("title", wcpJs.getTitle());
			json.put("userId", wcpJs.getUserId());
			json.put("userName", wcpJs.getUserName());
			json.put("releaseTime", wcpJs.getReleaseTime());
			json.put("content", wcpJs.getContent());
			json.put("errorCode", "0");// 返回微操盘介绍
			json.put("errorMsg", "返回微操盘介绍");
			return json;
		} else if (type.equals("wcpBz")) {// 微操盘帮助
			JSONObject json = new JSONObject();
			// 默认查询最近发布的微操盘帮助
			List<WcpBz> wcpBzList = wcpBzServiceI.wcpBzList();
			WcpBz wcpBz = new WcpBz();
			if (wcpBzList.size() > 0) {
				wcpBz = wcpBzList.get(0);
			}
			json.put("id", wcpBz.getId());
			json.put("title", wcpBz.getTitle());
			json.put("userId", wcpBz.getUserId());
			json.put("userName", wcpBz.getUserName());
			json.put("releaseTime", wcpBz.getReleaseTime());
			json.put("content", wcpBz.getContent());
			json.put("errorCode", "0");// 返回微操盘帮助
			json.put("errorMsg", "返回微操盘帮助");
			return json;
		} else if (type.equals("answerQuestionsAdd")) {// 有问必答新增
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");
			String title = request.getParameter("title");
			String releaseContent = request.getParameter("releaseContent");
			String releaseJf = request.getParameter("releaseJf");// 发布积分(如果为空默认为0)
			String tzgwId = request.getParameter("tzgwId");// 获取指定投资顾问
			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "2");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			if (!StringUtils.isNotBlank(title)) {
				json.put("errorCode", "1");// 请填写有问必答标题
				json.put("errorMsg", "请填写标题");
				return json;
			}
			if (!StringUtils.isNotBlank(releaseContent)) {
				json.put("errorCode", "3");// 请填写有问必答问题描述
				json.put("errorMsg", "请填写问题描述");
				return json;
			}
			if (!StringUtils.isNotBlank(releaseJf)) {
				releaseJf = "0";
			}

			if (StringUtils.isNotBlank(tzgwId)) {// 指定了投资顾问的信息
				// 获取进入已经提问的数量
				AnswerQuestions aaa = new AnswerQuestions();
				aaa.setTzgwId(tzgwId);
				aaa.setReleaseTime(TimeUtils.getTime("yyyy-MM-dd"));
				int jrcount = answerQuestionsServiceI.getCount(aaa);
				// 获取投顾设置的数量
				Tgwdsz t = tgwdszServiceI.getByTgid(tzgwId);
				if (StringUtils.isBlank(t.getSl())) {
					json.put("errorCode", "997");
					json.put("errorMsg", "该投资顾问暂未设置有问必答信息，赞不接受指定回答");
					return json;
				}
				int szcount = Integer.valueOf(t.getSl());
				if (jrcount > szcount) {
					json.put("errorCode", "999");
					json.put("errorMsg", "已经超过了该投资顾问设置的今日最大提问数量");
					return json;
				}
				int sxjf = Integer.valueOf(t.getJf());
				if (Integer.valueOf(releaseJf) < sxjf) {
					json.put("errorCode", "998");
					json.put("errorMsg",
							"设置的积分数量小于该用户被提问的最低积分数量。该投资顾问被提问的最低积分为" + sxjf);
					return json;
				}
			}

			LoginUser loginUser = loginUserService.getLoginUser(userId);
			String userName = "";
			if (loginUser != null) {
				userName = loginUser.getNickname();
			}
			String fenLei = request.getParameter("fenLei");// 1:推荐;2:A股;3:期货;4:基金;5:黄金外汇;6:美股;7:港股;8:保险;8:其他理财;
			String releaseIp = InfoUtil.getIpAddr(request);
			String releaseTime = TimeUtils.getTime("yyyy-MM-dd HH:mm:ss");
			AnswerQuestions answerQuestions = new AnswerQuestions();
			answerQuestions.setId(UUID.randomUUID().toString());
			answerQuestions.setUserId(userId);
			answerQuestions.setUserName(userName);
			answerQuestions.setTitle(title);
			answerQuestions.setReleaseContent(releaseContent);
			answerQuestions.setReleaseTime(releaseTime);
			answerQuestions.setState("1");
			answerQuestions.setDeleteReason("");
			answerQuestions.setReleaseIp(releaseIp);
			answerQuestions.setReleaseJf(releaseJf);
			answerQuestions.setTzgwId(tzgwId);
			answerQuestions.setFenLei(fenLei);
			answerQuestionsServiceI.add(answerQuestions);
			json.put("errorCode", "0");// 成功提问
			json.put("errorMsg", "成功提问");
			return json;
		} else if (type.equals("answerQuestionsList")) {// 得到用户的所有提问列表
			JSONObject json = new JSONObject();
			// 如果userid不为空及得到当前用户的提问列表
			String userId = request.getParameter("userid");
			String title = request.getParameter("title");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String tzgwId = request.getParameter("tzgwId");// 注：不传时获取普通问题；传入时：获取提给指定投顾问题
			String fenLei = request.getParameter("fenLei");// 1:推荐;2:A股;3:期货;4:基金;5:黄金外汇;6:美股;7:港股;8:保险;8:其他理财;
			String releaseJf = request.getParameter("releaseJf");// 通过积分查询(N)
			String jfflag = request.getParameter("jfflag");// 标识是否需要积分(传值)(0:为免费；1为付费(积分))
			AnswerQuestions answerQuestions = new AnswerQuestions();
			answerQuestions.setTitle(title);
			answerQuestions.setUserId(userId);
			answerQuestions.setState("1");
			answerQuestions.setReleaseJf(releaseJf);
			answerQuestions.setFenLei(fenLei);
			answerQuestions.setJfflag(jfflag);
			answerQuestions.setTzgwId(tzgwId);
			List<AnswerQuestions> answerQuestionsList = answerQuestionsServiceI
					.answerQuestionsList(answerQuestions, page, rows);
			JSONArray jsonArray = new JSONArray();
			JSONObject j = null;

			List<ReplyQuestions> replyQuestionsList = new ArrayList<ReplyQuestions>();
			for (AnswerQuestions answerQuestions2 : answerQuestionsList) {
				j = new JSONObject();
				j.put("id", answerQuestions2.getId());
				j.put("title", answerQuestions2.getTitle());
				j.put("userId", answerQuestions2.getUserId());
				// j.put("userName", answerQuestions2.getUserName());
				LoginUser loginuser = loginUserService.getUser(answerQuestions2
						.getUserId());
				if (loginuser != null) {
					j.put("userName", loginuser.getNickname());
				} else {
					j.put("userName", "");
				}
				j.put("releaseTime", answerQuestions2.getReleaseTime()); // 发布时间
				j.put("state", answerQuestions2.getState());
				j.put("deleteReason", answerQuestions2.getDeleteReason());
				j.put("releaseContent", answerQuestions2.getReleaseContent());
				j.put("releaseIp", answerQuestions2.getReleaseIp());
				j.put("tzgwId", answerQuestions2.getTzgwId());
				if (StringUtils.isBlank(answerQuestions2.getFenLei())) {
					j.put("fenLei", "");
				} else {
					j.put("fenLei", answerQuestions2.getFenLei());
				}
				j.put("releaseJf", answerQuestions2.getReleaseJf()); // 发布积分
				ReplyQuestions replyQuestions = new ReplyQuestions();
				replyQuestions.setQuestionId(answerQuestions2.getId());
				replyQuestions.setState("1");
				replyQuestions.setReplyType("1");
				replyQuestionsList = replyQuestionsServiceI.replyQuestionsList(
						replyQuestions, null, null);
				if (replyQuestionsList.size() > 0) {
					j.put("hfId", replyQuestionsList.get(0).getId());// 回复ID
					j.put("scyy", replyQuestionsList.get(0).getDeleteReason());// 删除原因
					j.put("twId", replyQuestionsList.get(0).getQuestionId());// 提问Id
					j.put("hfnr", replyQuestionsList.get(0).getReleaseContent());// 回复内容
					j.put("hfIp", replyQuestionsList.get(0).getReleaseIp());// 恢复人ip
					j.put("hfsj", replyQuestionsList.get(0).getReleaseTime());// 回复时间
					j.put("hfzt", replyQuestionsList.get(0).getState());// 回复状态
					j.put("hfrId", replyQuestionsList.get(0).getUserId());// 回复人Id
					LoginUser hfr = loginUserService.getUser(replyQuestionsList
							.get(0).getUserId());
					if (hfr != null) {
						if (StringUtils.isNotBlank(hfr.getTx())) {
							j.put("hfrtx", hfr.getTx()); // 回复人头像
						} else {
							j.put("hfrtx", "");// 回复人头像
						}
					}
					j.put("hfrXm", replyQuestionsList.get(0).getUserName());// 恢复人姓名
					j.put("hflx", replyQuestionsList.get(0).getReplyType());// 回复类型
					j.put("replyId", replyQuestionsList.get(0).getReplyId());
					YwbdJf ywbdJf = ywbdJfServiceI
							.getByReplyId(replyQuestionsList.get(0).getId());// 回复文章和评论一对一
					if (ywbdJf != null) {
						j.put("ywbdJfId", ywbdJf.getId());// id
						j.put("ywbdJfMyd", ywbdJf.getMyd());// 满意度
						j.put("ywbdJfJfS", ywbdJf.getJfS());// 积分数
					}
				}
				jsonArray.add(j);
			}
			json.put("total", answerQuestionsServiceI.getCount(answerQuestions));
			json.put("rows", jsonArray);
			json.put("errorCode", "0");// 返回有问必答提问列表
			json.put("errorMsg", "返回有问必答提问列表");
			return json;
		} else if (type.equals("answerQuestionsZJ")) {// 最近回答
			JSONObject json = new JSONObject();
			// 如果userid不为空及得到当前用户的提问列表
			String userId = request.getParameter("userid");
			String title = request.getParameter("title");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String fenLei = request.getParameter("fenLei");// 1:推荐;2:A股;3:期货;4:基金;5:黄金外汇;6:美股;7:港股;8:保险;8:其他理财;
			String releaseJf = request.getParameter("releaseJf");// 通过积分查询(N)
			AnswerQuestions answerQuestions = new AnswerQuestions();
			answerQuestions.setTitle(title);
			answerQuestions.setUserId(userId);
			answerQuestions.setState("1");
			answerQuestions.setReleaseJf(releaseJf);
			answerQuestions.setFenLei(fenLei);
			List<AnswerQuestions> answerQuestionsList = answerQuestionsServiceI
					.answerQuestionsList(answerQuestions, page, rows);
			JSONArray jsonArray = new JSONArray();
			JSONObject j = null;
			List<ReplyQuestions> replyQuestionsList = new ArrayList<ReplyQuestions>();
			for (AnswerQuestions answerQuestions2 : answerQuestionsList) {
				ReplyQuestions replyQuestions = new ReplyQuestions();
				replyQuestions.setQuestionId(answerQuestions2.getId());
				replyQuestions.setState("1");
				replyQuestions.setReplyType("1");
				replyQuestionsList = replyQuestionsServiceI.replyQuestionsList(
						replyQuestions, null, null);
				if (replyQuestionsList.size() > 0) {
					j = new JSONObject();
					j.put("id", answerQuestions2.getId());
					j.put("title", answerQuestions2.getTitle());
					j.put("userId", answerQuestions2.getUserId());
					// j.put("userName", answerQuestions2.getUserName());
					LoginUser loginuser = loginUserService
							.getUser(answerQuestions2.getUserId());
					if (loginuser != null) {
						j.put("userName", loginuser.getNickname());
					} else {
						j.put("userName", "");
					}
					if (loginuser != null) {
						if (StringUtils.isNotBlank(loginuser.getTx())) {
							j.put("hfrtx", loginuser.getTx()); // 回复人头像
						} else {
							j.put("hfrtx", "");// 回复人头像
						}
					}
					j.put("releaseTime", answerQuestions2.getReleaseTime());
					j.put("state", answerQuestions2.getState());
					j.put("deleteReason", answerQuestions2.getDeleteReason());
					j.put("releaseContent",
							answerQuestions2.getReleaseContent());
					j.put("releaseIp", answerQuestions2.getReleaseIp());
					j.put("tzgwId", answerQuestions2.getTzgwId());
					j.put("fenLei", answerQuestions2.getFenLei());
					j.put("releaseJf", answerQuestions2.getReleaseJf());
					j.put("hfId", replyQuestionsList.get(0).getId());// 回复ID
					j.put("scyy", replyQuestionsList.get(0).getDeleteReason());// 删除原因
					j.put("twId", replyQuestionsList.get(0).getQuestionId());// 提问Id
					j.put("hfnr", replyQuestionsList.get(0).getReleaseContent());// 回复内容
					j.put("hfIp", replyQuestionsList.get(0).getReleaseIp());// 恢复人ip
					j.put("hfsj", replyQuestionsList.get(0).getReleaseTime());// 回复时间
					j.put("hfzt", replyQuestionsList.get(0).getState());// 回复状态
					j.put("hfrId", replyQuestionsList.get(0).getUserId());// 回复人Id
					j.put("hfrXm", replyQuestionsList.get(0).getUserName());// 恢复人姓名
					j.put("hflx", replyQuestionsList.get(0).getReplyType());// 回复类型
					j.put("replyId", replyQuestionsList.get(0).getReplyId());
					YwbdJf ywbdJf = ywbdJfServiceI
							.getByReplyId(replyQuestionsList.get(0).getId());// 回复文章和评论一对一
					if (ywbdJf != null) {
						j.put("isPj", "yes");
						j.put("ywbdJfId", ywbdJf.getId());// id
						j.put("ywbdJfMyd", ywbdJf.getMyd());// 满意度
						j.put("ywbdJfJfS", ywbdJf.getJfS());// 积分数
					} else {
						j.put("isPj", "no");
					}
					jsonArray.add(j);
				}
			}
			json.put("total", jsonArray.size());
			json.put("rows", jsonArray);
			json.put("errorCode", "0");// 返回有问必答提问列表
			json.put("errorMsg", "返回有问必答提问列表");
			return json;
		} else if (type.equals("replyQuestions")) {// 有问必答回复列表
			// 返回回复列表内容
			JSONObject json = new JSONObject();
			// 如果questionId不为空即得到当前问题的回答
			String questionId = request.getParameter("questionId");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			// 如果userid不为空及得到当前用户的回复列表
			String userId = request.getParameter("userid");// 回复人id
			ReplyQuestions rq = new ReplyQuestions();
			rq.setQuestionId(questionId);
			rq.setUserId(userId);
			rq.setState("1");
			rq.setReplyType("1");// 回复类型(1:用户回复;2:提问者追问;3:追答)
			List<ReplyQuestions> replyQuestionsList = replyQuestionsServiceI
					.replyQuestionsList(rq, page, rows);
			JSONArray jsonArray = new JSONArray();
			JSONObject j = null;
			ReplyQuestions rq1 = null;
			JSONArray jsonArray1 = null;
			JSONObject j1 = null;
			AnswerQuestions answerQuestions = null;
			List<ReplyQuestions> replyQuestionsLists = new ArrayList<ReplyQuestions>();
			for (ReplyQuestions replyQuestions : replyQuestionsList) {
				answerQuestions = answerQuestionsServiceI.get(replyQuestions
						.getQuestionId());
				rq1 = new ReplyQuestions();
				rq1.setState("1");
				rq1.setReplyId(replyQuestions.getId());
				replyQuestionsLists = replyQuestionsServiceI
						.replyQuestionsList(rq1, page, rows);
				j = new JSONObject();
				if (answerQuestions != null
						&& StringUtils.isNotBlank(answerQuestions.getTitle())) {
					j.put("title", answerQuestions.getTitle());
					j.put("fenLei", answerQuestions.getFenLei());
					j.put("twTime", answerQuestions.getReleaseTime()); // 获取提问时间
					j.put("twName", answerQuestions.getUserName());// 获取提问人姓名
				} else {
					j.put("title", "");
					j.put("fenLei", "");
				}
				j.put("twcontent", answerQuestions.getReleaseContent());
				j.put("id", replyQuestions.getId());
				j.put("deleteReason", replyQuestions.getDeleteReason());
				j.put("questionId", replyQuestions.getQuestionId());
				j.put("releaseContent", replyQuestions.getReleaseContent());
				j.put("releaseIp", replyQuestions.getReleaseIp());
				j.put("releaseTime", replyQuestions.getReleaseTime()); // 回答时间
				j.put("state", replyQuestions.getState());
				j.put("userId", replyQuestions.getUserId());// 回复人userid
				LoginUser hfr = loginUserService.getUser(replyQuestions
						.getUserId());
				if (hfr != null) {
					if (StringUtils.isNotBlank(hfr.getTx())) {
						j.put("hfrtx", hfr.getTx()); // 回复人头像
					} else {
						j.put("hfrtx", "");// 回复人头像
					}
				}
				j.put("userName", replyQuestions.getUserName()); // 回复人姓名
				j.put("replyType", replyQuestions.getReplyType());
				j.put("replyId", replyQuestions.getReplyId());
				YwbdJf ywbdJf = ywbdJfServiceI.getByReplyId(replyQuestions
						.getId());// 回复文章和评论一对一
				if (ywbdJf != null) {
					j.put("ywbdJfId", ywbdJf.getId());// id
					j.put("ywbdJfMyd", ywbdJf.getMyd());// 满意度
					j.put("ywbdJfJfS", ywbdJf.getJfS());// 积分数
				}
				// 判断该问题是否有追问和追答
				if (replyQuestionsLists.size() > 0) {
					jsonArray1 = new JSONArray();
					j1 = new JSONObject();
					// 得到追问追答内容并放置在该回复下
					for (ReplyQuestions replyQuestions2 : replyQuestionsLists) {
						YwbdJf ywbdJf1 = ywbdJfServiceI
								.getByReplyId(replyQuestions2.getId());// 回复文章和评论一对一
						if (ywbdJf1 != null) {
							j1.put("ywbdJfId", ywbdJf1.getId());// id
							j1.put("ywbdJfMyd", ywbdJf1.getMyd());// 满意度
							j1.put("ywbdJfJfS", ywbdJf1.getJfS());// 积分数
						}
						j1.put("id", replyQuestions2.getId());
						j1.put("deleteReason",
								replyQuestions2.getDeleteReason());
						j1.put("questionId", replyQuestions2.getQuestionId());
						j1.put("releaseContent",
								replyQuestions2.getReleaseContent());
						j1.put("releaseIp", replyQuestions2.getReleaseIp());
						j1.put("releaseTime", replyQuestions2.getReleaseTime());
						j1.put("state", replyQuestions2.getState());
						j1.put("userId", replyQuestions2.getUserId());
						j1.put("userName", replyQuestions2.getUserName());
						j1.put("replyType", replyQuestions2.getReplyType());
						j1.put("replyId", replyQuestions2.getReplyId());
						jsonArray1.add(j1);
					}
					j.put("zhuiwen", jsonArray1);// 添加追问追答列表
				}
				jsonArray.add(j);
			}
			json.put("total", replyQuestionsServiceI.getCount(rq));
			json.put("rows", jsonArray);
			json.put("errorCode", "0");// 返回有问必答回复列表
			json.put("errorMsg", "返回有问必答回复列表");
			return json;
		} else if (type.equals("replayhfzd")) {// 有问必答回复最多
			JSONObject json = new JSONObject();
			JSONArray jsonArray = new JSONArray();
			List<ReplyQuestions> replyQuestionss = replyQuestionsServiceI
					.hfzdQuestion();
			if (replyQuestionss.size() > 0) {
				for (ReplyQuestions replyQuestions : replyQuestionss) {
					AnswerQuestions answerQuestions = answerQuestionsServiceI
							.get(replyQuestions.getQuestionId());
					if (answerQuestions != null) {
						JSONObject jsonObject = new JSONObject();
						jsonObject.put("id", answerQuestions.getId());
						jsonObject.put("title", answerQuestions.getTitle());
						jsonObject.put("userId", answerQuestions.getUserId());
						jsonObject.put("userName",
								answerQuestions.getUserName());
						jsonObject.put("releaseTime",
								answerQuestions.getReleaseTime());
						jsonObject.put("state", answerQuestions.getState());
						jsonObject.put("deleteReason",
								answerQuestions.getDeleteReason());
						jsonObject.put("releaseContent",
								answerQuestions.getReleaseContent());
						jsonObject.put("releaseIp",
								answerQuestions.getReleaseIp());
						jsonObject.put("tzgwId", answerQuestions.getTzgwId());
						jsonObject.put("fenLei", answerQuestions.getFenLei());
						jsonObject.put("releaseJf",
								answerQuestions.getReleaseJf());
						jsonObject.put("hfcs", replyQuestions.getHfcs());
						jsonArray.add(jsonObject);
					}
				}
			}
			json.put("total", jsonArray.size());
			json.put("rows", jsonArray);
			json.put("errorCode", "0");// 返回有问必答回复列表
			json.put("errorMsg", "返回有问必答回复列表");
			return json;
		} else if (type.equals("answerQuestionWjd")) {// 有问必答投资顾问未解答信息
			JSONObject json = new JSONObject();
			// 如果userid不为空及得到当前用户的提问列表
			String title = request.getParameter("title");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String fenLei = request.getParameter("fenLei");// 1:推荐;2:A股;3:期货;4:基金;5:黄金外汇;6:美股;7:港股;8:保险;8:其他理财;
			String tzgwId = request.getParameter("tzgwId");// 投资顾问id
			if (!StringUtils.isNotBlank(tzgwId)) {
				json.put("errorCode", "2");// 请选择被指定的投资顾问
				json.put("errorMsg", "请选择被指定的投资顾问");
				return json;
			}
			String releaseJf = request.getParameter("releaseJf");// 通过积分查询(N)
			AnswerQuestions answerQuestions = new AnswerQuestions();
			answerQuestions.setTitle(title);
			answerQuestions.setState("1");
			answerQuestions.setTzgwId(tzgwId);
			answerQuestions.setFenLei(fenLei);
			answerQuestions.setReleaseJf(releaseJf);
			List<AnswerQuestions> answerQuestionsList = answerQuestionsServiceI
					.answerQuestionsList(answerQuestions, page, rows);
			JSONArray jsonArray = new JSONArray();
			JSONObject j = null;
			int count = 0;
			ReplyQuestions replyQuestions = null;
			for (AnswerQuestions answerQuestions2 : answerQuestionsList) {
				replyQuestions = new ReplyQuestions();
				replyQuestions.setQuestionId(answerQuestions2.getId());
				count = replyQuestionsServiceI.getCount(replyQuestions);
				if (count == 0) {
					j = new JSONObject();
					j.put("id", answerQuestions2.getId());
					j.put("title", answerQuestions2.getTitle());
					j.put("userId", answerQuestions2.getUserId());
					j.put("userName", answerQuestions2.getUserName());
					j.put("releaseTime", answerQuestions2.getReleaseTime());
					j.put("state", answerQuestions2.getState());
					j.put("deleteReason", answerQuestions2.getDeleteReason());
					j.put("releaseContent",
							answerQuestions2.getReleaseContent());
					j.put("releaseIp", answerQuestions2.getReleaseIp());
					j.put("tzgwId", answerQuestions2.getTzgwId());
					j.put("releaseJf", answerQuestions2.getReleaseJf());
					j.put("fenLei", answerQuestions2.getFenLei());
					LoginUser loginuser = loginUserService
							.getUser(answerQuestions2.getUserId());
					if (loginuser != null) {
						if (StringUtils.isNotBlank(loginuser.getTx())) {
							j.put("tx", loginuser.getTx());
						} else {
							j.put("tx", "");
						}
					}
					jsonArray.add(j);
				}
			}
			json.put("total", jsonArray.size());
			json.put("rows", jsonArray);
			json.put("errorCode", "0");// 返回有问必答提问列表
			json.put("errorMsg", "返回有问必答提问列表");
			return json;
		} else if (type.equals("replyQuestionsAdd")) {// 有问必答回复
			// 通过有问必答提问id回复
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");
			String releaseContent = request.getParameter("releaseContent");
			String questionId = request.getParameter("questionId");
			String replyType = request.getParameter("replyType");// 回复类型(1:用户回复;2:提问者追问;3:追答)
			String replyId = request.getParameter("replyId");// 如果是追问或者是追答需要填写父id(即原始回答id),追问和追答由回复时间倒叙排列 
			if (!StringUtils.isNotBlank(questionId)) {
				json.put("errorCode", "1");// 请选择问题
				json.put("errorMsg", "请选择问题");
				return json;
			}
			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "2");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			if (!StringUtils.isNotBlank(releaseContent)) {
				json.put("errorCode", "3");// 请填写回复内容
				json.put("errorMsg", "请填写回复内容");
				return json;
			}
			LoginUser loginUser = loginUserService.getLoginUser(userId);
			String userName = "";
			if (loginUser != null) {
				userName = loginUser.getNickname();
			}
			// 如果回复类型为空默认为用户回复信息
			if (!StringUtils.isNotBlank(replyType)) {
				replyType = "1";
			}
			String releaseIp = InfoUtil.getIpAddr(request);
			String releaseTime = TimeUtils.getTime("yyyy-MM-dd HH:mm:ss");
			ReplyQuestions replyQuestions = new ReplyQuestions();
			String id = UUID.randomUUID().toString(); // 有问必答回复id
			replyQuestions.setId(id);
			replyQuestions.setDeleteReason("");
			replyQuestions.setQuestionId(questionId);
			replyQuestions.setReleaseContent(releaseContent);
			replyQuestions.setReleaseIp(releaseIp);
			replyQuestions.setReleaseTime(releaseTime);
			replyQuestions.setState("1");
			replyQuestions.setUserId(userId);
			replyQuestions.setUserName(userName);
			replyQuestions.setReplyType(replyType);
			replyQuestions.setReplyId(replyId);
			replyQuestionsServiceI.add(replyQuestions);
			AnswerQuestions answerQuestions = answerQuestionsServiceI
					.get(questionId);
			if (answerQuestions != null) {
				YwbdJf ywbdJf = new YwbdJf();
				Tgsq tgsq = tzgwServiceI.getInfo(answerQuestions.getUserId());
				ywbdJf.setId(UUID.randomUUID().toString());
				ywbdJf.setUserId(answerQuestions.getUserId());// 提问人id
				ywbdJf.setTzgwId(userId);// 回复人id
				ywbdJf.setMyd("0");// 未填写满意度
				ywbdJf.setWzId(replyQuestions.getId());// 回复文章id
				if (tgsq != null) {
					ywbdJf.setJfS(tgsq.getTwjf());
				}
				ywbdJfServiceI.add(ywbdJf);
			}
			json.put("errorCode", "0");// 成功回复
			json.put("errorMsg", "成功回复");
			return json;
		} else if(type.equals("userReply")){  //追加有问必答用户回复
			return this.userReplyAPI(request);
		}else if(type.equals("userReplyList")){ //有问必答用户回复列表
            return this.userReplyListAPI(request);
		} else if (type.equals("updateMyd")) {// 有问必答满意度修改
			JSONObject json = new JSONObject();
			String ywbdJfId = request.getParameter("ywbdJfId");// id
			String ywbdJfMyd = request.getParameter("ywbdJfMyd");// 满意度(1:不满意;2:一般;3:满意)
			if (StringUtils.isBlank(ywbdJfId)) {
				json.put("errorCode", "1");// 请传入正确修改id
				json.put("errorMsg", "请传入正确修改id");
				return json;
			}
			if (StringUtils.isBlank(ywbdJfMyd)) {
				json.put("errorCode", "2");// 请传入需要修改的满意度
				json.put("errorMsg", "请传入需要修改的满意度");
				return json;
			}
			YwbdJf ywbdJf = ywbdJfServiceI.get(ywbdJfId);
			if (ywbdJf != null) {
				ywbdJf.setMyd(ywbdJfMyd);
				ywbdJfServiceI.edit(ywbdJf);

				LoginUser answerUser = loginUserService.getLoginUser(ywbdJf
						.getUserId());// 得到提问人
				LoginUser replyUser = loginUserService.getLoginUser(ywbdJf
						.getTzgwId());// 得到回复人
				String jf = ywbdJf.getJfS();
				Integer jfs = 0;
				Integer syjf = 0;
				if ("2".equals(ywbdJfMyd)) {
					jfs = (int) (Integer.parseInt(jf) * (0.6));
					syjf = (int) (Integer.parseInt(jf) * (0.4));
				} else if ("3".equals(ywbdJfMyd)) {
					jfs = Integer.parseInt(jf);
					syjf = 0;
				} else {
					jfs = 0;
					syjf = Integer.parseInt(jf);
				}
				if (answerUser != null) {
					Integer jifen = answerUser.getJifen();
					jifen = jifen + syjf;
					answerUser.setJifen(jifen);
					loginUserService.update(answerUser);
				}
				if (replyUser != null) {
					Integer jifen = replyUser.getJifen();
					jifen = jifen + jfs;
					replyUser.setJifen(jifen);
					loginUserService.update(replyUser);
				}
				json.put("errorCode", "0");// 修改成功
				json.put("errorMsg", "修改成功");
				return json;
			} else {
				json.put("errorCode", "1");// 请传入正确修改id
				json.put("errorMsg", "请传入正确修改id");
				return json;
			}
		} else if (type.equals("wcpTc")) {// 微操盘套餐列表
			JSONObject json = new JSONObject();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");

			List<WcpTc> wcpTcs = wcpTcServiceI.wcpTcList(page, rows);
			JSONArray jsonArray = new JSONArray();
			JSONObject j = null;
			for (WcpTc wcpTc : wcpTcs) {
				j = new JSONObject();
				j.put("id", wcpTc.getId());
				// 套餐编号
				j.put("tcNum", wcpTc.getTcNum());
				// 套餐名称
				j.put("tcName", wcpTc.getTcName());
				// 套餐实盘金额
				j.put("tcspje", wcpTc.getTcspje());
				// 交易须知
				j.put("jyxz", wcpTc.getJyxz());
				// 套餐保证金
				j.put("tcBzj", wcpTc.getTcBzj());
				// 套餐的亏损警戒线
				j.put("tcKsJjx", wcpTc.getTcKsJjx());
				// 套餐的亏损平仓线
				j.put("tcKsPcx", wcpTc.getTcKsPcx());
				// 管理费收取
				j.put("glfSq", wcpTc.getGlfSq());
				// 资金使用期限
				j.put("zjSyQx", wcpTc.getZjSyQx());
				// 支持开通时间
				j.put("zcKtSj", wcpTc.getZcKtSj());
				jsonArray.add(j);
			}
			json.put("total", wcpTcServiceI.getCount());
			json.put("rows", jsonArray);
			json.put("errorCode", "0");// 返回有问必答提问列表
			json.put("errorMsg", "返回有问必答提问列表");
			return json;
		} else if (type.equals("wcpJsSqAdd")) {// 微操盘结算申请新增
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");
			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "2");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			LoginUser loginUser = loginUserService.getLoginUser(userId);
			String userName = "";
			if (loginUser != null) {
				userName = loginUser.getNickname();
			}
			String pzJe = request.getParameter("pzJe");
			String kcSxf = request.getParameter("kcSxf");
			String fhYe = request.getParameter("fhYe");
			String fafang = request.getParameter("fafang");
			String djScSj = TimeUtils.getTime("yyyy-MM-dd HH:mm:ss");
			String bzjJe = request.getParameter("bzjJe");
			String djNum = TimeUtils.getTime("yyyyMMddHHmmss") + userId;
			WcpJsSq wcpJsSq = new WcpJsSq();
			wcpJsSq.setId(UUID.randomUUID().toString());
			wcpJsSq.setBzjJe(bzjJe);// 保证金金额(大于10000元的任意金额)
			wcpJsSq.setDjNum(djNum);// 单据编号(年+月+日+时+分+秒+用户ID)
			wcpJsSq.setDjScSj(djScSj);// 单据生成时间(申请表填写的时间)
			wcpJsSq.setFafang(fafang);// 发放(操作人员)
			wcpJsSq.setFhYe(fhYe);// 返还的余额(根据协议实际返还的余额)
			wcpJsSq.setKcSxf(kcSxf);// 扣除的手续费(扣除的手续费)
			wcpJsSq.setPzJe(pzJe);// 配资金额 (实际配资金额)
			wcpJsSq.setUserId(userId);// 用户名(此单据所属的用户账户)
			wcpJsSq.setUserName(userName);
			wcpJsSqServiceI.add(wcpJsSq);
			json.put("errorCode", "0");
			json.put("errorMsg", "申请成功");
			return json;
		} else if (type.equals("wcpJsSqList")) {// 微操盘结算申请列表
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "2");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			WcpJsSq wcpJsSq = new WcpJsSq();
			wcpJsSq.setUserId(userId);
			List<WcpJsSq> wcpJsSqList = wcpJsSqServiceI.wcpJsSqList(wcpJsSq,
					page, rows);
			JSONArray arr = new JSONArray();
			JSONObject j = null;
			for (WcpJsSq wcpJsSq2 : wcpJsSqList) {//
				j = new JSONObject();
				j.put("id", wcpJsSq2.getId());
				j.put("bzjJe", wcpJsSq2.getBzjJe());
				j.put("djNum", wcpJsSq2.getDjNum());
				j.put("djScSj", wcpJsSq2.getDjScSj());
				j.put("fafang", wcpJsSq2.getFafang());
				j.put("fhYe", wcpJsSq2.getFhYe());
				j.put("kcSxf", wcpJsSq2.getKcSxf());
				j.put("pzJe", wcpJsSq2.getPzJe());
				j.put("userId", wcpJsSq2.getUserId());
				j.put("userName", wcpJsSq2.getUserName());
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", wcpJsSqServiceI.getCount(wcpJsSq));
			json.put("rows", arr);
			return json;
		} else if (type.equals("")) {
			/********************** 王福接口 ***************************/
		} else if (type.equals("ptjn")) {// 普通锦囊列表
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String userid = request.getParameter("userid");
			String tgid = request.getParameter("tgid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<GeneralTips> list = generalTipsServiceI.getList(tgid, page,
					rows);
			for (int i = 0; i < list.size(); i++) {
				GeneralTips gt = list.get(i);
				JSONObject j = new JSONObject();
				j.put("id", gt.getId());
				j.put("title", gt.getTitle());
				j.put("content", gt.getContent());
				j.put("jfxh", gt.getJfxh());
				j.put("fbtime", gt.getFbtime());
				int count = jfxhjlfServiceI
						.getCount(userid, gt.getId(), "", "");
				if (count > 0) {
					j.put("isbuy", "yes");
				} else {
					j.put("isbuy", "no");
				}
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", generalTipsServiceI.getCount(tgid));
			json.put("rows", arr);
			return json;

		} else if (type.equals("ptjnxq")) {// 普通锦囊详情
			String ptjnid = request.getParameter("ptjnid");
			String userid = request.getParameter("userid");
			generalTipsServiceI.jnck(ptjnid, userid);
			JSONObject json = new JSONObject();
			if (StringUtils.isNotBlank(ptjnid)) {
				GeneralTips g = generalTipsServiceI.get(ptjnid);
				if (g != null) {
					// 自动扣除积分
					LoginUser user = loginUserService.getLoginUser(userid);
					if (user != null) {
						int jf = user.getJifen();
						int kcjf = Integer.valueOf(g.getJfxh());
						if (jf < kcjf) {
							json.put("errorCose", "3");
							json.put("errorMsg", "积分不够");
							return json;
						}

						int count = jfxhjlfServiceI.getCount(userid, ptjnid,
								"", "");
						if (count < 1) {
							user.setJifen(jf - kcjf);
							loginUserService.update(user);
							// 消耗记录
							Jfxhjl jj = new Jfxhjl();
							jj.setResaon("荐股");
							jj.setUserid(userid);
							jj.setSl("-" + kcjf);
							jj.setWzid(g.getId());
							jfxhjlfServiceI.add(jj);
						}
					}
					json.put("errorCose", "0");
					json.put("errorMsg", "查询成功");
					json.put("id", g.getId());
					json.put("title", g.getTitle());
					json.put("content", g.getContent());
				} else {
					json.put("errorCose", "1");
					json.put("errorMsg", "无此文章");
				}
			} else {
				json.put("errorCose", "2");
				json.put("errorMsg", "文章ID为空");
			}
			return json;
		} else if (type.equals("hjjn")) {// 黄金锦囊列表
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String userid = request.getParameter("userid");
			String tgid = request.getParameter("tgid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<GoldTips> list = goldTipsServiceI.getList(tgid, page, rows);
			for (int i = 0; i < list.size(); i++) {
				GoldTips gt = list.get(i);
				JSONObject j = new JSONObject();
				j.put("id", gt.getId());
				j.put("title", gt.getTitle());
				j.put("content", gt.getContent());
				j.put("jfxh", gt.getJfxh());
				j.put("fbtime", gt.getFbtime());
				int count = jfxhjlfServiceI
						.getCount(userid, gt.getId(), "", "");
				if (count > 0) {
					j.put("isbuy", "yes");
				} else {
					j.put("isbuy", "no");
				}
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", goldTipsServiceI.getCount(tgid));
			json.put("rows", arr);
			return json;
		} else if (type.equals("hjjnxq")) {// 黄金锦囊详情
			String hjjnid = request.getParameter("hjjnid");
			String userid = request.getParameter("userid");
			JSONObject json = new JSONObject();
			goldTipsServiceI.jnck(hjjnid, userid);

			if (StringUtils.isNotBlank(hjjnid)) {
				GoldTips g = goldTipsServiceI.get(hjjnid);
				if (g != null) {
					// 自动扣除积分
					LoginUser user = loginUserService.getLoginUser(userid);
					if (user != null) {
						int jf = user.getJifen();
						int jnjf = Integer.valueOf(g.getJfxh());
						if (jf < jnjf) {
							json.put("errorCode", "3");
							json.put("errorMsg", "积分不够");
							return json;
						}

						int count = jfxhjlfServiceI.getCount(userid, hjjnid,
								"", "");
						if (count < 1) {
							user.setJifen(jf - jnjf);
							loginUserService.update(user);
							// 消耗记录
							Jfxhjl jj = new Jfxhjl();
							jj.setResaon("分析");
							jj.setUserid(userid);
							jj.setSl("-" + jnjf);
							jj.setWzid(g.getId());
							jfxhjlfServiceI.add(jj);
						}
					}
					json.put("errorCose", "0");
					json.put("errorMsg", "查询成功");
					json.put("id", g.getId());
					json.put("title", g.getTitle());
					json.put("content", g.getContent());
				} else {
					json.put("errorCose", "1");
					json.put("errorMsg", "无此文章");
				}
			} else {
				json.put("errorCose", "2");
				json.put("errorMsg", "文章ID为空");
			}
			return json;
		} else if (type.equals("hjjntw")) {// 黄金锦囊提问
			String jnid = request.getParameter("jnid");
			String userid = request.getParameter("userid");
			String twcontent = request.getParameter("twcontent");
			JSONObject json = new JSONObject();
			try {
				goldTipsServiceI.twadd(userid, jnid, twcontent);
				json.put("errorCode", "0");
				json.put("errorMsg", "操作成功");
			} catch (Exception e) {
				json.put("errorCode", "1");
				json.put("errorMsg", "操作失败" + e.getMessage());
			}
			return json;
		} else if (type.equals("hjwdcx")) {// 黄金锦囊问答查询
			String jnid = request.getParameter("jnid");
			String userid = request.getParameter("userid");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			try {
				List<GoldQuesAnw> list = goldTipsServiceI.getWDList(userid,
						jnid);
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					GoldQuesAnw g = list.get(i);
					j.put("id", g.getId());
					j.put("title", g.getTitle());
					j.put("content", g.getContent());
					j.put("twcontent", g.getTwcontent());
					j.put("twtime", g.getTwtime());
					j.put("userid", g.getUserid());
					j.put("hdry", g.getHdry());
					j.put("hdryid", g.getHdryid());
					j.put("hdcontent", g.getHdcontent());
					j.put("hdtime", g.getHdtime());
					j.put("myd", g.getMyd());
					arr.add(j);
				}

				json.put("errorCode", "0");
				json.put("errorMsg", "操作成功");
				json.put("total", list.size());
				json.put("rows", arr);
			} catch (Exception e) {
				json.put("errorCode", "1");
				json.put("errorMsg", "操作失败" + e.getMessage());
			}

			return json;
		} else if (type.equals("hjwdpj")) {// 黄金问答评价
			String hjwdid = request.getParameter("hjwdid");
			String myd = request.getParameter("myd");
			JSONObject json = new JSONObject();
			try {
				goldTipsServiceI.hjwdpj(hjwdid, myd);
				json.put("errorCode", "0");
				json.put("errorMsg", "操作成功");
			} catch (Exception e) {
				json.put("errorCode", "1");
				json.put("errorMsg", "操作失败" + e.getMessage());
			}
			return json;
		} else if (type.equals("jfxh")) {// 用户积分消费jfxf
			String userid = request.getParameter("userid");
			String jfsl = request.getParameter("jfsl");// 消耗积分数量
			String reason = request.getParameter("reason");// 积分消耗事由

			String wzlx = request.getParameter("wzlx");// 文章类型 主要针对 股学堂 股趣吧 新闻线
														// 晒股文章积分购买次数统计
			String wzid = request.getParameter("wzid");// 购买文章的ID
			
			JSONObject json = new JSONObject();
			LoginUser loginUser = loginUserService.getLoginUser(userid);
			// 扣除积分
			Integer jfzs = loginUser.getJifen();
			Integer xfsl = Integer.valueOf(jfsl);
			if (xfsl > jfzs) {
				json.put("errorCode", "1");
				json.put("errorMsg", "积分数量不够");
			} else {
				try {
					loginUser.setJifen(jfzs - xfsl);
					// 更新表
					loginUserService.saveScore(null, "消费积分", loginUser, reason);
					
					loginUserService.update(loginUser);
					if (StringUtils.isNotBlank(wzlx)) {// 更新购买次数
						if (wzlx.equals("xwx")) {// 新闻线
							TxwxGl t = xwxServiceI.getTxwxGl(wzid);
							String xwgmcs = t.getXwgmcs();
							int gmcs = Integer.valueOf(xwgmcs) + 1;
							t.setXwgmcs(gmcs + "");
							xwxServiceI.update(t);
						} else if (wzlx.equals("gqb")) {// 股趣吧
							Tgsdz t = gqbServiceI.getGqbdz(wzid);
							String cs = t.getDzgmcs();
							int cs1 = Integer.valueOf(cs) + 1;
							t.setDzgmcs(cs1 + "");
							gqbServiceI.update(t);
						} else if (wzlx.equals("gxt")) {// 股学堂
							Tgxt t = gxtServiceI.getGxt(wzid);
							String cs = t.getGxtgmcs();
							int a = Integer.valueOf(cs) + 1;
							t.setGxtgmcs(a + "");
							gxtServiceI.update(t);
						} else if (wzlx.equals("sg")) {// 晒股
							SunShares ss = sunSharesServiceI.get(wzid);
							String cs = ss.getGmCs();
							int a = Integer.valueOf(cs) + 1;
							ss.setGmCs(a + "");
							sunSharesServiceI.update(ss);
						} else if (wzlx.equals("gz")) {// 跟战投顾
							WarCare w = warCareServiceI.get(wzid);
							String cs = w.getGmCs();
							int a = Integer.valueOf(cs) + 1;
							w.setGmCs(a + "");
							warCareServiceI.update(w);
						}
					}
					
					
					
					// 记录消费信息
					Jfxhjl jj = new Jfxhjl();
					jj.setResaon(reason);
					jj.setUserid(userid);
					jj.setSl("-" + jfsl);
					jj.setWzid(wzid);
					jj.setUserType(loginUser.getUsertype());
					jj.setUsername(loginUser.getName());
					jj.setNickname(loginUser.getNickname());
					jfxhjlfServiceI.add(jj);
					json.put("errorCode", "0");
					json.put("errorMsg", "操作成功");
				} catch (Exception e) {
					json.put("errorCode", "2");
					json.put("errorMsg", "操作失败" + e.getMessage());
				}

			}

			return json;
		} else if (type.equals("jfxhjl")) {// 用户积分消费查询
			String userid = request.getParameter("userid");
			String wzid = request.getParameter("wzid");

			String page = request.getParameter("page");
			String rows = request.getParameter("rows");

			String startdate = request.getParameter("startdate");
			String enddate = request.getParameter("enddate");
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			List<Jfxhjl> list = jfxhjlfServiceI.getList(userid, wzid,
					startdate, enddate, page, rows);

			JSONArray arr = new JSONArray();
			for (int i = 0; i < list.size(); i++) {
				Jfxhjl jf = list.get(i);
				JSONObject j = new JSONObject();
				j.put("id", jf.getId());
				j.put("sl", jf.getSl());
				j.put("reason", jf.getResaon());
				j.put("xftime", jf.getXftime());
				j.put("wzid", jf.getWzid());
				arr.add(j);
			}

			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total",
					jfxhjlfServiceI.getCount(userid, wzid, startdate, enddate));
			json.put("rows", arr);
			return json;

		} else if (type.equals("gysgdz")) {// 股友晒股点赞、吐槽
			JSONObject json = new JSONObject();
			String sgid = request.getParameter("sgid");// 晒出的文章ID
			String zan = request.getParameter("zan");// 1--赞 -1吐槽
			String userid = request.getParameter("userid");// 用户ID
			try {
				SunShares s = sunSharesServiceI.get(sgid);
				if (s == null) {
					json.put("errorCode", "3");
					json.put("errorMsg", "无此文章");
				}
				if (zan.equals("1")) {
					String z = s.getZan();
					int z1 = Integer.valueOf(z) + 1;
					s.setZan(z1 + "");
				} else if (zan.equals("-1")) {
					String t = s.getTuCao();
					int t1 = Integer.valueOf(t) + 1;
					s.setTuCao(t1 + "");
				} else {
					json.put("errorCode", "2");
					json.put("errorMsg", "参数设置错误");
				}
				sunSharesServiceI.edit(s);
				if (zan.equals("1")) {
					IntegralConfig con = integralConfigServiceI.get();
					String zanjf = con.getZan();
					LoginUser user1 = loginUserService.getLoginUser(userid);
					int jf = user1.getJifen();
					if (jf < Integer.valueOf(zanjf)) {
						json.put("errorCode", "3");
						json.put("errorMsg", "积分不够");
					} else {
						user1.setJifen(jf - Integer.valueOf(zanjf));
						loginUserService.update(user1);

						Jfxhjl jj = new Jfxhjl();
						jj.setResaon("点赞");
						jj.setUserid(user1.getId());
						jj.setSl("-" + zanjf);
						jj.setWzid(s.getId());
						jfxhjlfServiceI.add(jj);

						String zzid = s.getUserId();
						LoginUser user2 = loginUserService.getLoginUser(zzid);
						String bzjf = con.getBzan();
						user2.setJifen(user2.getJifen() + Integer.valueOf(bzjf));

						Jfxhjl jj1 = new Jfxhjl();
						jj1.setResaon("被点赞");
						jj1.setUserid(user2.getId());
						jj1.setSl("+" + bzjf);
						jj1.setWzid(s.getId());
						jfxhjlfServiceI.add(jj1);
						json.put("errorCode", "0");
						json.put("errorMsg", "操作成功");

					}
				} else {
					IntegralConfig con = integralConfigServiceI.get();
					String zanjf = con.getTucao();
					LoginUser user1 = loginUserService.getLoginUser(userid);
					int jf = user1.getJifen();
					if (jf < Integer.valueOf(zanjf)) {
						json.put("errorCode", "3");
						json.put("errorMsg", "积分不够");
					} else {
						user1.setJifen(jf - Integer.valueOf(zanjf));
						loginUserService.update(user1);

						Jfxhjl jj = new Jfxhjl();
						jj.setResaon("吐槽");
						jj.setUserid(user1.getId());
						jj.setSl("-" + zanjf);
						jj.setWzid(s.getId());
						jfxhjlfServiceI.add(jj);

						String zzid = s.getUserId();
						LoginUser user2 = loginUserService.getLoginUser(zzid);
						String bzjf = con.getBtucao();
						user2.setJifen(user2.getJifen() - Integer.valueOf(bzjf));
						loginUserService.update(user2);
						Jfxhjl jj1 = new Jfxhjl();
						jj1.setResaon("被吐槽");
						jj1.setUserid(user2.getId());
						jj1.setSl("+" + bzjf);
						jj1.setWzid(s.getId());
						jfxhjlfServiceI.add(jj1);
						json.put("errorCode", "0");
						json.put("errorMsg", "操作成功");

					}
				}

			} catch (Exception e) {
				json.put("errorCode", "1");
				json.put("errorMsg", "操作失败" + e.getMessage());
			}
			return json;
		} else if (type.equals("gzdz")) {// 跟战投顾点赞
			JSONObject json = new JSONObject();
			String gzid = request.getParameter("gzid");// 晒出的文章ID
			String zan = request.getParameter("zan");// 1--赞 -1吐槽
			String userid = request.getParameter("userid");
			try {
				WarCare s = warCareServiceI.get(gzid);
				if (s == null) {
					json.put("errorCode", "3");
					json.put("errorMsg", "无此文章");
				}
				if (zan.equals("1")) {
					String z = s.getZan();
					int z1 = Integer.valueOf(z) + 1;
					s.setZan(z1 + "");
				} else if (zan.equals("-1")) {
					String t = s.getTuCao();
					int t1 = Integer.valueOf(t) + 1;
					s.setTuCao(t1 + "");
				} else {
					json.put("errorCode", "2");
					json.put("errorMsg", "参数设置错误");
				}

				if (zan.equals("1")) {
					IntegralConfig con = integralConfigServiceI.get();
					String zanjf = con.getZan();
					LoginUser user_1 = loginUserService.getLoginUser(userid);
					int jf = user_1.getJifen();
					if (jf < Integer.valueOf(zanjf)) {
						json.put("errorCode", "3");
						json.put("errorMsg", "积分不够");
					} else {
						user_1.setJifen(jf - Integer.valueOf(zanjf));
						loginUserService.update(user_1);
						Jfxhjl jj = new Jfxhjl();
						jj.setResaon("点赞");
						jj.setUserid(user_1.getId());
						jj.setSl("-" + zanjf);
						jj.setWzid(s.getId());
						jfxhjlfServiceI.add(jj);
					}

					String zzid = s.getUserId();
					LoginUser user2 = loginUserService.getLoginUser(zzid);
					String bzjf = con.getBzan();
					user2.setJifen(user2.getJifen() + Integer.valueOf(bzjf));
					loginUserService.update(user2);
					Jfxhjl jj1 = new Jfxhjl();
					jj1.setResaon("被点赞");
					jj1.setUserid(user2.getId());
					jj1.setSl("+" + bzjf);
					jj1.setWzid(s.getId());
					jfxhjlfServiceI.add(jj1);
				} else {
					IntegralConfig con = integralConfigServiceI.get();
					String zanjf = con.getTucao();
					LoginUser user_1 = loginUserService.getLoginUser(userid);
					int jf = user_1.getJifen();
					if (jf < Integer.valueOf(zanjf)) {
						json.put("errorCode", "3");
						json.put("errorMsg", "积分不够");
					} else {
						user_1.setJifen(jf - Integer.valueOf(zanjf));
						loginUserService.update(user_1);
						Jfxhjl jj = new Jfxhjl();
						jj.setResaon("吐槽");
						jj.setUserid(user_1.getId());
						jj.setSl("-" + zanjf);
						jj.setWzid(s.getId());
						jfxhjlfServiceI.add(jj);
					}

					String zzid = s.getUserId();
					LoginUser user2 = loginUserService.getLoginUser(zzid);
					String bzjf = con.getBtucao();
					user2.setJifen(user2.getJifen() - Integer.valueOf(bzjf));
					loginUserService.update(user2);
					Jfxhjl jj1 = new Jfxhjl();
					jj1.setResaon("被吐槽");
					jj1.setUserid(user2.getId());
					jj1.setSl("+" + bzjf);
					jj1.setWzid(s.getId());
					jfxhjlfServiceI.add(jj1);
				}
				warCareServiceI.update(s);
				json.put("errorCode", "0");
				json.put("errorMsg", "操作成功");
			} catch (Exception e) {
				json.put("errorCode", "1");
				json.put("errorMsg", "操作失败" + e.getMessage());
			}
			return json;
		} else if (type.equals("lsftadd")) {// 历史发帖新增
			String userid = request.getParameter("userid");
			String title = request.getParameter("title");
			String turl = request.getParameter("turl");
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(title) || StringUtils.isBlank(turl)
					|| StringUtils.isBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "信息不完整");
			} else if (StringUtils.isNotBlank(turl)
					&& StringUtils.isNotBlank(title)
					|| StringUtils.isNotBlank(userid)) {
				Lsft l = new Lsft();
				l.setTitle(title);
				l.setUserid(userid);
				l.setTurl(turl);
				lsftServiceI.add(l);
				json.put("errorCode", "0");
				json.put("errorMsg", "保存成功");
			}
			return json;
		} else if (type.equals("jfadd")) {// 积分增加
			String userid = request.getParameter("userid");
			String jfsl = request.getParameter("jfsl");// 新增积分数量
			String reason = request.getParameter("reason");// 积分消耗事由

			String ttype = request.getParameter("ttype");// 用于区分是普通加分还是投资顾问的回答问题的加分
															// 0不是 1是
			/*Date date = new Date();
			SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
			String xftime = formatter.format(date);*/
			
			JSONObject json = new JSONObject();
			LoginUser loginUser = loginUserService.getLoginUser(userid);
			// 新增积分
			Integer jfzs = loginUser.getJifen();// 原有积分
			Integer xfsl = Integer.valueOf(jfsl);
			loginUser.setJifen(jfzs + xfsl);
			// 更新表
			loginUserService.update(loginUser);

			// 记录新增信息
			Jfxhjl jj = new Jfxhjl();
			jj.setResaon(reason);
			jj.setUserid(userid);
			jj.setSl("+" + jfsl);
			jj.setWzid("");
			jj.setTtype(ttype);
			jj.setUserType(loginUser.getUsertype());
			jj.setUsername(loginUser.getName());
			jj.setNickname(loginUser.getNickname());
			jfxhjlfServiceI.add(jj);
			json.put("errorCode", "0");
			json.put("errorMsg", "操作成功");

		} else if (type.equals("zjdr")) {// 最佳达人
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<LoginUser> list = loginUserService.getZjdr(page, rows);// 得到所有的投资顾问列表
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			for (int i = 0; i < list.size(); i++) {
				String userid = list.get(i).getId();
				Tgsq t = tzgwServiceI.getInfo(userid);// 得到投顾信息
				JSONObject j = new JSONObject();
				j.put("tginfo", t);
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "操作成功");
			json.put("total", loginUserService.getCount());
			json.put("rows", arr);
			return json;

		} else if (type.equals("tgshow")) {// 投顾秀列表(赛季赛，pts)
			String lx = request.getParameter("lx");// sjs赛季赛 pts普通赛
			String userid = request.getParameter("tgid");
			String yhid = request.getParameter("userid"); // 用户id（必传）
			if (StringUtils.isBlank(yhid)) {
				yhid = "1111111111";
			}
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String sort = request.getParameter("sort");// 用于排序 01模拟操盘排名最高 02赛季大神
														// 03收益率最高 04活跃度最高
														// 05最积极的 06被关注度 07注册时间

			List<Tgshow> list = tzgwServiceI
					.getTgShow(userid, page, rows, sort);
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			for (int i = 0; i < list.size(); i++) {
				JSONObject json1 = new JSONObject();
				Tgshow t = list.get(i);
				Tgsq tgsq = tzgwServiceI.get(t.getTgid());
				json1.put("tgid", tgsq.getUserid());
				json1.put("szjg", t.getSzjg());
				json1.put("tgqm", tgsq.getTgqm());// 投顾签名
				json1.put("cyzgzh", t.getCyzgzh());
				json1.put("tx", t.getTx());
				LoginUser loginuser = loginUserService
						.getUser(tgsq.getUserid());
				if (loginuser != null) {
					json1.put("name", loginuser.getNickname());
				} else {
					json1.put("name", "");
				}
				json1.put("fss", t.getFss());
				json1.put("sjspm", t.getSjspm());
				json1.put("sjsyll", t.getSjsyll());
				json1.put("ptsjb", t.getJbsl());
				json1.put("ptspm", t.getPtspm());
				json1.put("ptsyll", t.getPtsyll());
				json1.put("bzxcs", t.getBzxcs());
				json1.put("jdcs", t.getJdcs());
				json1.put("hpl", t.getHpl());
				json1.put("hyd", t.getHyd());
				json1.put("ywbdmyd", t.getYwbdmyd());
				if (StringUtils.isNotBlank(userid)) {
					Tgsq t1 = tzgwServiceI.getInfo(userid);
					json1.put("realname", t1.getRealname());
					json1.put("sex", t1.getSex());
					json1.put("age", t1.getAge());
					json1.put("dq", t1.getDq());
					json1.put("addr", t1.getAddr());
					json1.put("szjg", t1.getSzjg());
					json1.put("cynx", t1.getCynx());
					json1.put("phone", t1.getPhone());

				}
				json1.put("iszb", t.getIszb()); // 是否值班
				MyCare myCare = new MyCare();
				myCare.setUserId(yhid); // 用户id
				myCare.setConcernedId(tgsq.getUserid());
				List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
						"1", "5");
				if (mycareList.size() > 0) {
					json1.put("iscare", "1"); // 已关注
				} else {
					json1.put("iscare", "0"); // 未关注
				}
				arr.add(json1);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", tzgwServiceI.getCountForShow(userid));
			json.put("rows", arr);
			return json;

		} else if (type.equals("mnSjZdList")) {// 模拟赛季制定列表
			JSONObject json = new JSONObject();
			MnSjZd mnSjZd = new MnSjZd();
			String sjBeginTime = request.getParameter("sjBeginTime");// 模拟赛季开始时间
			String sjEndTime = request.getParameter("sjEndTime");// 模拟赛季制度结束时间
			String page = request.getParameter("page");

			String rows = request.getParameter("rows");
			mnSjZd.setSjBeginTime(sjBeginTime);
			mnSjZd.setSjEndTime(sjEndTime);
			List<MnSjZd> mnSjZdList = mnSjZdServiceI.mnSjZdList(mnSjZd, page,
					rows);
			JSONArray jsonArray = new JSONArray();

			for (MnSjZd mnSjZd2 : mnSjZdList) {
				JSONObject j = new JSONObject();
				String sjid = mnSjZd2.getId();
				String bmcout = mnSjBmServiceI.bmCount(sjid); // 获取报名数量
				Integer bms = 0;
				if ("1ba04fa2-6d21-4f39-82eb-9d5d90e7d1ec".equals(sjid)) { // 学生专场
					bms = Integer.parseInt(bmcout) + 150;
				} else if ("6bc06b9a-2eed-4f17-aa07-aaa3cf9c4630".equals(sjid)) { // 投顾专场
					bms = Integer.parseInt(bmcout) + 100;
				} else if ("7fb19b17-8da1-4c8a-9854-af5746dce556".equals(sjid)) { // 民间专场
					bms = Integer.parseInt(bmcout) + 200;
				} else {
					bms = Integer.parseInt(bmcout) + 100;
				}

				j.put("id", mnSjZd2.getId());
				// 赛季名称 Text 字符串
				j.put("sjName", mnSjZd2.getSjName());
				// 赛季起始时间 Date 日期类型
				j.put("sjBeginTime", mnSjZd2.getSjBeginTime());
				// 赛季截止时间 Date 日期类型
				j.put("sjEndTime", mnSjZd2.getSjEndTime());
				// 初始赛点 Int 相当于金币或资金的概念
				j.put("chuShi", mnSjZd2.getChuShi());
				// 上赛季段位奖励 Array [青铜、白银、黄金、白金、钻石、王者]
				j.put("sjDwJl", mnSjZd2.getSjDwJl());
				// 赛季手续费率 Dobe 百分比
				j.put("sjSxfl", mnSjZd2.getSjSxfl());
				// 赛季印花税率 Dobe 百分比
				j.put("sjYhsl", mnSjZd2.getSjYhsl());
				// 封面图图片
				j.put("fmtp", mnSjZd2.getFmtp());
				// 广告图图片
				j.put("ggtp", mnSjZd2.getGgtp());
				// 开户链接
				j.put("url", mnSjZd2.getSjms());

				// 该赛季报名数量
				j.put("bmsl", bms.toString());
				jsonArray.add(j);
			}
			json.put("errorCode", "0");// 返回模拟赛季制度列表
			json.put("errorMsg", "返回模拟赛季制度列表");
			json.put("total", mnSjZdServiceI.getCount(mnSjZd));
			json.put("rows", jsonArray);
			return json;
		} else if (type.equals("mnSjZdDetail")) {// 模拟赛季制度详情
			JSONObject json = new JSONObject();
			String id = request.getParameter("mnsjzdId");// 模拟赛季制度Id
			if (!StringUtils.isNotBlank(id)) {
				json.put("errorCode", "1");// 返回请选择赛季
				json.put("errorMsg", "返回请选择赛季");
				return json;
			}
			MnSjZd mnSjZd = mnSjZdServiceI.get(id);
			json.put("id", mnSjZd.getId());
			// 赛季名称 Text 字符串
			json.put("sjName", mnSjZd.getSjName());
			// 赛季起始时间 Date 日期类型
			json.put("sjBeginTime", mnSjZd.getSjBeginTime());
			// 赛季截止时间 Date 日期类型
			json.put("sjEndTime", mnSjZd.getSjEndTime());
			// 初始赛点 Int 相当于金币或资金的概念
			json.put("chuShi", mnSjZd.getChuShi());
			// 上赛季段位奖励 Array [青铜、白银、黄金、白金、钻石、王者]
			json.put("sjDwJl", mnSjZd.getSjDwJl());
			// 赛季手续费率 Dobe 百分比
			json.put("sjSxfl", mnSjZd.getSjSxfl());
			// 赛季印花税率 Dobe 百分比
			json.put("sjYhsl", mnSjZd.getSjYhsl());
			// 开户链接
			json.put("url", mnSjZd.getSjms());

			json.put("errorCode", "0");// 返回模拟赛季制度
			json.put("errorMsg", "返回模拟赛季制度");
			return json;

		} else if (type.equals("mnSjBmAdd")) {// 赛季报名新增
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");// 用户ID
			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "1");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			String sjId = request.getParameter("mnSjZdId");// 模拟赛季制度Id
			if (!StringUtils.isNotBlank(sjId)) {
				json.put("errorCode", "2");// 请选择赛季
				json.put("errorMsg", "请选择赛季");
				return json;
			}
			MnSjZd mnSjZd = mnSjZdServiceI.get(sjId);
			if (mnSjZd == null) {
				json.put("errorCode", "3");// 请选择正确赛季
				json.put("errorMsg", "请选择正确赛季");
				return json;
			}
			String sjSxf = request.getParameter("sjSxf");// 上交手续费
			if (!StringUtils.isNotBlank(sjSxf)) {
				sjSxf = "0";
			}
			String swGx = request.getParameter("swGx");// 税务贡献
			if (!StringUtils.isNotBlank(swGx)) {
				swGx = "0";
			}
			String sjName = mnSjZd.getSjName();
			String jsRq = mnSjZd.getSjEndTime();
			MnSjBm mnSjBm = new MnSjBm();
			LoginUser loginUser = loginUserService.getLoginUser(userId);

			String userName = "";
			if (loginUser != null) {
				userName = loginUser.getNickname();
			}
			String is = mnSjBmServiceI.pdbm(userId, sjId);
			;
			if (is.equals("1")) {
				json.put("errorCode", "4");
				json.put("errorMsg", "此赛季已报名");
				return json;
			}
			mnSjBm.setId(UUID.randomUUID().toString());
			// 用户名 Text 注册用户账号
			mnSjBm.setUserId(userId);
			mnSjBm.setUserName(userName);
			// 赛季名称 Text 字符串
			mnSjBm.setSjName(sjName);
			// 赛季编号 Int 赛季唯一ID号
			mnSjBm.setSjId(sjId);
			// 报名日期 Date 日期类型
			mnSjBm.setBmSj(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
			// 初始赛点
			mnSjBm.setCssd(mnSjZd.getChuShi());
			// 当前赛点 Int 赛季金币的数额
			String chu = mnSjZd.getChuShi();
			if (!StringUtils.isNotBlank(chu)) {
				chu = "0";
			}
			mnSjBm.setDqsd(chu);
			// 收益率 Int 当前赛季的收益率
			mnSjBm.setSyl("0");
			// 上缴手续费 Int 金额
			mnSjBm.setSjSxf(sjSxf);
			// 税务贡献 Int 金额
			mnSjBm.setSwGx(swGx);
			// 结算日期 Date 日期类型
			mnSjBm.setJsRq(jsRq);
			// 初始赛点
			//MnSjZd zd = mnSjZdServiceI.get(sjId);
			mnSjBmServiceI.add(mnSjBm);
			loginUser.setSjsjb(mnSjBm.getCssd());
			loginUserService.update(loginUser);
			json.put("errorCode", "0");// 报名成功
			json.put("errorMsg", "报名成功");
			return json;
		} else if (type.equals("mnSjBmList")) {// 赛季报名列表
			JSONObject json = new JSONObject();
			MnSjBm mnSjBm = new MnSjBm();
			String userId = request.getParameter("userid");// 用户ID
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			mnSjBm.setUserId(userId);
			String sjId = request.getParameter("sjId");// 赛季id(用于判断当前赛季用户是否报名)
			mnSjBm.setSjId(sjId);
			List<MnSjBm> mnSjBmList = mnSjBmServiceI.mnSjBmList(mnSjBm, page,
					rows);
			JSONArray jsonArray = new JSONArray();
			JSONObject j = null;
			for (MnSjBm mnSjBm2 : mnSjBmList) {
				j = new JSONObject();
				j.put("id", mnSjBm2.getId());
				// 用户名 Text 注册用户账号
				j.put("userId", mnSjBm2.getUserId());
				j.put("userName", mnSjBm2.getUserName());
				// 赛季名称 Text 字符串
				j.put("sjName", mnSjBm2.getSjName());
				// 赛季编号 Int 赛季唯一ID号
				j.put("sjId", mnSjBm2.getSjId());
				// 报名日期 Date 日期类型
				j.put("bmSj", mnSjBm2.getBmSj());
				// 当前赛点 Int 赛季金币的数额
				j.put("dqsd", mnSjBm.getDqsd());
				// 收益率 Int 当前赛季的收益率
				j.put("syl", mnSjBm.getSyl());
				// 上缴手续费 Int 金额
				j.put("sjSxf", mnSjBm2.getSjSxf());
				// 税务贡献 Int 金额
				j.put("swGx", mnSjBm2.getSwGx());
				// 结算日期 Date 日期类型
				j.put("jsRq", mnSjBm2.getJsRq());
				jsonArray.add(j);
			}
			json.put("errorCode", "0");// 返回模拟赛季报名列表
			json.put("errorMsg", "返回模拟赛季报名列表");
			json.put("total", mnSjBmServiceI.getCount(mnSjBm));
			json.put("rows", jsonArray);
			return json;
		} else if (type.equals("mnSjBmDetail")) {// 赛季报名详情
			JSONObject json = new JSONObject();
			String id = request.getParameter("mnSjBmId");// 赛季报名ID
			if (!StringUtils.isNotBlank(id)) {
				json.put("errorCode", "1");// 返回赛季报名
				json.put("errorMsg", "请选择报名赛季");
				return json;
			}
			MnSjBm mnSjBm = mnSjBmServiceI.get(id);
			json.put("id", mnSjBm.getId());
			// 用户名 Text 注册用户账号
			json.put("userId", mnSjBm.getUserId());
			json.put("userName", mnSjBm.getUserName());
			// 赛季名称 Text 字符串
			json.put("sjName", mnSjBm.getSjName());
			// 赛季编号 Int 赛季唯一ID号
			json.put("sjId", mnSjBm.getSjId());
			// 报名日期 Date 日期类型
			json.put("bmSj", mnSjBm.getBmSj());
			// 当前赛点 Int 赛季金币的数额
			json.put("dqsd", mnSjBm.getDqsd());
			// 收益率 Int 当前赛季的收益率
			json.put("syl", mnSjBm.getSyl());
			// 上缴手续费 Int 金额
			json.put("sjSxf", mnSjBm.getSjSxf());
			// 税务贡献 Int 金额
			json.put("swGx", mnSjBm.getSwGx());
			// 结算日期 Date 日期类型
			json.put("jsRq", mnSjBm.getJsRq());
			json.put("errorCode", "0");// 返回模拟赛季报名列表
			json.put("errorMsg", "返回模拟赛季报名列表");
			return json;
		} else if (type.equals("ptsBmList")) {// 普通赛季报名列表
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");// 用户ID
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			PtsBm ptsBm = new PtsBm();
			ptsBm.setUserId(userId);
			List<PtsBm> ptspmList = ptsBmServiceI.ptsBmList(ptsBm, page, rows);
			JSONArray jsonArray = new JSONArray();
			JSONObject j = null;
			for (PtsBm ptsBm2 : ptspmList) {
				j = new JSONObject();
				j.put("id", ptsBm2.getId());
				j.put("userId", ptsBm2.getUserId());
				j.put("userName", ptsBm2.getUserName());
				j.put("dqJb", ptsBm2.getDqJb());
				j.put("syl", ptsBm2.getSyl());
				j.put("sjSxf", ptsBm2.getSjSxf());
				j.put("swGx", ptsBm2.getSwGx());
				j.put("jsRq", ptsBm2.getJsRq());
				jsonArray.add(j);
			}
			json.put("errorCode", "0");// 返回普通赛列表
			json.put("errorMsg", "返回普通赛列表");
			json.put("total", ptsBmServiceI.getCount(ptsBm));
			json.put("rows", jsonArray);
			return json;
		} else if (type.equals("ptsBmAdd")) {// ptsBm新增
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");// 用户ID
			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "1");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			PtsBm p = new PtsBm();
			p.setUserId(userId);
			int count_bm = ptsBmServiceI.getCount(p);
			if (count_bm > 0) {
				json.put("errorCode", "2");// 请登录
				json.put("errorMsg", "请不要重复报名");
				return json;
			}
			String sjId = request.getParameter("mnSjZdId");// 模拟赛季制度Id
			String sjSxf = request.getParameter("sjSxf");// 上交手续费
			if (!StringUtils.isNotBlank(sjSxf)) {
				sjSxf = "0";
			}
			String swGx = request.getParameter("swGx");// 税务贡献
			if (!StringUtils.isNotBlank(swGx)) {
				swGx = "0";
			}
			PtsBm ptsBm = new PtsBm();
			LoginUser loginUser = loginUserService.getLoginUser(userId);
			String userName = "";
			if (loginUser != null) {
				userName = loginUser.getNickname();
			}
			ptsBm.setId(UUID.randomUUID().toString());
			ptsBm.setUserId(userId);
			ptsBm.setUserName(userName);
			ptsBm.setSyl("0");
			ptsBm.setSjSxf(sjSxf);
			ptsBm.setSwGx(swGx);
			ptsBm.setJsRq("");
			IntegralConfig con = integralConfigServiceI.get();
			ptsBm.setDqJb(con.getPtsjb());
			ptsBmServiceI.add(ptsBm);
			loginUser.setPtsjb(con.getPtsjb());
			loginUserService.update(loginUser);
			json.put("errorCode", "0");// 报名成功
			json.put("errorMsg", "报名成功");
			return json;
		} else if (type.equals("ptsBmDetail")) {// 普通赛详情
			JSONObject json = new JSONObject();
			String id = request.getParameter("ptsBmId");// 普通赛ID
			if (!StringUtils.isNotBlank(id)) {
				json.put("errorCode", "1");// 请选择普通赛
				json.put("errorMsg", "请选择普通赛");
				return json;
			}
			PtsBm ptsBm = ptsBmServiceI.get(id);
			json.put("id", ptsBm.getId());
			json.put("userId", ptsBm.getUserId());
			json.put("userName", ptsBm.getUserName());
			json.put("dqJb", ptsBm.getDqJb());
			json.put("syl", ptsBm.getSyl());
			json.put("sjSxf", ptsBm.getSjSxf());
			json.put("swGx", ptsBm.getSwGx());
			json.put("jsRq", ptsBm.getJsRq());
			json.put("errorCode", "0");// 返回普通赛
			json.put("errorMsg", "返回普通赛");
			return json;
		} else if (type.equals("ptsPm")) {// 普通赛排名
			JSONObject json = new JSONObject();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<LoginUser> loginUserList = loginUserService.ptsPm(page, rows);
			JSONArray arr = new JSONArray();
			JSONObject j = null;
			LoginUser loginUser = new LoginUser();
			for (int i = 0; i < loginUserList.size(); i++) {
				j = new JSONObject();
				loginUser = loginUserList.get(i);
				if (i == 0) {
					j.put("duanWei", "1");// 6:青铜、5:白银、4:黄金、3:白金、2:钻石、1:王者
				} else if (i == 1) {
					j.put("duanWei", "2");
				} else if (i == 2) {
					j.put("duanWei", "3");
				} else if (i == 3) {
					j.put("duanWei", "4");
				} else if (i == 4) {
					j.put("duanWei", "5");
				} else if (i >= 5) {
					j.put("duanWei", "6");
				}
				j.put("id", loginUser.getId());// ID
				j.put("nickname", loginUser.getNickname());// 姓名
				j.put("ptsjb", loginUser.getPtsjb());// 金币
				if (loginUser.getUsertype().equals("2")) {
					Tgshow ttt = tzgwServiceI
							.getTgShowDetail(loginUser.getId());
					j.put("hyd", ttt.getHyd());// 活跃度
					j.put("ptspm", ttt.getPtspm());// 排名
					j.put("ptsyll", ttt.getPtsyll());// 盈利率
				}
				arr.add(j);
			}
			json.put("errorCode", "0");// 返回普通赛排名
			json.put("errorMsg", "返回普通赛排名");
			json.put("total", loginUserService.ptsPmCount());
			json.put("rows", arr);
			return json;
		} else if (type.equals("sjsPm")) {// 赛季赛排名
			JSONObject json = new JSONObject();
			// 通过登陆人id获取他所参加的赛季
			String userId = request.getParameter("userid");// 用户id(如果是查询当前登陆人参加的赛季就需要传)
			String saiji = request.getParameter("saiji");// 0为当前赛季；1为上赛季 Y
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			if (!StringUtils.isNotBlank(saiji)) {
				saiji = "1";
			}
			MnSjBm mnSjBm = new MnSjBm();
			mnSjBm.setUserId(userId);
			List<MnSjBm> mnSjBmList = mnSjBmServiceI.sjsIds(userId);
			List<MnSjBm> mnSjBms = new ArrayList<MnSjBm>();
			MnSjBm mn = new MnSjBm();
			for (int i = 0; i < mnSjBmList.size(); i++) {// 获取用户参加的所有赛季
				Object ob = mnSjBmList.get(i);
				if (i == Integer.parseInt(saiji)) {
					String sjId = ob.toString();
					JSONArray jsonArray = new JSONArray();
					JSONObject jo = null;
					if (StringUtils.isNotBlank(sjId)) {
						mnSjBms = mnSjBmServiceI.mnSjBmListODBydqSd(sjId, page,
								rows);
						for (int k = 0; k < mnSjBms.size(); k++) {// 获取赛季排名
							jo = new JSONObject();
							MnSjBm mns = mnSjBms.get(k);
							if (k == 0) {
								jo.put("duanWei", "1");// 6:青铜、5:白银、4:黄金、3:白金、2:钻石、1:王者
							} else if (k == 1) {
								jo.put("duanWei", "2");
							} else if (k == 2) {
								jo.put("duanWei", "3");
							} else if (k == 3) {
								jo.put("duanWei", "4");
							} else if (k == 4) {
								jo.put("duanWei", "5");
							} else if (k >= 5) {
								jo.put("duanWei", "6");
							}
							jo.put("userid", mns.getUserId());// 用户ID
							jo.put("nickname", mns.getUserName());// 昵称
							jo.put("sjsjb", mns.getDqsd());// 赛季赛当前金币
							Tgshow t = tzgwServiceI.getTgShowDetail(mns
									.getUserId());
							int spm = 0;
							if (t != null) {
								jo.put("sjsyll", t.getSjsyll());// 盈利率
								jo.put("hyd", t.getHyd());// 活跃度
								spm = Integer.valueOf(t.getSjspm());
								jo.put("sjspm_a", t.getSjspm());// 上期排名
							}

							int p = tzgwServiceI.getTgPtspm(mns.getUserId());
							if (p >= 0) {
								if (p > spm) {
									jo.put("ss", "1");// 上升
								} else if (p < spm) {
									jo.put("ss", "-1");// 下降
								} else {
									jo.put("ss", "0");// 持平
								}
								jo.put("sjspm_b", p);// 上上期排名
							}
							jsonArray.add(jo);
						}
						json.put("errorCode", "0");// 返回赛季排名
						json.put("rows", jsonArray);// 放置当前赛季排名
						json.put("errorMsg", "查询成功");
						json.put("total", mnSjBmServiceI.sjpmCount(sjId));
						return json;
					}
				}
			}
			json.put("errorCode", "2");// 用户没用参加该赛季
			json.put("errorMsg", "用户没有参加该赛季");
			return json;
		} else if (type.equals("lcjhAdd")) {// 理财计划新增
			JSONObject json = new JSONObject();
			String userId = request.getParameter("userid");// 用户ID Y
			String jhbt = request.getParameter("jhbt");// 理财计划的名称 Y
			String yjsyl = request.getParameter("yjsyl");// 预计收益率 Y
			String yjzsx = request.getParameter("yjzsx");// 计划的预计最高损失度百分比 Y
			String fssj = request.getParameter("fssj");// 理财计划预计开始销售的时间 Y
			String jzsssj = request.getParameter("jzsssj");// 理财计划预计截止销售的时间 Y
			String jhjj = request.getParameter("jhjj");// 理财计划的详细介绍 Y
			String jhwjrq = request.getParameter("jhwjrq");// 计划完结日期 N
			String jhqdsj = request.getParameter("jhqdsj");// 计划启动时间 N
			String jgmc = request.getParameter("jgmc");// 机构名称
			String fwf = request.getParameter("fwf");// 服务费 Y
			String images = request.getParameter("images");// 图片
			if (StringUtils.isNotBlank(jgmc)) {
				jgmc = URLDecoder.decode(jgmc, "UTF-8");
			}
			if (StringUtils.isNotBlank(jhbt)) {
				jhbt = URLDecoder.decode(jhbt, "UTF-8");
			}
			if (StringUtils.isNotBlank(jhjj)) {
				jhjj = URLDecoder.decode(jhjj, "UTF-8");
			}
			if (!StringUtils.isNotBlank(userId)) {
				json.put("errorCode", "1");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			LoginUser loginUser = loginUserService.getLoginUser(userId);
			String userName = "";
			if (loginUser != null) {
				userName = loginUser.getNickname();
			}
			if (!StringUtils.isNotBlank(jhbt)) {
				json.put("errorCode", "2");// 请添加理财计划的名称
				json.put("errorMsg", "请添加理财计划的名称");
				return json;
			}
			if (!StringUtils.isNotBlank(yjsyl)) {
				json.put("errorCode", "3");// 请添加预计收益率百分比
				json.put("errorMsg", "请添加预计收益率百分比");
				return json;
			}
			if (!StringUtils.isNotBlank(yjsyl)) {
				json.put("errorCode", "4");// 请添加计划的预计最高损失度百分比
				json.put("errorMsg", "请添加计划的预计最高损失度百分比");
				return json;
			}
			if (!StringUtils.isNotBlank(fssj)) {
				json.put("errorCode", "5");// 请添加理财计划预计开始销售的时间
				json.put("errorMsg", "请添加理财计划预计开始销售的时间");
				return json;
			}
			if (!StringUtils.isNotBlank(jzsssj)) {
				json.put("errorCode", "6");// 请添加理财计划预计截止销售的时间
				json.put("errorMsg", "请添加理财计划预计截止销售的时间");
				return json;
			}
			if (!StringUtils.isNotBlank(jhjj)) {
				json.put("errorCode", "7");// 请添加理财计划的详细介绍
				json.put("errorMsg", "请添加理财计划的详细介绍");
				return json;
			}
			if (!StringUtils.isNotBlank(fwf)) {
				json.put("errorCode", "8");// 请添加理财计划的详细介绍
				json.put("errorMsg", "请输入服务费");
				return json;
			}
			Lcjh lcjh = new Lcjh();
			lcjh.setId(UUID.randomUUID().toString());
			lcjh.setJhbt(jhbt);
			lcjh.setYjsyl(yjsyl);
			lcjh.setYjzsx(yjzsx);
			lcjh.setFwf("0");
			lcjh.setFssj(fssj);
			lcjh.setJzsssj(jzsssj);
			lcjh.setJhjj(jhjj);
			lcjh.setUserId(userId);
			lcjh.setUserName(userName);
			lcjh.setState("0");
			lcjh.setStatus("0");
			lcjh.setJhwjrq(jhwjrq);
			lcjh.setJhqdsj(jhqdsj);
			lcjh.setJgmc(jgmc);
			lcjh.setFwf(fwf);// 服务费
			lcjh.setImages(images);
			lcjhServiceI.add(lcjh);
			json.put("errorCode", "0");
			json.put("errorMsg", "理财计划申请");
			return json;
		} else if (type.equals("lcjhList")) {// 理财计划列表
			JSONObject json = new JSONObject();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String userId = request.getParameter("userid");// 用户ID
			Lcjh lcjh = new Lcjh();
			lcjh.setUserId(userId);
			lcjh.setState("1");
			lcjh.setStatus("0");
			List<Lcjh> lcjhList = lcjhServiceI.lcjhList(lcjh, page, rows);
			JSONArray arr = new JSONArray();
			JSONObject j = null;
			for (Lcjh lcjh2 : lcjhList) {
				j = new JSONObject();
				j.put("id", lcjh2.getId());
				j.put("jhbt", lcjh2.getJhbt());
				j.put("yjsyl", lcjh2.getYjsyl());
				j.put("yjzsx", lcjh2.getYjzsx());
				j.put("fwf", lcjh2.getFwf());
				j.put("fssj", lcjh2.getFssj());
				j.put("jzsssj", lcjh2.getJzsssj());
				j.put("jhjj", lcjh2.getJhjj());
				j.put("userId", lcjh2.getUserId());
				if (StringUtils.isBlank(lcjh2.getImages())) {
					j.put("images", "");
				} else {
					j.put("images", lcjh2.getImages());
				}
				j.put("userName", lcjh2.getUserName());
				if (lcjh2.getUserId() != null) {
					if (!lcjh2.getUserId().equals("")) {
						LoginUser user = loginUserService.getLoginUser(lcjh2
								.getUserId());
						if (user != null) {
							j.put("yhtx", user.getTx());
						} else {
							j.put("yhtx", "");
						}
					}
				}
				j.put("state", lcjh2.getState());
				j.put("status", lcjh2.getStatus());
				j.put("jhwjrq", lcjh2.getJhwjrq());
				j.put("jhqdsj", lcjh2.getJhqdsj());
				j.put("jgmc", lcjh2.getJgmc());
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", lcjhList.size());
			json.put("rows", arr);
			return json;
		} else if (type.equals("lcjhDetail")) {// 理财计划详情
			JSONObject json = new JSONObject();
			String lcjhId = request.getParameter("lcjhId");// 理财计划id
			if (!StringUtils.isNotBlank(lcjhId)) {
				json.put("errorCode", "1");// 请选择正确的理财计划
				json.put("errorMsg", "请请选择正确的理财计划");
				return json;
			}
			Lcjh lcjh = lcjhServiceI.get(lcjhId);
			if (lcjh != null) {
				json.put("id", lcjh.getId());
				json.put("jhbt", lcjh.getJhbt());
				json.put("yjsyl", lcjh.getYjsyl());
				json.put("yjzsx", lcjh.getYjzsx());
				json.put("fwf", lcjh.getFwf());
				json.put("fssj", lcjh.getFssj());
				json.put("jzsssj", lcjh.getJzsssj());
				json.put("jhjj", lcjh.getJhjj());
				json.put("userId", lcjh.getUserId());
				json.put("userName", lcjh.getUserName());
				json.put("state", lcjh.getState());
				json.put("status", lcjh.getStatus());
				json.put("jhwjrq", lcjh.getJhwjrq());
				json.put("jhqdsj", lcjh.getJhqdsj());
				json.put("images", lcjh.getImages());
				LoginUser user = loginUserService
						.getLoginUser(lcjh.getUserId());
				if (user != null) {
					json.put("yhtx", user.getTx());
				} else {
					json.put("yhtx", "");
				}
				json.put("jgmc", lcjh.getJgmc());
				json.put("errorCode", "0");
				json.put("errorMsg", "理财计划详情信息");
				return json;
			} else {
				json.put("errorCode", "1");// 请选择正确的理财计划
				json.put("errorMsg", "请请选择正确的理财计划");
				return json;
			}
		} else if (type.equals("gmlcjhAdd")) {// 购买理财计划新增
			JSONObject json = new JSONObject();
			String gmrId = request.getParameter("userid");// 购买人ID Y
			String gmjg = request.getParameter("gmjg");// 购买价格 Y
			String lcjhId = request.getParameter("lcjhId");// 购买理财计划id Y
			String gmsj = TimeUtils.getTime("yyyy-MM-dd HH:mm:ss");
			LoginUser loginUser = loginUserService.getLoginUser(gmrId);
			String gmrXm = "";
			if (loginUser != null) {
				gmrXm = loginUser.getNickname();
			}
			if (!StringUtils.isNotBlank(gmrId)) {
				json.put("errorCode", "1");// 请登录
				json.put("errorMsg", "请登录");
				return json;
			}
			if (!StringUtils.isNotBlank(gmjg)) {
				json.put("errorCode", "2");// 请填写购买价格
				json.put("errorMsg", "请填写购买价格");
				return json;
			}
			if (!StringUtils.isNotBlank(lcjhId)) {
				json.put("errorCode", "3");// 请选择购买的理财计划
				json.put("errorMsg", "请选择购买的理财计划");
				return json;
			}
			Lcjh lcjh = lcjhServiceI.get(lcjhId);
			if (lcjh == null) {
				json.put("errorCode", "3");// 请选择购买的理财计划
				json.put("errorMsg", "请选择购买的理财计划");
				return json;
			}
			Gmlcjh gmlcjh = new Gmlcjh();
			gmlcjh.setId(UUID.randomUUID().toString());
			gmlcjh.setGmrXm(gmrXm);
			gmlcjh.setGmjg(gmjg);
			gmlcjh.setGmrId(gmrId);
			gmlcjh.setLcjhId(lcjhId);
			gmlcjh.setGmsj(gmsj);
			gmlcjh.setLcjhbt(lcjh.getJhbt());
			gmlcjh.setLcjhfbr(lcjh.getUserName());
			gmlcjhServiceI.add(gmlcjh);
			json.put("errorCode", "0");
			json.put("errorMsg", "购买成功");
			return json;
		} else if (type.equals("gmlcjhList")) {// 购买理财计划列表
			JSONObject json = new JSONObject();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String gmrId = request.getParameter("userid");// 用户ID
			Gmlcjh gmlcjh = new Gmlcjh();
			gmlcjh.setGmrId(gmrId);
			List<Gmlcjh> gmlcjhList = gmlcjhServiceI.gmlcjhList(gmlcjh, page,
					rows);
			JSONArray arr = new JSONArray();
			JSONObject j = null;
			for (Gmlcjh gmlcjh2 : gmlcjhList) {
				j = new JSONObject();
				j.put("id", gmlcjh2.getId());
				j.put("gmrId", gmlcjh2.getGmrId());
				j.put("gmrXm", gmlcjh2.getGmrXm());
				j.put("gmjg", gmlcjh2.getGmjg());
				j.put("lcjhId", gmlcjh2.getLcjhId());
				j.put("gmsj", gmlcjh2.getGmsj());
				j.put("lcjhbt", gmlcjh2.getLcjhbt());
				j.put("lcjhfbr", gmlcjh2.getLcjhfbr());
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", gmlcjhList.size());
			json.put("rows", arr);
			return json;
		} else if (type.equals("gmlcjhDetail")) {// 购买理财计划列表
			JSONObject json = new JSONObject();
			String gmlcjhId = request.getParameter("gmlcjhId");// 购买理财计划id
			if (!StringUtils.isNotBlank(gmlcjhId)) {
				json.put("errorCode", "1");// 请选择正确的购买理财计划
				json.put("errorMsg", "请选择正确的购买理财计划");
				return json;
			}
			Gmlcjh gmlcjh = gmlcjhServiceI.get(gmlcjhId);
			if (gmlcjh != null) {
				json.put("id", gmlcjh.getId());
				json.put("gmrId", gmlcjh.getGmrId());
				json.put("gmrXm", gmlcjh.getGmrXm());
				json.put("gmjg", gmlcjh.getGmjg());
				json.put("lcjhId", gmlcjh.getLcjhId());
				json.put("gmsj", gmlcjh.getGmsj());
				json.put("lcjhbt", gmlcjh.getLcjhbt());
				json.put("lcjhfbr", gmlcjh.getLcjhfbr());
				json.put("errorCode", "0");// 返回理财计划购买详情信息
				json.put("errorMsg", "返回理财计划购买详情信息");
				return json;
			} else {
				json.put("errorCode", "1");// 请选择正确的购买理财计划
				json.put("errorMsg", "请选择正确的购买理财计划");
				return json;
			}
		} else if (type.equals("rmgp")) {// 热门股票
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<Mncp> list = mncpServiceI.getRmgp(page, rows);
			for (int i = 0; i < list.size(); i++) {
				Mncp n = list.get(i);
				JSONObject j = new JSONObject();
				String zqdm = n.getZqdm();
				String zqname = n.getZqname();
				if (StringUtils.isBlank(zqdm)) {
					zqdm = "";
				}
				if (StringUtils.isBlank(zqname)) {
					zqname = "";
				}
				j.put("zqdm", zqdm);
				j.put("zqname", zqname);
				arr.add(j);
			}

			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", list.size());
			json.put("rows", arr);
			return json;
		} else if (type.equals("tgpts")) {// 投资顾问普通赛
			String tgid = request.getParameter("tgid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			if (StringUtils.isBlank(tgid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "投资顾问ID为空");
			} else {
				List<Mncp> list = mncpServiceI.getTgpts(tgid, page, rows);
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					Mncp m = list.get(i);
					j.put("mncpid", m.getId());
					j.put("userid", m.getUserid());
					j.put("username", m.getUsername());
					j.put("gddm", m.getGddm());
					j.put("zqdm", m.getZqdm());
					j.put("zqname", m.getZqname());
					j.put("bz", m.getBz());
					j.put("wtsl", m.getWtsl());
					j.put("cjsl", m.getCjsl());
					j.put("wtjg", m.getWtjg());
					j.put("cz", m.getCz());
					j.put("wttime", m.getWttime());
					j.put("htbh", m.getHtbh());
					j.put("gdzh", m.getGdzh());
					j.put("mrlx", m.getMrlx());
					j.put("mrzj", m.getMrzj());
					j.put("sxf", m.getSxf());
					j.put("yhs", m.getYhs());
					j.put("mcsl", m.getMcsl());
					j.put("mcjg", m.getMcjg());
					j.put("mczj", m.getMczj());
					j.put("mclx", m.getMclx());
					arr.add(j);
				}
			}

			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", mncpServiceI.getTgPtsCount(tgid));
			json.put("rows", arr);
			return json;
		} else if (type.equals("tgsjs")) {// 投资顾问赛季赛
			String tgid = request.getParameter("tgid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			JSONObject json = new JSONObject();
			List<Mncp> list = null;
			JSONArray arr = new JSONArray();
			if (StringUtils.isBlank(tgid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "投资顾问ID为空");
			} else {
				list = mncpServiceI.getTgsjs(tgid, page, rows);
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					Mncp m = list.get(i);
					j.put("mncpid", m.getId());
					j.put("userid", m.getUserid());
					j.put("username", m.getUsername());
					j.put("gddm", m.getGddm());
					j.put("zqdm", m.getZqdm());
					j.put("zqname", m.getZqname());
					j.put("bz", m.getBz());
					j.put("wtsl", m.getWtsl());
					j.put("cjsl", m.getCjsl());
					j.put("wtjg", m.getWtjg());
					j.put("cz", m.getCz());
					j.put("wttime", m.getWttime());
					j.put("htbh", m.getHtbh());
					j.put("gdzh", m.getGdzh());
					j.put("mrlx", m.getMrlx());
					j.put("mrzj", m.getMrzj());
					j.put("sxf", m.getSxf());
					j.put("yhs", m.getYhs());
					j.put("mcsl", m.getMcsl());
					j.put("mcjg", m.getMcjg());
					j.put("mczj", m.getMczj());
					j.put("mclx", m.getMclx());
					arr.add(j);
				}
			}

			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", mncpServiceI.getTgsjsCount(tgid, page, rows));
			json.put("rows", arr);
			return json;
		} else if (type.equals("mncpxq")) {// 投资顾问模拟操盘详情
			String mncpid = request.getParameter("mncpid");
			JSONObject j = new JSONObject();
			if (StringUtils.isBlank(mncpid)) {
				j.put("errorCode", "1");
				j.put("errorMsg", "记录ID为空");
				return j;
			}
			Mncp m = mncpServiceI.getMncpById(mncpid);
			if (m != null) {
				j.put("mncpid", m.getId());
				j.put("userid", m.getUserid());
				j.put("username", m.getUsername());
				j.put("gddm", m.getGddm());
				j.put("zqdm", m.getZqdm());
				j.put("zqname", m.getZqname());
				j.put("bz", m.getBz());
				j.put("wtsl", m.getWtsl());
				j.put("cjsl", m.getCjsl());
				j.put("wtjg", m.getWtjg());
				j.put("cz", m.getCz());
				j.put("wttime", m.getWttime());
				j.put("htbh", m.getHtbh());
				j.put("gdzh", m.getGdzh());
				j.put("mrlx", m.getMrlx());
				j.put("mrzj", m.getMrzj());
				j.put("sxf", m.getSxf());
				j.put("yhs", m.getYhs());
				j.put("mcsl", m.getMcsl());
				j.put("mcjg", m.getMcjg());
				j.put("mczj", m.getMczj());
				j.put("mclx", m.getMclx());
			} else {
				j.put("errorCode", "2");
				j.put("errorMsg", "无此记录");
			}
			return j;
		} else if (type.equals("tgwz")) {// 投资顾问文章
			String tgid = request.getParameter("tgid");
			String userid = request.getParameter("userid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			List<WarCare> list = warCareServiceI.getWarcareByTgid(tgid, page,
					rows);
			for (int i = 0; i < list.size(); i++) {
				WarCare warCare = list.get(i);
				JSONObject j = new JSONObject();
				j.put("id", warCare.getId());
				j.put("title", warCare.getTitle());
				j.put("userId", warCare.getUserId());
				j.put("userName", warCare.getUserName());
				j.put("releaseTime", warCare.getReleaseTime());
				j.put("state", warCare.getState());
				j.put("deleteReason", warCare.getDeleteReason());
				j.put("power", warCare.getPower());
				j.put("zan", warCare.getZan());
				j.put("releaseContent", warCare.getReleaseContent());
				j.put("tuCao", warCare.getTuCao());
				j.put("gmCs", warCare.getGmCs());
				j.put("xhJf", warCare.getXhJf());
				j.put("releaseIp", warCare.getReleaseIp());
				if (StringUtils.isNotBlank(userid)) {// 传递有userid,返回是否购买
					List<Jfxhjl> list_jf = jfxhjlfServiceI.getList(userid,
							warCare.getId(), "", "", "", "");
					if (list_jf.size() > 0) {
						j.put("isbuy", "yes");
					} else {
						j.put("isbuy", "no");
					}
				}
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", warCareServiceI.getCountByTgid(tgid));
			json.put("rows", arr);

			return json;
		} else if (type.equals("tgdetail")) {// 投资顾问详情
			String tgid = request.getParameter("tgid"); // 投顾的userid
			String userid = request.getParameter("userid");
			Tgshow t = tzgwServiceI.getTgShowDetail(tgid);
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(tgid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "投资顾问ID为空");
				return json;
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");

			json.put("tginfoid", t.getTgid());
			json.put("szjg", t.getSzjg());
			json.put("cyzgzh", t.getCyzgzh());
			json.put("tx", t.getTx());
			Tgsq tg = tzgwServiceI.getInfo(tgid); // 检索出投资顾问申请数据
			LoginUser loginuser = loginUserService.getUser(tgid);
			if (loginuser != null) {
				json.put("name", loginuser.getNickname());
			} else {
				json.put("name", "");
			}
			json.put("realname", tg.getRealname());
			json.put("fss", t.getFss());
			json.put("sjspm", t.getSjspm());
			json.put("sjsyll", t.getSjsyll());
			json.put("ptsjb", t.getJbsl());
			json.put("ptspm", t.getPtspm());
			json.put("ptsyll", t.getPtsyll());
			json.put("bzxcs", t.getBzxcs());
			json.put("jdcs", t.getJdcs());
			json.put("hpl", t.getHpl());
			json.put("hyd", t.getHyd());
			json.put("ywbdmyd", t.getYwbdmyd());
			if (StringUtils.isNotBlank(userid)) {
				MyCare myCare = new MyCare();
				myCare.setUserId(userid);
				myCare.setConcernedId(tgid);
				List<MyCare> mycareList = myCareServiceI.myCareList(myCare,
						"1", "5");
				if (mycareList.size() > 0) {
					json.put("isgz", "1");// 已关注
				} else {
					json.put("isgz", "0");// 未关注
				}

			}
			return json;
		} else if (type.equals("tgtwjf")) {// 投资顾问设置被提问的积分
			String tgid = request.getParameter("userid");// 投资顾问的ID
			String jf = request.getParameter("twjf");
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(tgid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			Tgsq t = tzgwServiceI.getInfo(tgid);
			if (t == null) {
				json.put("errorCode", "2");
				json.put("errorMsg", "没有该投资顾问的信息");
				return json;
			} else {
				t.setTwjf(jf);
				tzgwServiceI.update(t);
				json.put("errorCode", "0");
				json.put("errorMsg", "设置成功");
				return json;
			}
		} else if (type.equals("tgdjAdd")) {// 投顾点金新增
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid");
			String title = request.getParameter("title");
			String content = request.getParameter("content");
			String jf = request.getParameter("jf");
			String zy = request.getParameter("zy");
			String image = request.getParameter("image");
			String fl = request.getParameter("fl");// 01 投顾点金，02荐股，03分析
			if (StringUtils.isBlank(fl)) {
				json.put("errorCode", "3");
				json.put("errorMsg", "请选择分类(01 投顾点金，02荐股，03分析)");
				return json;
			}
			if (StringUtils.isNotBlank(userid)) {
				Tgdj t = new Tgdj();
				t.setUserid(userid);
				if(StringUtils.isNotBlank(content)){
					t.setContent(content);
				}
				if(StringUtils.isNotBlank(title)){
					t.setTitle(title);
				}
				if(StringUtils.isNotBlank(image)){
					t.setImage(image);
				}
				if(StringUtils.isNotBlank(zy)){
					t.setZy(zy);
				}
				if(StringUtils.isNotBlank(jf)){
					t.setJf(jf);
				}
				t.setType(fl);
				try {
					tgdjServiceI.add(t);
					json.put("errorCode", "0");
					json.put("errorMsg", "添加成功");
				} catch (Exception e) {
					json.put("errorCode", "1");
					json.put("errorMsg", "添加失败" + e.getMessage());
				}

			} else {
				json.put("errorCode", "2");
				json.put("errorMsg", "请登录！");

			}
			return json;
		} else if (type.equals("tgdjlb")) {// 投顾点金列表
			String tgid = request.getParameter("tgid");
			String userid = request.getParameter("userid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String sort = request.getParameter("sort");// 01 今天 02本周 03更早
			String fl = request.getParameter("fl");// 所属类型：01 投顾点金，02荐股，03分析
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			List<Tgdj> list = tgdjServiceI.getList(tgid, page, rows, sort, fl);
			for (int i = 0; i < list.size(); i++) {
				JSONObject j = new JSONObject();
				Tgdj t = list.get(i);
				j.put("tgdjid", t.getId());
				j.put("title", t.getTitle());
				j.put("content", t.getContent());
				j.put("image", t.getImage());
				j.put("tgid", t.getUserid());
				j.put("add_time", t.getAdd_time());
				j.put("gmcs", t.getGmcs());
				j.put("zan", t.getZan());
				j.put("tucao", t.getTucao());
				j.put("jf", t.getJf());
				j.put("fl", t.getType());
				j.put("zy", t.getZy());
				LoginUser loginuser = loginUserService.getLoginUser(t
						.getUserid());
				if (loginuser != null) {
					j.put("author", loginuser.getNickname());
				} else {
					j.put("author", "");
				}

				Double zan = Double.valueOf(Integer.valueOf(t.getZan()));
				Double tucao = Double.valueOf(Integer.valueOf(t.getTucao()));
				double hpl;
				if (zan != 0) {
					hpl = zan * 100 / (zan + tucao);
				} else {
					hpl = 0;
				}
				j.put("hpl", String.format("%.2f", hpl));
				j.put("zan", zan);// 点赞数
				if (StringUtils.isNotBlank(userid)) {
					int count = jfxhjlfServiceI.getCount(userid, t.getId(), "",
							"");
					if (count > 0) {
						j.put("isbuy", "yes");
					} else {
						j.put("isbuy", "no");
					}
				}
				arr.add(j);
			}
			json.put("errorMsg", "查询成功");
			json.put("errorCode", "0");
			json.put("total", tgdjServiceI.getCount(tgid, sort));
			json.put("rows", arr);
			return json;
		} else if (type.equals("tgdjDetail")) {// 投顾点金详情
			String userid = request.getParameter("userid");
			String tgdjid = request.getParameter("tgdjid");
			JSONObject j = new JSONObject();
			if (StringUtils.isBlank(userid)) {
				j.put("errorCode", "1");
				j.put("errorMsg", "用户ID为空");
				return j;
			}
			if (StringUtils.isBlank(tgdjid)) {
				j.put("errorCode", "2");
				j.put("errorMsg", "文章ID为空");
				return j;
			}
			Tgdj t = tgdjServiceI.get(tgdjid);

			if (t == null) {
				j.put("errorCode", "3");
				j.put("errorMsg", "无此文章");
				return j;
			}
			// 积分扣除
			int count = jfxhjlfServiceI.getCount(userid, t.getId(), "", "");
			if (count < 1) {
				LoginUser user = loginUserService.getLoginUser(userid);
				if (user == null) {
					j.put("errorCode", "4");
					j.put("errorMsg", "无此用户");
					return j;
				}
				int jifen = user.getJifen();
				if (jifen < Integer.valueOf(t.getJf())) {
					j.put("errorCode", "1");
					j.put("errorMsg", "积分不够");
					return j;
				}
				int syjf = jifen - Integer.valueOf(t.getJf());
				user.setJifen(syjf);
				loginUserService.update(user);

				Jfxhjl jj = new Jfxhjl();
				jj.setResaon("投顾点金文章查看");
				jj.setUserid(userid);
				jj.setSl("1");
				jj.setWzid(t.getId());
				jj.setSl("-" + t.getJf());
				jfxhjlfServiceI.add(jj);

				int gmcs = Integer.valueOf(t.getGmcs()) + 1;
				t.setGmcs(gmcs + "");
				tgdjServiceI.update(t);
			}
			j.put("id", t.getId());
			j.put("title", t.getTitle());
			j.put("content", t.getContent());
			j.put("image", t.getImage());
			j.put("tgid", t.getUserid());
			j.put("add_time", t.getAdd_time());
			j.put("gmcs", t.getGmcs());
			j.put("zan", t.getZan());
			j.put("fl", t.getType());
			j.put("tucao", t.getTucao());
			Tgsq ttt = tzgwServiceI.getInfo(t.getUserid());
			if (ttt != null) {
				j.put("author", ttt.getRealname());
			} else {
				j.put("author", "");
			}
			int zan = Integer.valueOf(t.getZan());
			int tucao = Integer.valueOf(t.getTucao());
			double hpl;
			if (zan != 0) {
				hpl = zan / (zan + tucao);
			} else {
				hpl = 0;
			}
			j.put("hpl", String.format("%.2f", hpl));

			j.put("errorCode", "0");
			j.put("errorMsg", "查询成功");
			return j;
		} else if (type.equals("jjcplb")) {// 基金产品列表
			String userid = request.getParameter("userid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<Jjcp> list_1 = jjcpServiceI.getList(page, rows);
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			for (int i = 0; i < list_1.size(); i++) {
				JSONObject j = new JSONObject();
				Jjcp cp = list_1.get(i);
				j.put("id", cp.getId());
				j.put("name", cp.getName());
				j.put("fmlogo", cp.getFmlogo());
				j.put("cplogo", cp.getCplogo());
				j.put("startdate", cp.getStartdate());
				j.put("enddate", cp.getEndate());
				j.put("jjmfje", cp.getJjmfje());
				j.put("fbjz", cp.getFbjz());
				j.put("dqjz", cp.getDqjz());
				j.put("jj", cp.getJj());
				j.put("tzfx", cp.getTzfx());
				j.put("gsjj", cp.getGsjj());

				// 根据userid返回是否购买过此产品
				if (StringUtils.isNotBlank(userid)) {
					int count = jjcpsqServiceI.getCount(userid);
					if (count > 0) {
						j.put("isbuy", "yes");
					} else {
						j.put("isbuy", "no");
					}
				}
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", jjcpServiceI.getCount());
			json.put("rows", arr);
			return json;
		} else if (type.equals("jjcpxq")) {// 基金产品详情
			String jjcpid = request.getParameter("jjcpid");// 基金产品id
			JSONObject j = new JSONObject();
			if (StringUtils.isBlank(jjcpid)) {
				j.put("errorCode", "1");
				j.put("errorMsg", "基金产品ID为空");
				return j;
			}
			j.put("errorCode", "0");
			j.put("errorMsg", "查询成功");
			Jjcp cp = jjcpServiceI.get(jjcpid);
			j.put("id", cp.getId());
			j.put("name", cp.getName());
			j.put("fmlogo", cp.getFmlogo());
			j.put("cplogo", cp.getCplogo());
			j.put("startdate", cp.getStartdate());
			j.put("enddate", cp.getEndate());
			j.put("jjmfje", cp.getJjmfje());
			j.put("fbjz", cp.getFbjz());
			j.put("dqjz", cp.getDqjz());
			j.put("jj", cp.getJj());
			j.put("tzfx", cp.getTzfx());
			j.put("gsjj", cp.getGsjj());
			return j;
		} else if (type.equals("jjcpsq01")) {// 基金产品初步申请
			String jjid = request.getParameter("jjcpid");
			String userid = request.getParameter("userid");
			String name = request.getParameter("username");
			String sfzh = request.getParameter("sfzh");
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(jjid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "基金产品ID为空");
				return json;
			}
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "2");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			if (StringUtils.isBlank(name)) {
				json.put("errorCode", "3");
				json.put("errorMsg", "申请人姓名为空");
				return json;
			}
			if (StringUtils.isBlank(sfzh)) {
				json.put("errorCode", "4");
				json.put("errorMsg", "申请人身份证号为空");
				return json;
			}
			int count = jjcpsqServiceI.getCount(userid);
			if (count > 0) {
				json.put("errorCode", "5");
				json.put("errorMsg", "已经申请该产品，不可重复申请");
				return json;
			}
			Jjcpsq sq = new Jjcpsq();
			sq.setJjid(jjid);
			Jjcp j = jjcpServiceI.get(jjid);
			sq.setJjname(j.getName());
			sq.setName(name);
			sq.setUserid(userid);
			sq.setSfzh(sfzh);
			jjcpsqServiceI.add(sq);

			json.put("errorCode", "0");
			json.put("errorMsg", "申请成功");
			return json;
		} else if (type.equals("jjcpsq02")) {// 基金产品申请汇款凭证提交
			String jjcpsqid = request.getParameter("jjcpsqid");// 申请单ID
			String name = request.getParameter("username");// 申请人姓名
			String sfzh = request.getParameter("sfzh");// 身份证号
			String hkbank = request.getParameter("hkbank");// 汇款银行
			String yhkh = request.getParameter("yhkh");// 银行卡号
			String hkimg = request.getParameter("hkimg");// 汇款凭证
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(jjcpsqid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "基金产品申请单ID为空");
				return json;
			}
			if (StringUtils.isBlank(name)) {
				json.put("errorCode", "2");
				json.put("errorMsg", "申请人姓名为空");
				return json;
			}
			if (StringUtils.isBlank(sfzh)) {
				json.put("errorCode", "3");
				json.put("errorMsg", "申请人身份证号为空");
				return json;
			}
			if (StringUtils.isBlank(hkbank)) {
				json.put("errorCode", "4");
				json.put("errorMsg", "汇款银行为空");
				return json;
			}
			if (StringUtils.isBlank(yhkh)) {
				json.put("errorCode", "5");
				json.put("errorMsg", "银行卡号为空");
				return json;
			}
			if (StringUtils.isBlank(hkimg)) {
				json.put("errorCode", "6");
				json.put("errorMsg", "汇款凭证为空");
				return json;
			}
			try {
				Jjcpsq sq = jjcpsqServiceI.get(jjcpsqid);
				sq.setName(name);
				sq.setSfzh(sfzh);
				sq.setHkbank(hkbank);
				sq.setYhkh(yhkh);
				sq.setHkimg(hkimg);
				jjcpsqServiceI.update(sq);
				json.put("errorCode", "0");
				json.put("errorMsg", "提交成功");
			} catch (Exception e) {
				json.put("errorCode", "7");
				json.put("errorMsg", "提交失败" + e.getMessage());
			}

			return json;
		} else if (type.equals("jjcpsqlb")) {// 基金产品申请列表
			String userid = request.getParameter("userid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");

			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			List<Jjcpsq> list_sq = jjcpsqServiceI.getList(userid, page, rows);
			for (int i = 0; i < list_sq.size(); i++) {
				JSONObject j = new JSONObject();
				Jjcpsq sq = list_sq.get(i);
				j.put("id", sq.getId());
				j.put("jjid", sq.getJjid());
				j.put("jjname", sq.getJjname());
				j.put("userid", sq.getUserid());
				j.put("username", sq.getName());
				j.put("sfzh", sq.getSfzh());
				j.put("hkbank", sq.getHkbank());
				j.put("yhkh", sq.getYhkh());
				j.put("hkimg", sq.getHkimg());
				j.put("status", sq.getStatus());
				j.put("lasttime", sq.getLasttime());
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", jjcpsqServiceI.getCount(userid));
			json.put("rows", arr);
			return json;
		} else if (type.equals("jjcpsqxq")) {// 基金产品申请详情
			String sqid = request.getParameter("jjcpsqid");// 申请单ID
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(sqid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "基金产品申请单ID为空");
				return json;
			}
			Jjcpsq sq = jjcpsqServiceI.get(sqid);
			if (sq != null) {
				json.put("id", sq.getId());
				json.put("jjid", sq.getJjid());
				json.put("jjname", sq.getJjname());
				json.put("userid", sq.getUserid());
				json.put("username", sq.getName());
				json.put("sfzh", sq.getSfzh());
				json.put("hkbank", sq.getHkbank());
				json.put("yhkh", sq.getYhkh());
				json.put("hkimg", sq.getHkimg());
				json.put("status", sq.getStatus());
				json.put("lasttime", sq.getLasttime());
			} else {
				json.put("errorCode", "2");
				json.put("errorMsg", "无此申请");
			}
			return json;
		} else if (type.equals("jfdjb")) {// 积分兑换金币
			String userid = request.getParameter("userid");
			String jbsl = request.getParameter("jbsl");
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			if (StringUtils.isBlank(jbsl)) {
				json.put("errorCode", "2");
				json.put("errorMsg", "请输入需要兑换的金币数量");
				return json;
			}
			IntegralConfig con = integralConfigServiceI.get();
			String dhl = con.getJfdjb();
			int sxjf = Integer.valueOf(dhl) * Integer.valueOf(jbsl);
			LoginUser user = loginUserService.getLoginUser(userid);
			int jf = user.getJifen();
			if (jf < sxjf) {
				json.put("errorCode", "3");
				json.put("errorMsg", "积分数量不够");
				return json;
			}
			user.setJifen(jf - sxjf);
			int jb = Integer.valueOf(user.getPtsjb()) + Integer.valueOf(jbsl);
			user.setPtsjb(jb + "");
			loginUserService.saveScore(null, "消费积分", user, "积分兑换金币");
			loginUserService.update(user);
			Jfxhjl jj = new Jfxhjl();
			jj.setResaon("积分兑换金币");
			jj.setUserid(userid);
			jj.setSl("-" + sxjf);
			jj.setWzid("");
			jfxhjlfServiceI.add(jj);
			json.put("errorCode", "0");
			json.put("errorMsg", "兑换成功");
			return json;
		} else if (type.equals("plzan")) {// 对评论进行点赞或者吐槽
			String plid = request.getParameter("plid");// 评论ID
			String zan = request.getParameter("zan");// 1赞 0吐槽
			String userid = request.getParameter("userid");// 用户id
			Tpinglun t = pinglunServiceI.get(plid);
			JSONObject json = new JSONObject();
			if (t == null) {
				json.put("errorCode", "1");
				json.put("errorMsg", "无此评论信息");
				return json;
			} else {
				if (zan.equals("1")) {
					int z = Integer.valueOf(t.getZan()) + 1;
					t.setZan(z + "");
					json.put("errorCode", "0");
					json.put("errorMsg", "点赞成功");
				} else {
					int cao = Integer.valueOf(t.getTucao()) + 1;
					t.setTucao(cao + "");
					json.put("errorCode", "0");
					json.put("errorMsg", "吐槽成功");
				}
				pinglunServiceI.update1(t);
				return json;
			}

		} else if (type.equals("plpladd")) {// 对评论进行评论
			String userid = request.getParameter("userid");
			String plid = request.getParameter("plid");
			String content = request.getParameter("content");
			JSONObject json = new JSONObject();
			if (!StringUtils.isNotBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			if (!StringUtils.isNotBlank(plid)) {
				json.put("errorCode", "2");
				json.put("errorMsg", "评论ID为空");
				return json;
			}
			if (!StringUtils.isNotBlank(content)) {
				json.put("errorCode", "5");
				json.put("errorMsg", "评论内容为空");
				return json;
			}
			LoginUser user = loginUserService.getLoginUser(userid);
			if (user == null) {
				json.put("errorCode", "3");
				json.put("errorMsg", "无此用户");
				return json;
			}

			Tpinglun t = pinglunServiceI.get(plid);
			if (t == null) {
				json.put("errorCode", "4");
				json.put("errorMsg", "无此评论");
				return json;
			}
			Tpinglunb tb = new Tpinglunb();
			tb.setPlid(plid);
			tb.setUserid(userid);
			tb.setContent(content);
			pinglunbServiceI.add(tb);
			json.put("errorCode", "0");
			json.put("errorMsg", "添加成功");
			return json;
		} else if (type.equals("plplcx")) {// 针对评论的评论查询
			String plid = request.getParameter("plid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			if (!StringUtils.isNotBlank(plid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "评论ID为空");
				return json;
			}
			List<Tpinglunb> list = pinglunbServiceI.getList(plid, page, rows);
			for (int i = 0; i < list.size(); i++) {
				Tpinglunb tb = list.get(i);
				JSONObject j = new JSONObject();
				j.put("id", tb.getId());
				j.put("plid", tb.getPlid());
				j.put("userid", tb.getUserid());
				LoginUser user = loginUserService.getLoginUser(tb.getUserid());
				j.put("nickname", user.getNickname());
				j.put("usertx", user.getTx());
				j.put("content", tb.getContent());
				j.put("pltime", tb.getTime());
				j.put("zan", tb.getZan());
				j.put("tucao", tb.getTucao());
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("total", pinglunbServiceI.getCount(plid));
			json.put("rows", arr);
			return json;
		} else if (type.equals("userjb")) {// 获取用户普通赛金币和赛季赛金币以及其他基本信息
			JSONObject json = new JSONObject();
			DecimalFormat df = new DecimalFormat("#.00");

			String userid = request.getParameter("userid");
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			LoginUser user = loginUserService.getLoginUser(userid);
			if (user == null) {
				json.put("errorCode", "2");
				json.put("errorMsg", "无此用户");
				return json;
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			if (StringUtils.isNotBlank(user.getPtsjb())) {
				if (user.getPtsjb().equals("0.0")) {
					json.put("ptsjb", "0");
				} else {
					Double ptsjb = Double.parseDouble(user.getPtsjb());
					BigDecimal ptbd = new BigDecimal(ptsjb);
					ptbd.setScale(2, BigDecimal.ROUND_HALF_UP).doubleValue(); // 保留小数点后两位且四舍五入
					json.put("ptsjb", df.format(ptbd));
				}
			} else {
				json.put("ptsjb", "0");
			}
			if (StringUtils.isNotBlank(user.getSjsjb())) {
				if (user.getSjsjb().equals("0.0")) {
					json.put("sjsjb", "0");
				} else {
					Double sjsjb = Double.parseDouble(user.getSjsjb());
					BigDecimal sjbd = new BigDecimal(sjsjb);
					sjbd.setScale(2, BigDecimal.ROUND_HALF_UP).doubleValue(); // 保留小数点后两位且四舍五入
					json.put("sjsjb", df.format(sjbd));
				}
			} else {
				json.put("sjsjb", "0");
			}
			json.put("userid", user.getId());
			json.put("username", user.getName());
			json.put("jf", user.getJifen());
			json.put("nickname", user.getNickname());
			json.put("tx", user.getTx());
			return json;
		} else if (type.equals("zhmm")) {// 找回密码
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid");
			String newpwd = request.getParameter("newpwd");
			String oldpwd = request.getParameter("oldpwd");
			String xglx = request.getParameter("xglx");// 修改类型：0：找回密码(注：userid
														// 传值为电话phone)，1：修改密码
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			if (StringUtils.isBlank(newpwd)) {
				json.put("errorCode", "2");
				json.put("errorMsg", "新密码为空");
				return json;
			}
			LoginUser user = null;
			if (xglx.equals("0")) {// 0：找回密码
				user = loginUserService.getUserByPhone(userid);
			} else if (xglx.equals("1")) {// 1：修改密码
				user = loginUserService.getLoginUser(userid);
			}
			if (user == null) {
				json.put("errorCode", "3");
				json.put("errorMsg", "无此用户");
				return json;
			}
			if (StringUtils.isNotBlank(oldpwd)) {
				String opwd = MD5Util.md5(oldpwd);
				if (!opwd.equals(user.getPwd())) {
					json.put("errorCode", "4");
					json.put("errorMsg", "原密码不正确");
					return json;
				}
			}
			user.setPwd(MD5Util.md5(newpwd));
			loginUserService.update(user);
			json.put("errorCode", "0");
			json.put("errorMsg", "操作成功");
			return json;

		}else if (type.equals("myCareList")) {//关注的投资顾问列表
			DecimalFormat df = new DecimalFormat("#.#");
			String userid = request.getParameter("userid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			MyCare myCare = new MyCare();
			myCare.setUserId(userid);
			int sizeAll=myCareServiceI.mycareCount(userid);
			List<MyCare> list_mycare = this.myCareServiceI.myCareList(myCare,
					page, rows);
			for (int i = 0; i < list_mycare.size(); i++) {
				JSONObject j = new JSONObject();
				MyCare m = list_mycare.get(i);
				Tgsq tgsq = this.tzgwServiceI.getInfo(m.getConcernedId());
				if (tgsq == null) {
					json.put("errorCode", "2");
					json.put("errorMsg", "无此投资顾问");
					return json;
				}
				Tgshow t = this.tzgwServiceI.getTgShowDetail(tgsq.getUserid());
				j.put("tgid", tgsq.getUserid());
				j.put("szjg", t.getSzjg());
				j.put("cyzgzh", t.getCyzgzh());
				j.put("tx", t.getTx());
				// j.put("name", t.getName());
				LoginUser loginuser = loginUserService
						.getUser(tgsq.getUserid());
				if (loginuser != null) {
					j.put("name", loginuser.getNickname());
				} else {
					j.put("name", "");
				}
				j.put("fss", t.getFss());
				j.put("sjspm", t.getSjspm());
				j.put("sjsyll", t.getSjsyll());
				j.put("ptsjb", t.getJbsl());
				j.put("ptspm", t.getPtspm());
				j.put("ptsyll", t.getPtsyll());
				j.put("bzxcs", t.getBzxcs());
				j.put("fss", t.getFss());
				j.put("jdcs", t.getJdcs());
				j.put("hpl", t.getHpl());
				j.put("hyd", t.getHyd());
				j.put("ywbdmyd", t.getYwbdmyd());
				// 赛季赛股票信息
				List<Mncp> list_mncp_1 = mncpServiceI.getCjList(
						tgsq.getUserid(), "1");
				if (list_mncp_1.size() > 0) {
					j.put("sjsgp", list_mncp_1.get(0));
				} else {
					j.put("sjsgp", new Mncp());
				}
				// 普通赛股票信息
				List<Mncp> list_mncp_0 = mncpServiceI.getCjList(
						tgsq.getUserid(), "0");
				if (list_mncp_0.size() > 0) {
					j.put("ptsgp", list_mncp_0.get(0));
				} else {
					j.put("ptsgp", new Mncp());
				}
				// 文章
				List<Tgdj> list_tgdj = tgdjServiceI.getList(tgsq.getUserid(),
						"1", "1", "wj", "");
				if (list_tgdj.size() > 0) {
					Tgdj tgdj = list_tgdj.get(0);
					Double zan = 0.0;
					Double tc = 0.0;
					if (StringUtils.isNotBlank(tgdj.getZan())) {
						zan = Double.parseDouble(tgdj.getZan());
					}
					if (StringUtils.isNotBlank(tgdj.getTucao())) {
						tc = Double.parseDouble(tgdj.getTucao());
					}
					Double zs = zan + tc;
					if (zs == 0.0) {
						j.put("wzhpl", "0");
					} else {
						Double wzhpl = zan * 100 / zs;
						BigDecimal wzhplbd = new BigDecimal(wzhpl);
						wzhplbd.setScale(1, BigDecimal.ROUND_HALF_UP)
								.doubleValue();
						j.put("wzhpl", df.format(wzhplbd));
					}
					j.put("wz", tgdj);
					j.put("zy", tgdj.getZy());
				} else {
					Tgdj tgdj = new Tgdj();
					j.put("wz", tgdj);
					j.put("wzhpl", "0");
				}
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("rows", arr);
			//json.put("total", Integer.valueOf(list_mycare.size()));
			json.put("total",sizeAll);
			return json;
		} else if (type.equals("getUserInfo")) {
			String userid = request.getParameter("userid");
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			LoginUser user = loginUserService.getLoginUser(userid);
			if (user == null) {
				json.put("errorCode", "2");
				json.put("errorMsg", "无此用户");
				return json;
			} else {
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("userinfo", user);
			}
			return json;
		} else if (type.equals("tgdjdz")) {// 投顾点金点赞
			JSONObject json = new JSONObject();
			String tgdjid = request.getParameter("tgdjid");// 晒出的文章ID
			String zan = request.getParameter("zan");// 1--赞 -1吐槽
			String userid = request.getParameter("userid");// 用户ID
			try {
				Tgdj s = tgdjServiceI.get(tgdjid);
				if (s == null) {
					json.put("errorCode", "3");
					json.put("errorMsg", "无此文章");
				} else {
					if (zan.equals("1")) {
						String z = s.getZan();
						int z1 = Integer.valueOf(z) + 1;
						s.setZan(z1 + "");
					} else if (zan.equals("-1")) {
						String t = s.getTucao();
						int t1 = Integer.valueOf(t) + 1;
						s.setTucao(t1 + "");
					} else {
						json.put("errorCode", "2");
						json.put("errorMsg", "参数设置错误");
					}
					tgdjServiceI.update(s);
					if (zan.equals("1")) {
						IntegralConfig con = integralConfigServiceI.get();
						String zanjf = con.getZan();
						LoginUser user1 = loginUserService.getLoginUser(userid);
						int jf = user1.getJifen();
						if (jf < Integer.valueOf(zanjf)) {
							json.put("errorCode", "4");
							json.put("errorMsg", "积分不够");
						} else {
							user1.setJifen(jf - Integer.valueOf(zanjf));
							

							Jfxhjl jj = new Jfxhjl();
							jj.setResaon("点赞");
							jj.setUserid(user1.getId());
							jj.setSl("-" + zanjf);
							jj.setWzid(s.getId());
							jfxhjlfServiceI.add(jj);

							String zzid = s.getUserid();
							if (!"0".equals(zzid)) {
								LoginUser user2 = loginUserService
										.getLoginUser(zzid);
								String bzjf = con.getBzan();
								user2.setJifen(user2.getJifen()
										+ Integer.valueOf(bzjf));
								loginUserService.saveScore(user2, "被打赏", user1, "点赞");
								Jfxhjl jj1 = new Jfxhjl();
								jj1.setResaon("被点赞");
								jj1.setUserid(user2.getId());
								jj1.setSl("+" + bzjf);
								jj1.setWzid(s.getId());
								jfxhjlfServiceI.add(jj1);
							}else{
								loginUserService.saveScore(null, "打赏平台", user1, "点赞");
								loginUserService.update(user1);
							}

							json.put("errorCode", "0");
							json.put("errorMsg", "操作成功");

						}
					} else {
						IntegralConfig con = integralConfigServiceI.get();
						String zanjf = con.getTucao();
						LoginUser user1 = loginUserService.getLoginUser(userid);
						int jf = user1.getJifen();
						if (jf < Integer.valueOf(zanjf)) {
							json.put("errorCode", "4");
							json.put("errorMsg", "积分不够");
						} else {
							user1.setJifen(jf - Integer.valueOf(zanjf));
							String zzid = s.getUserid();
							LoginUser user2 = loginUserService
									.getLoginUser(zzid);
							if(user2!=null){
								String bzjf = con.getBtucao();
								user2.setJifen(user2.getJifen()
										- Integer.valueOf(bzjf));
								loginUserService.saveScore(user2, "被打赏", user1, "吐槽");
								loginUserService.update(user2);
								Jfxhjl jj1 = new Jfxhjl();
								jj1.setResaon("被吐槽");
								jj1.setUserid(user2.getId());
								jj1.setSl("+" + bzjf);
								jj1.setWzid(s.getId());
								jfxhjlfServiceI.add(jj1);
							}else{
								loginUserService.saveScore(null, "打赏平台", user1, "吐槽");
							}
							
							
							loginUserService.update(user1);

							Jfxhjl jj = new Jfxhjl();
							jj.setResaon("吐槽");
							jj.setUserid(user1.getId());
							jj.setSl("-" + zanjf);
							jj.setWzid(s.getId());
							jfxhjlfServiceI.add(jj);
							
							
							
							json.put("errorCode", "0");
							json.put("errorMsg", "操作成功");

						}
					}
				}
			} catch (Exception e) {
				json.put("errorCode", "1");
				json.put("errorMsg", "操作失败" + e.getMessage());
			}
			return json;

		} else if (type.equals("wjmm")) {// 忘记密码
			String username = request.getParameter("username");
			String newpwd = request.getParameter("newpwd");
			String phone = request.getParameter("phone");
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(username)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户名为空");
				return json;
			}
			if (StringUtils.isBlank(phone)) {
				json.put("errorCode", "2");
				json.put("errorMsg", "电话号码为空");
				return json;
			}
			if (StringUtils.isBlank(newpwd)) {
				json.put("errorCode", "3");
				json.put("errorMsg", "新密码为空");
				return json;
			}
			LoginUser user = loginUserService.getUser(username, phone);
			if (user == null) {
				json.put("errorCode", "4");
				json.put("errorMsg", "无此用户");
				return json;
			} else {
				user.setPwd(MD5Util.md5(newpwd));
				loginUserService.update(user);
				json.put("errorCode", "0");
				json.put("errorMsg", "修改成功");
				return json;
			}
		} else if (type.equals("updateUserInfo")) {// 修改用户信息
			String images = request.getParameter("images");
			String userid = request.getParameter("userid");
			String nickname = request.getParameter("nickname");
			String gxqm = request.getParameter("gxqm");
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "用户ID为空");
				return json;
			}

			LoginUser user = loginUserService.getLoginUser(userid);
			if (user == null) {
				json.put("errorCode", "2");
				json.put("errorMsg", "无此用户");
				return json;
			}
			if (StringUtils.isNotBlank(nickname)
					&& user.getNickname().equals(nickname)) {
				json.put("errorCode", "3");
				json.put("errorMsg", "该昵称已被占用！");
				return json;

			} else if (StringUtils.isNotBlank(nickname)
					&& !user.getNickname().equals(nickname)) {
				user.setNickname(nickname);
			}
			if (StringUtils.isNotBlank(images)) {
				user.setTx(images);
			}

			if (StringUtils.isNotBlank(gxqm)) {
				user.setGxqm(gxqm);
			}
			loginUserService.update(user);
			json.put("errorCode", "0");
			json.put("errorMsg", "修改成功");
			return json;
		} else if (type.equals("wtdelete")) {// 问题删除
			String wtid = request.getParameter("wtid");
			String userid = request.getParameter("userid");
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(wtid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "问题ID为空");
				return json;
			}
			if (StringUtils.isBlank(userid)) {
				json.put("errorCode", "2");
				json.put("errorMsg", "用户ID为空");
				return json;
			}
			AnswerQuestions aq = answerQuestionsServiceI.get(wtid);
			if (aq == null) {
				json.put("errorCode", "3");
				json.put("errorMsg", "无此问题");
				return json;
			}
			if (!aq.getUserId().equals(userid)) {
				json.put("errorCode", "4");
				json.put("errorMsg", "您没有权限删除");
				return json;
			}
			answerQuestionsServiceI.delete(wtid);
			json.put("errorCode", "0");
			json.put("errorMsg", "删除成功");
			return json;
		} else if (type.equals("wtcf")) {// 问题重发
			String wtid = request.getParameter("wtid");
			JSONObject json = new JSONObject();
			if (StringUtils.isBlank(wtid)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "问题ID为空");
				return json;
			}
			AnswerQuestions aq = answerQuestionsServiceI.get(wtid);

			if (aq == null) {
				json.put("errorCode", "2");
				json.put("errorMsg", "无此问题");
				return json;
			}
			String fbtime = aq.getReleaseTime();
			String now = TimeUtils.getTime("yyyy-MM-dd HH:mm:ss");
			long jg = TimeBj.getBetween(fbtime, now, TimeBj.YYYYMMDDHHMMSS,
					TimeBj.SECOND_RETURN);
			if (jg < 3600) {
				json.put("errorCode", "3");
				json.put("errorMsg", "短时间内重复重发");
				return json;
			}
			aq.setReleaseTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
			answerQuestionsServiceI.edit(aq);
			json.put("errorCode", "0");
			json.put("errorMsg", "操作成功");
			return json;
		} else if (type.equals("gpzidian")) {// 股票字典
			JSONObject j = new JSONObject();
			JSONArray json = JSONArray.parseArray(zidian);
			j.put("errorCode", "0");
			j.put("errorMsg", "查询成功");
			j.put("zidian", json);
			return j;
		} else if (type.equals("dashang")) {// 打赏
			JSONObject j = new JSONObject();
			String userid = request.getParameter("userid"); // 必传
			String bdsuserid = request.getParameter("bdsuserid"); // 传值后：代表真实用户；不传值：代表官方后台
			String jfsl = request.getParameter("jfsl");
			if (StringUtils.isBlank(userid)) {
				j.put("errorCode", "1");
				j.put("errorMsg", "用户ID为空");
				return j;
			}
			if (StringUtils.isBlank(bdsuserid)) {
				j.put("errorCode", "2");
				j.put("errorMsg", "被打赏用户ID为空");
				return j;
			}
			if (StringUtils.isBlank(jfsl)) {
				j.put("errorCode", "3");
				j.put("errorMsg", "打赏的积分为空");
				return j;
			} else {
				int a = Integer.valueOf(jfsl);
				if (a <= 0) {
					j.put("errorCode", "4");
					j.put("errorMsg", "打赏的积分设置错误");
					return j;
				}
			}
			LoginUser user = loginUserService.getLoginUser(userid);
			if (user == null) {
				j.put("errorCode", "5");
				j.put("errorMsg", "用户不存在");
				return j;
			} else {
				int jf = user.getJifen();
				if (jf < Integer.valueOf(jfsl)) {
					j.put("errorCode", "6");
					j.put("errorMsg", "积分不够");
					return j;
				} else {
					LoginUser user_1 = loginUserService.getLoginUser(bdsuserid);
					if (user_1 == null) {
						user.setJifen(jf - Integer.valueOf(jfsl));
						// user_1.setJifen(user_1.getJifen()+Integer.valueOf(jfsl));
						Jfxhjl jj1 = new Jfxhjl();
						jj1.setResaon("打赏文章");
						jj1.setUserid(user.getId());
						jj1.setSl("-" + jfsl);
						jj1.setWzid("GFWZ");// 官方文章
						jfxhjlfServiceI.add(jj1);
						
						Jfxhjl jj2 = new Jfxhjl();
						jj2.setResaon("打赏");
						jj2.setUserid("GUANGFANGID");
						jj2.setSl("+" + jfsl);
						jj2.setWzid(user.getId());
						jfxhjlfServiceI.add(jj2);
						loginUserService.saveScore(null, "打赏平台",user, "文章打赏平台");
						// loginUserService.update(user_1);
						loginUserService.update(user);
						j.put("errorCode", "0");
						j.put("errorMsg", "操作成功");

						return j;
					} else {
						user.setJifen(jf - Integer.valueOf(jfsl));
						user_1.setJifen(user_1.getJifen()
								+ Integer.valueOf(jfsl));
						Jfxhjl jj1 = new Jfxhjl();
						jj1.setResaon("打赏");
						jj1.setUserid(user.getId());
						jj1.setSl("-" + jfsl);
						jj1.setWzid(user_1.getId());
						jfxhjlfServiceI.add(jj1);
						loginUserService.saveScore( user, "被打赏",user_1, "用户对用户之间的打赏");
						
						Jfxhjl jj2 = new Jfxhjl();
						jj2.setResaon("打赏");
						jj2.setUserid(user_1.getId());
						jj2.setSl("+" + jfsl);
						jj2.setWzid(user.getId());
						jfxhjlfServiceI.add(jj2);
							
						loginUserService.update(user_1);
						loginUserService.update(user);
						j.put("errorCode", "0");
						j.put("errorMsg", "操作成功");
						return j;
					}
				}
			}

		} else if (type.equals("realTimeQAadd")) {// 实时问答新增
			JSONObject j = new JSONObject();
			String userid = request.getParameter("userid");
			String content = request.getParameter("content");
			if (StringUtils.isBlank(content)) {
				j.put("errorCode", "1");
				j.put("errorMsg", "发表内容为空");
				return j;
			}
			if (StringUtils.isBlank(userid)) {
				j.put("errorCode", "2");
				j.put("errorMsg", "用户ID为空");
				return j;
			}

			LoginUser loginUser = loginUserService.getLoginUser(userid);
			if (loginUser == null) {
				j.put("errorCode", "3");
				j.put("errorMsg", "用户不存在");
				return j;
			}

			String tx = loginUser.getTx();
			String username = loginUser.getNickname();
			RealTimeQA qa = new RealTimeQA();
			qa.setUserid(userid);
			qa.setUsername(username);
			qa.setUsertx(tx);
			qa.setContent(content);
			realTimeQAServiceI.add(qa);
			j.put("errorCode", "0");
			j.put("errorMsg", "发布成功");
			return j;
		} else if (type.equals("realTimeList")) {// 实时问答列表
			JSONArray arr = new JSONArray();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String userid = request.getParameter("userid");
			JSONObject j = new JSONObject();
			if (StringUtils.isBlank(userid)) {
				j.put("errorCode", "1");
				j.put("errorMsg", "用户ID为空");
				return j;
			}
			LoginUser loginUser = loginUserService.getLoginUser(userid);
			if (loginUser == null) {
				j.put("errorCode", "1");
				j.put("errorMsg", "用户不存在");
				return j;
			}
			String username = loginUser.getNickname();
			List<RealTimeQA> list = realTimeQAServiceI.getQAList(page, rows);
			for (int i = 0; i < list.size(); i++) {
				JSONObject j1 = new JSONObject();
				RealTimeQA q = list.get(i);
				j1.put("id", q.getId());
				j1.put("userid", q.getUserid());
				j1.put("username", q.getUsername());
				j1.put("usertx", q.getUsertx());
				j1.put("addtime", q.getAddtime());
				j1.put("content", q.getContent());
				if (username.equals(q.getUsername())) {
					j1.put("isOwn", "1");
				} else {
					j1.put("isOwn", 0);
				}
				arr.add(j1);
			}

			j.put("errorCode", "0");
			j.put("errorMsg", "查询成功");
			j.put("rows", arr);
			return j;
		} else if (type.equals("jrsctime")) {// 证券公司时间表，今日
			JSONObject j = new JSONObject();
			Sctime sc = sctimeServiceI.get();
			j.put("errorCode", "0");
			j.put("errorMsg", "查询成功");
			j.put("gsmc", sc.getGsmc());
			j.put("starttime", sc.getStarttime());
			j.put("endtime", sc.getEndtime());
			j.put("gsid", sc.getGsid());
			return j;
		} else if (type.equals("myQuestionList")) {// 投资顾问查询对我提问的问题列表
			String tgid = request.getParameter("tgid");
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String fenLei = request.getParameter("fenLei");// 1:推荐;2:A股;3:期货;4:基金;5:黄金外汇;6:美股;7:港股;8:保险;8:其他理财;
			JSONObject j = new JSONObject();
			JSONArray arr = new JSONArray();
			AnswerQuestions a = new AnswerQuestions();
			if (StringUtils.isNotBlank(tgid)) {
				a.setTzgwId(tgid);
			} else {
				j.put("errorCode", "1");
				j.put("errorMsg", "投资顾问ID为空");
				return j;
			}
			a.setFenLei(fenLei);
			List<AnswerQuestions> list = answerQuestionsServiceI
					.answerQuestionsList(a, page, rows);
			for (int i = 0; i < list.size(); i++) {
				AnswerQuestions aaa = list.get(i);
				JSONObject json = new JSONObject();
				json.put("id", aaa.getId());
				json.put("title", aaa.getTitle());
				json.put("userId", aaa.getUserId());
				json.put("userName", aaa.getUserName());
				json.put("releaseTime", aaa.getReleaseTime());
				json.put("state", aaa.getState());
				json.put("deleteReason", aaa.getDeleteReason());
				json.put("releaseContent", aaa.getReleaseContent());
				json.put("releaseIp", aaa.getReleaseIp());
				json.put("tzgwId", aaa.getTzgwId());
				json.put("fenLei", aaa.getFenLei());
				json.put("releaseJf", aaa.getReleaseJf()); // 发布积分
				arr.add(json);
			}
			j.put("errorCode", "0");
			j.put("errorMsg", "查询成功");
			j.put("rows", arr);
			j.put("total", answerQuestionsServiceI.getCount(a));
			return j;

		} else if (type.equals("tgwdsz")) {// 投资顾问问答设置
			String tgid = request.getParameter("tgid");
			String jf = request.getParameter("jf");
			String sl = request.getParameter("sl");
			JSONObject j = new JSONObject();

			if (StringUtils.isBlank(tgid)) {
				j.put("errorCode", "1");
				j.put("errorMsg", "投资顾问ID为空");
				return j;
			}
			if (StringUtils.isBlank(jf)) {
				j.put("errorCode", "2");
				j.put("errorMsg", "提问积分为空");
				return j;
			}
			if (StringUtils.isBlank(sl)) {
				j.put("errorCode", "3");
				j.put("errorMsg", "每日被提问最大数量为空");
				return j;
			}

			Tgwdsz t = new Tgwdsz();
			t.setJf(jf);
			t.setSl(sl);
			t.setTgid(tgid);
			tgwdszServiceI.add(t);
			j.put("errorCode", "0");
			j.put("errorMsg", "操作成功");
			return j;

		} else if (type.equals("rmgpss")) {// 热门股票搜索rmgpss；ps：如果存在该条数据，setSearchTimes+1;如果不存在改数据，则新加数据
			JSONObject json = new JSONObject();
			String chat = request.getParameter("chat"); // 股票标识符 ps:sh，sz
			String zqdm = request.getParameter("zqdm");
			String zqname = request.getParameter("zqname");
			Rmgp rm = rmgpServiceI.getRmgp(zqdm);
			if (rm != null) {
				rmgpServiceI.edit(rm);
			} else {
				Rmgp newrm = new Rmgp();
				newrm.setChat(chat);
				newrm.setCode(zqdm);
				newrm.setName(zqname);
				newrm.setSearchTimes(1);
				rmgpServiceI.add(newrm);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "检索成功");
			return json;
		} else if (type.equals("rmgpList")) {// 热门股票点击量list
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			List<Rmgp> list = rmgpServiceI.getList();
			if (list.size() > 0 && list.size() <= 10) {
				for (int i = 0; i < list.size(); i++) {
					Rmgp rmgp = list.get(i);
					JSONObject j = new JSONObject();
					j.put("chat", rmgp.getChat());
					j.put("code", rmgp.getCode());
					j.put("zqname", rmgp.getName());
					j.put("searchTimes", rmgp.getSearchTimes());
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("rows", arr);
				json.put("total", list.size());
			} else if (list.size() > 10) {
				for (int i = 0; i < 10; i++) {
					Rmgp rmgp = list.get(i);
					JSONObject j = new JSONObject();
					j.put("chat", rmgp.getChat());
					j.put("code", rmgp.getCode());
					j.put("zqname", rmgp.getName());
					j.put("searchTimes", rmgp.getSearchTimes());
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("rows", arr);
				json.put("total", list.size());
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "没有热门股票数据");

			}
			return json;

		}/*
		 * else if(type.equals("khsyjs")){//客户收益结算接口khsyjs JSONObject json = new
		 * JSONObject(); String userid = request.getParameter("userid"); String
		 * timePoint = request.getParameter("timePoint");//01：当前收益；02：本周收益；03
		 * ：本月收益 String sjsid = request.getParameter("sjsid");//当前最新赛季赛id String
		 * zcze = null; String sjszc = null; String nowzcze=null; String
		 * nowsjszc = null; Mrzcjs oldmrzc = mrzcjsServiceI.getMrzc(userid,
		 * timePoint, sjsid); //对比数据 Mrzcjs nowmrzc =
		 * mrzcjsServiceI.getNowMrzc(userid, sjsid); //昨日资产结算 if(nowmrzc !=
		 * null){ nowzcze = nowmrzc.getZczl(); nowsjszc = nowmrzc.getSjzczl();
		 * if(oldmrzc!=null){ zcze = oldmrzc.getZczl(); //普通赛资产总额 sjszc =
		 * oldmrzc.getSjzczl();//赛季赛资产 Double ptssy =
		 * (Double.parseDouble(nowzcze) - Double.parseDouble(zcze)
		 * )/Double.parseDouble(zcze); //普通赛收益 Double sjssy =
		 * (Double.parseDouble(nowsjszc) - Double.parseDouble(sjszc)
		 * )/Double.parseDouble(sjszc);//普赛季赛收益 json.put("userid",userid );
		 * json.put("ptssy", ptssy); json.put("sjssy", sjssy);
		 * json.put("timePoint", timePoint); }else{ zcze ="0"; sjszc ="0"; }
		 * 
		 * 
		 * }else{ json.put("errorCode", "1"); json.put("errorMsg", "没有收益！"); }
		 * 
		 * }
		 */else if (type.equals("wzTop2")) {// 文章最新的2篇文章
			String userid = request.getParameter("userid");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			List<Tgxt> list_gxt = gxtServiceI.getTop2();
			for (int i = 0; i < list_gxt.size(); i++) {
				Tgxt t = list_gxt.get(i);
				JSONObject j = new JSONObject();
				j.put("id", t.getId());
				j.put("gxttitel", t.getGxttitel());
				j.put("gxtfl", t.getGxtfl());
				j.put("gxtfbtime", t.getGxtfbtime());
				j.put("gxtfbz", t.getGxtfbz());
				j.put("gxtnr", t.getGxtnr());
				j.put("images", t.getImage());
				j.put("gxtzy", t.getGxtzy());// 股学堂摘要
				j.put("plsl", pinglunServiceI.getCount(t.getId()));

				j.put("lanmu", "gxt");
				if (StringUtils.isNotBlank(userid)) {
					List<Jfxhjl> list_jf = jfxhjlfServiceI.getList(userid,
							t.getId(), "", "", "", "");
					if (list_jf.size() > 0) {
						j.put("isbuy", "yes");
					} else {
						j.put("isbuy", "no");
					}
				}
				arr.add(j);
			}

			List<Tgsdz> list_gqb = gqbServiceI.getTop2();
			for (int i = 0; i < list_gqb.size(); i++) {
				JSONObject j = new JSONObject();
				Tgsdz t = list_gqb.get(i);
				j.put("id", t.getId());
				j.put("tgname", t.getTgname());
				j.put("dztitel", t.getDztitel());
				j.put("dzfbtime", t.getDzfbtime());
				j.put("dznr", t.getDznr());
				j.put("dzsqdj", t.getDzsqdj());
				j.put("dzjfxh", t.getDzjfxh());
				j.put("dzgmcs", t.getDzgmcs());
				j.put("dzbzcs", t.getDzbzcs());
				j.put("dzbtccs", t.getDzbtccs());
				j.put("qublb", t.getQublb());
				j.put("plsl", pinglunServiceI.getCount(t.getId()));
				j.put("images", t.getImages());
				j.put("gqbzy", t.getGqbzy());// 股趣吧摘要
				j.put("lanmu", "gqb");
				if (StringUtils.isNotBlank(userid)) {
					List<Jfxhjl> list_jf = jfxhjlfServiceI.getList(userid,
							t.getId(), "", "", "", "");
					if (list_jf.size() > 0) {
						j.put("isbuy", "yes");
					} else {
						j.put("isbuy", "no");
					}

				}
				arr.add(j);
			}

			List<TxwxGl> list_xwx = xwxServiceI.getTop2();
			for (int i = 0; i < list_xwx.size(); i++) {
				JSONObject j = new JSONObject();
				TxwxGl t = list_xwx.get(i);
				j.put("id", t.getId());
				j.put("xwtitel", t.getXwtitel());
				j.put("xwfbz", t.getXwfbz());
				j.put("xwfbfl", t.getXwfbfl());
				j.put("xwfbtime", t.getXwfbtime());
				j.put("xwnr", t.getXwnr());
				j.put("xwsqdj", t.getXwsqdj());
				j.put("xwjfxh", t.getXwjfxh());
				j.put("xwgmcs", t.getXwgmcs());
				j.put("xwbzcs", t.getXwbtccs());
				j.put("xwbtccs", t.getXwbtccs());
				j.put("czip", t.getCzip());
				j.put("czry", t.getCzry());
				j.put("xwtjtime", t.getXwtjtime());
				j.put("images", t.getImage());
				j.put("xwzy", t.getXwzy());// 新闻线新闻摘要
				j.put("plsl", pinglunServiceI.getCount(t.getId()));
				j.put("lanmu", "xwx");
				if (StringUtils.isNotBlank(userid)) {
					List<Jfxhjl> list_jf = jfxhjlfServiceI.getList(userid,
							t.getId(), "", "", "", "");
					if (list_jf.size() > 0) {
						j.put("isbuy", "yes");
					} else {
						j.put("isbuy", "no");
					}
				}
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("rows", arr);
			return json;

		} else if (type.equals("gpccList")) {// 股票持仓列表gpccList
												// (注：该接口不传page、rows值时返回为全部数据；如果需要传分页数据：请按照正确方式，如：page=1；rows=10)
			DecimalFormat df = new DecimalFormat("0.0");
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			String userid = request.getParameter("userid");
			String mrlx = request.getParameter("mrlx");// 普通赛：0，赛季赛：1
			String sjid = request.getParameter("sjid");// 注：赛季赛持仓时传入用户正参加的当前赛季id（必传）
			if (mrlx.equals("0")) {
				sjid = "111";
			}
			List<gpsy> list = gpsyServiceI.getMyccList(userid, mrlx, page,
					rows, sjid);
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					gpsy gp = list.get(i);
					JSONObject j = new JSONObject();
					j.put("zqdm", gp.getZqdm()); // 证券代码
					j.put("zqname", gp.getZqname());// 证券名称

					j.put("gpcbj", gp.getZgcbjg()); // 持股成本价
					j.put("mrlx", mrlx);
					String zqdm = gp.getZqdm();// 证券代码
					Integer count = 0;
					List<Mncp> list02 = mncpServiceI.getJrcgList(userid, zqdm,
							mrlx);
					if (list.size() > 0) {
						for (int n = 0; n < list02.size(); n++) {
							Mncp mncp = list02.get(n);
							count = count + mncp.getCjsl();
						}
					}
					Double jrmcwtsl = mncpServiceI.getwtmcList(userid, zqdm,
							mrlx); // 今日委托卖出数量
					Double kysl = Double.parseDouble(gp.getCgsl()) - count;
					j.put("kysl", df.format(kysl)); // 可用数量
					Double ccsl = Double.parseDouble(gp.getCgsl()) + jrmcwtsl;
					j.put("ccsl", df.format(ccsl));// 持股数量
					arr.add(j);
				}

			}
			List<gpsy> list03 = gpsyServiceI.getJrqksj(userid, mrlx);
			if (list03.size() > 0) {
				for (int k = 0; k < list03.size(); k++) {
					gpsy cc = list03.get(k);
					JSONObject j02 = new JSONObject();
					j02.put("zqdm", cc.getZqdm()); // 证券代码
					j02.put("zqname", cc.getZqname());// 证券名称
					j02.put("ccsl", "0");// 持股数量
					j02.put("gpcbj", "0.0"); // 持股成本价
					j02.put("mrlx", mrlx);
					j02.put("kysl", "0");
					j02.put("mcyke", cc.getMcyke()); // 卖出时盈亏额
					j02.put("mcsl", cc.getMcsl()); // 卖出数量
					j02.put("mccbj", cc.getMccbj()); // 卖出时原有成本价格
					arr.add(j02);
				}
			}
			json.put("errorCode", "0");
			json.put("errorMsg", "查询成功");
			json.put("rows", arr);
			json.put("total", list.size() + list03.size());
			return json;

		} else if (type.equals("wtgpcx")) { // 委托股票撤销
			JSONObject json = new JSONObject();
			json=gpBuySellService.updateGPCX(request, response, modelMap, session);
			return json;
		} else if (type.equals("gpcxList")) {// 股票撤销list：gpcxList
			JSONObject json = new JSONObject();
			JSONArray arr = new JSONArray();
			String userid = request.getParameter("userid"); // 用户id
			String mrlx = request.getParameter("mrlx");// 买入类型 0：普通赛；1：赛季赛、
			String page = request.getParameter("page");
			String rows = request.getParameter("rows");
			List<Mncp> list = mncpServiceI.getCxList(userid, mrlx, page, rows);
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					JSONObject j = new JSONObject();
					Mncp mn = list.get(i);
					j.put("zqdm", mn.getZqdm());
					j.put("zqname", mn.getZqname());
					j.put("wtsl", mn.getWtsl()); // 委托数量
					j.put("wtjg", mn.getWtjg());// 委托价格
					j.put("cz", mn.getCz()); // 注：cz为0：买入；为1：卖出； 为2：撤销
					j.put("mrlx", mn.getMrlx());
					j.put("wttime", mn.getWttime());
					arr.add(j);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "查询成功");
				json.put("rows", arr);
				json.put("total", list.size());
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "无撤销记录数据！");
			}
			return json;
		} else if (type.equals("jnjgAdd")) {// 普通锦囊-锦囊-荐股
			JSONObject json = new JSONObject();
			String title = request.getParameter("title");// 标题
			String content = request.getParameter("content");// 内容
			String jf = request.getParameter("jf");// 积分设置
			String author = request.getParameter("userid");// 作者ID
			String sydate = request.getParameter("sydate");// 发布日期
			if (StringUtils.isBlank(title)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "标题为空");
				return json;
			}
			if (StringUtils.isBlank(content)) {
				json.put("errorCode", "2");
				json.put("errorMsg", "内容为空");
				return json;
			}
			if (StringUtils.isBlank(jf)) {
				json.put("errorCode", "3");
				json.put("errorMsg", "积分设置为空");
				return json;
			}
			if (StringUtils.isBlank(author)) {
				json.put("errorCode", "4");
				json.put("errorMsg", "作者ID为空");
				return json;
			}
			if (StringUtils.isBlank(sydate)) {
				sydate = TimeUtils.getTime("yyyy-MM-dd");
			}
			GeneralTips gt = new GeneralTips();
			gt.setAuthor(author);
			gt.setContent(content);
			gt.setJfxh(jf);
			gt.setTitle(title);
			gt.setSydate(sydate);
			generalTipsServiceI.add(gt);

			json.put("errorCode", "0");
			json.put("errorMsg", "添加成功");
			return json;
		} else if (type.equals("jnfxAdd")) {// 黄金锦囊-锦囊-分析
			JSONObject json = new JSONObject();
			String title = request.getParameter("title");// 标题
			String content = request.getParameter("content");// 内容
			String jf = request.getParameter("jf");// 积分设置
			String author = request.getParameter("userid");// 作者ID
			String sydate = request.getParameter("sydate");// 发布日期
			if (StringUtils.isBlank(title)) {
				json.put("errorCode", "1");
				json.put("errorMsg", "标题为空");
				return json;
			}
			if (StringUtils.isBlank(content)) {
				json.put("errorCode", "2");
				json.put("errorMsg", "内容为空");
				return json;
			}
			if (StringUtils.isBlank(jf)) {
				json.put("errorCode", "3");
				json.put("errorMsg", "积分设置为空");
				return json;
			}
			if (StringUtils.isBlank(author)) {
				json.put("errorCode", "4");
				json.put("errorMsg", "作者ID为空");
				return json;
			}
			if (StringUtils.isBlank(sydate)) {
				sydate = TimeUtils.getTime("yyyy-MM-dd");
			}
			GoldTips gt = new GoldTips();
			gt.setAuthor(author);
			gt.setContent(content);
			gt.setJfxh(jf);
			gt.setTitle(title);
			gt.setSydate(sydate);
			goldTipsServiceI.add(gt);

			json.put("errorCode", "0");
			json.put("errorMsg", "添加成功");
			return json;
		} else if (type.equals("yhtjxx")) { // 用户添加信息（真实姓名，邮箱）
			JSONObject json = new JSONObject();
			String userid = request.getParameter("userid"); // 用户id（必传）

			String yhyx = request.getParameter("yhyx"); // 用户邮箱（必传）
			LoginUser loginuser = loginUserService.getUser(userid);
			if (loginuser != null) {

				loginuser.setYhyx(yhyx);
				loginUserService.update(loginuser);
				json.put("errorCode", "0");
				json.put("errorMsg", "添加成功");
			} else {
				json.put("errorCode", "1");
				json.put("errorMsg", "该用户不存在，请核实！");
			}
			return json;
		} else if (type.equals("")) {

		}
		return null;
	}

	/**
	 * ajax跨域请求
	 * 
	 * @param request
	 * @param response
	 * @throws Exception
	 */
	@RequestMapping("/getInfo2")
	@ResponseBody
	public void getInfo2(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String callback = (String) request.getParameter("callback");
		AppVersion app = icsServiceI.getVersion();
		JSONObject j = new JSONObject();
		if (app.getId() != null) {
			j.put("android", app.getAndroid());
			j.put("IOS", app.getIOS());
		}

		String retStr = callback + "(" + j.toJSONString() + ")";
		response.getWriter().print(retStr);
	}

	private boolean available(String str) throws Exception {
		List<Wordbook> list = wordServiceI.getList();
		for (int i = 0; i < list.size(); i++) {
			String word = list.get(i).getWords();
			if (str.contains(word)) {
				return false;
			}
		}
		return true;
	}

	// ------------------------------------------！到最后！-------------------------------------------
	// 详细信息
	@RequestMapping("/upload")
	@ResponseBody
	public JSONObject messageupload(
			@RequestParam("fileUp") CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename = saveImage(files, request, modelMap, response,
				TimeUtils.getNow14());
		JSONObject j = new JSONObject();
		j.put("filename", "http://img.gtl666.com/picture/" + filename);
		return j;
	}

	@RequestMapping("/upload1")
	@ResponseBody
	public JSONObject messageupload1(
			@RequestParam("fileUp1") CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename = saveImage(files, request, modelMap, response,
				TimeUtils.getNow14());
		JSONObject j = new JSONObject();
		/*j.put("filename",
				"http://192.168.1.15:8080/gtl/attached/image/picture/"
						+ filename);*/
		j.put("filename", "http://img.gtl666.com/picture/" + filename);
		return j;
	}

	@RequestMapping("/upload2")
	@ResponseBody
	public JSONObject messageupload2(
			@RequestParam("fileUp2") CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename = saveImage(files, request, modelMap, response,
				TimeUtils.getNow14());
		JSONObject j = new JSONObject();
		j.put("filename", "http://img.gtl666.com/picture/" + filename);
		return j;
	}

	@RequestMapping("/upload3")
	@ResponseBody
	public JSONObject messageupload3(
			@RequestParam("fileUp3") CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename = saveImage(files, request, modelMap, response,
				TimeUtils.getNow14());
		JSONObject j = new JSONObject();
		j.put("filename", "http://img.gtl666.com/picture/" + filename);
		return j;
	}

	@RequestMapping("/upload4")
	@ResponseBody
	public JSONObject messageupload4(
			@RequestParam("fileUp4") CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename = saveImage(files, request, modelMap, response,
				TimeUtils.getNow14());
		JSONObject j = new JSONObject();
		j.put("filename", "http://img.gtl666.com/picture/" + filename);
		return j;
	}

	// 一个fileUp,实现多图上传
	@RequestMapping("/uploadMore")
	@ResponseBody
	public JSONObject messageuploadMore(
			@RequestParam("fileUp") CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		JSONObject j = new JSONObject();
		try {
			String filename = saveManyImage(files, request, modelMap, response);
			j.put("errorCode", "0");
			j.put("errorMsg", "上传成功!");
			j.put("filename", filename);
			return j;
		} catch (Exception e) {
			j.put("errorCode", "1");
			j.put("errorMsg", "上传错误！error:" + e.getMessage());
			return j;
		}

	}

	@RequestMapping("/uploadAll")
	@ResponseBody
	public JSONObject messageuploadAll(
			@RequestParam("fileUp1") CommonsMultipartFile[] files1,
			@RequestParam("fileUp2") CommonsMultipartFile[] files2,
			@RequestParam("fileUp3") CommonsMultipartFile[] files3,
			@RequestParam("fileUp4") CommonsMultipartFile[] files4,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename1 = saveImage(files1, request, modelMap, response,
				TimeUtils.getNow14());
		String filename2 = saveImage(files2, request, modelMap, response,
				TimeUtils.getNow14());
		String filename3 = saveImage(files3, request, modelMap, response,
				TimeUtils.getNow14());
		String filename4 = saveImage(files4, request, modelMap, response,
				TimeUtils.getNow14());
		JSONObject j = new JSONObject();
		j.put("filename1", "http://img.gtl666.com/picture/" + filename1);
		j.put("filename2", "http://img.gtl666.com/picture/" + filename2);
		j.put("filename3", "http://img.gtl666.com/picture/" + filename3);
		j.put("filename4", "http://img.gtl666.com/picture/" + filename4);
		return j;
	}

	/**
	 * 单图上传
	 * 
	 * @param files
	 */
	private String saveImage(CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response, String logoid) throws Exception {
		String filename = "";
		for (int i = 0; i < files.length; i++) {
			if (!files[i].isEmpty()) {
				String newFileName = "";
				int pre = (int) System.currentTimeMillis();
				try {
					 String dir = "/data/images/picture/"; //设定文件保存的目录
					//String dir = "D:\\Development\\apache-tomcat-7.0.69\\webapps\\gtl\\attached\\image\\picture\\"; // 设定文件保存的目录
					// 拿到输出流，同时重命名上传的文件
					String fileExt = files[i]
							.getOriginalFilename()
							.substring(
									files[i].getOriginalFilename().lastIndexOf(
											".") + 1).toLowerCase();
					newFileName = UUID.randomUUID().toString() + "." + fileExt;
					FileOutputStream os = new FileOutputStream(dir
							+ newFileName);

					// 拿到上传文件的输入流
					FileInputStream in = (FileInputStream) files[i]
							.getInputStream();
					// 以写字节的方式写文件
					int b = 0;
					while ((b = in.read()) != -1) {
						os.write(b);
					}
					os.flush();
					os.close();
					in.close();
					int finaltime = (int) System.currentTimeMillis();

				} catch (Exception e) {
					e.printStackTrace();
					//System.out.println("上传出错");
				}
				//
				return newFileName;
				// filename+=newFileName+",";//多图上传
			} else {
				return "";
			}
		}
		return filename;
	}

	private String saveManyImage(CommonsMultipartFile[] files,
			HttpServletRequest request, ModelMap modelMap,
			HttpServletResponse response) throws Exception {
		String filename = "";
		for (int i = 0; i < files.length; i++) {
			if (!files[i].isEmpty()) {
				String newFileName = "";
				int pre = (int) System.currentTimeMillis();
				try {
					ServletContext sc = request.getSession()
							.getServletContext();
					String dir = "/data/images/picture/"; // 设定文件保存的目录
					// 拿到输出流，同时重命名上传的文件
					String fileExt = files[i]
							.getOriginalFilename()
							.substring(
									files[i].getOriginalFilename().lastIndexOf(
											".") + 1).toLowerCase();
					newFileName = UUID.randomUUID().toString() + "." + fileExt;
					FileOutputStream os = new FileOutputStream(dir
							+ newFileName);

					// 拿到上传文件的输入流
					FileInputStream in = (FileInputStream) files[i]
							.getInputStream();
					// 以写字节的方式写文件
					int b = 0;
					while ((b = in.read()) != -1) {
						os.write(b);
					}
					os.flush();
					os.close();
					in.close();
					int finaltime = (int) System.currentTimeMillis();
				} catch (Exception e) {
					e.printStackTrace();
					//System.out.println("上传出错");
				}
				filename += "http://img.gtl666.com/picture/" + newFileName
						+ ",";// 多图上传
			} else {
				return "";
			}
		}
		return filename.substring(0, filename.length() - 1);
	}
	
	
	/*
	 * 文章列表
	 */
	private JSONObject newsAPI(HttpServletRequest request)throws Exception{
		
		String userid=request.getParameter("userid");
		String lanmu=request.getParameter("lanmu");
		String newsId=request.getParameter("newsid");
		String page=request.getParameter("page");
		String rows=request.getParameter("rows");
		
		JSONObject json = new JSONObject() ;
		JSONArray arr=new JSONArray();
		//lanmu=8新闻线   7股趣吧   6股学堂
		if(newsId!=null){
				String visitCount=request.getParameter("visitCount");
				if(lanmu.equals("8")){
					TxwxGl t=new TxwxGl();
					t.setId(newsId);
					t.setVisitCount(visitCount);
					xwxServiceI.saveVisit(t);
				}else if(lanmu.equals("7")){
					Tgsdz tgsdz=new Tgsdz();
					tgsdz.setId(newsId);
					tgsdz.setVisitCount(visitCount);
					gqbServiceI.saveVisit(tgsdz);
				}else if(lanmu.equals("6")){
					Tgxt gxtNews=new Tgxt();
					gxtNews.setId(newsId);
					gxtNews.setVisitCount(visitCount);
					gxtServiceI.saveVisit(gxtNews);
				}
				json.put("errorCode", "0");
				json.put("errorMsg", "修改成功");
				return json;
		}
		
		
		if(lanmu.equals("8")){
				String fl=request.getParameter("fl");//新闻线分类
				
				List<TxwxGl> list=xwxServiceI.getList(fl,page,rows);
				int total=xwxServiceI.getCount(fl);
				for(int i=0;i<list.size();i++){
					JSONObject j = new JSONObject();
					TxwxGl t=list.get(i);
					j.put("id", t.getId());
					j.put("xwtitel", t.getXwtitel());
					j.put("xwfbz",t.getXwfbz() );
					j.put("xwfbfl", t.getXwfbfl());
					j.put("xwfbtime", t.getXwfbtime());
					j.put("xwnr", t.getXwnr());
					j.put("xwsqdj", t.getXwsqdj());
					j.put("xwjfxh", t.getXwjfxh());
					j.put("xwgmcs", t.getXwgmcs());
					j.put("xwbzcs", t.getXwbtccs());
					j.put("xwbtccs", t.getXwbtccs());
					j.put("czip", t.getCzip());
					j.put("czry", t.getCzry());
					j.put("xwtjtime", t.getXwtjtime());
					j.put("images", t.getImage());
					j.put("xwzy", t.getXwzy());//新闻线新闻摘要
					j.put("plsl", pinglunServiceI.getCount(t.getId()));
					j.put("visitCount", t.getVisitCount());
					if(StringUtils.isNotBlank(userid)){
						List<Jfxhjl> list_jf=jfxhjlfServiceI.getList(userid, t.getId(), "", "","","");
						if(list_jf.size()>0){
							j.put("isbuy", "yes");
						}else{
							j.put("isbuy", "no");
						}
						
					}
					
					arr.add(j);
					
			}
				json.put("errorCode", "0");
				json.put("total", list.size());
				json.put("pcAllcout", total);
				json.put("rows", arr);
//				//System.out.println("打印："+json);
			return json;
			
			
		}else if(lanmu.equals("7")){//股趣吧
			String fl=request.getParameter("fl");//1股市段子     2甘甜股事   3 股道情歌    4趣味小图     5 有趣视频
			if(fl!=null){
				if(fl.equals("1")){
					fl="股市段子";
				}else if(fl.equals("2")){
					fl="甘甜股事";
				}else if(fl.equals("3")){
					fl="股道情歌";
				}else if(fl.equals("4")){
					fl="趣味小图";
				}else if(fl.equals("5")){
					fl="有趣视频";
				}
			}
			List<Tgsdz> list=gqbServiceI.getList(fl,page,rows);
			for(int i=0;i<list.size();i++){
				JSONObject j=new JSONObject();
				Tgsdz t=list.get(i);
				j.put("id", t.getId());j.put("tgname", t.getTgname());j.put("dztitel",t.getDztitel() );
				j.put("dzfbtime",t.getDzfbtime() );j.put("dznr", t.getDznr());j.put("dzsqdj", t.getDzsqdj());
				j.put("dzjfxh", t.getDzjfxh());j.put("dzgmcs", t.getDzgmcs());j.put("dzbzcs", t.getDzbzcs());
				j.put("dzbtccs",t.getDzbtccs() );j.put("qublb", t.getQublb());j.put("plsl", pinglunServiceI.getCount(t.getId()));
				j.put("images", t.getImages());j.put("gqbzy", t.getGqbzy());//股趣吧摘要
				j.put("visitCount", t.getVisitCount());
				if(StringUtils.isNotBlank(userid)){
					List<Jfxhjl> list_jf=jfxhjlfServiceI.getList(userid, t.getId(), "", "","","");
					if(list_jf.size()>0){
						j.put("isbuy", "yes");
					}else{
						j.put("isbuy", "no");
					}
					
				}
				arr.add(j);
			}
			json.put("errorCode", "0");
			json.put("total",gqbServiceI.getCount(fl));
			json.put("rows", arr);
			return json;
			
		}else if(lanmu.equals("6")){//股学堂
			String fl=request.getParameter("fl");//分类   1草根教师   2教授讲堂    0憨豆评股  3高手故事、4实战秘籍  5股学吧
			List<Tgxt> list=gxtServiceI.getList(fl,page,rows);
			for(int i=0;i<list.size();i++){
				Tgxt t=list.get(i);
				JSONObject j=new JSONObject();
				j.put("id",t.getId() );j.put("gxttitel",t.getGxttitel() );
				j.put("gxtfl", t.getGxtfl());j.put("gxtfbtime", t.getGxtfbtime());
				j.put("gxtfbz", t.getGxtfbz());j.put("gxtnr", t.getGxtnr());j.put("images", t.getImage());
				j.put("gxtzy", t.getGxtzy());//股学堂摘要
				j.put("plsl", pinglunServiceI.getCount(t.getId()));
				j.put("visitCount", t.getVisitCount());
				if(StringUtils.isNotBlank(userid)){
					List<Jfxhjl> list_jf=jfxhjlfServiceI.getList(userid, t.getId(), "", "","","");
					if(list_jf.size()>0){
						j.put("isbuy", "yes");
					}else{
						j.put("isbuy", "no");
					}
					
				}
				arr.add(j);
			}
			json.put("rows", arr);
			json.put("errorCode", "0");
			json.put("total",list.size());
			return json;
		}else{
			json.put("errorMsg", "无此类别");
			json.put("errorCode", "1");
			return json;
		}
	}

	/***
	 * 当type=login 
	 * @param username  用户名 (*)
	 * @param pwd     	密码 (*)
	 * @param nickname  用户别名
	 * @param registrationId 极光需要的设备id(注:pc没有设备ID可以不传,移动端设备必传(*))
	 * @param uid 第三方唯一标示
	 * @param utx 第三方用户头像
	 * @param uStype 第三方类型：qq、微信还是微博
	 * @see #getInfo(HttpServletRequest, HttpServletResponse, ModelMap, HttpSession)  
	 */
	protected JSONObject loginAPI(HttpServletRequest request)throws Exception{
		String username = request.getParameter("username");//用户名
		String password = request.getParameter("pwd");//密码
		LoginUser u=null;
		String nickname = request.getParameter("nickname");//用户名
		String uid=request.getParameter("uid");//第三方唯一标识
		String utx=request.getParameter("utx");//第三方用户头像
		String uStype=request.getParameter("uStype");//第三方类型：qq、微信还是微博
		String registrationId = request.getParameter("registrationId");// 极光需要的设备id
		
		JSONObject j = new JSONObject();
		User_SanFang usf=new User_SanFang();
		usf.setUid(uid);
		usf.setSfType(uStype);
		usf.setUtx(utx);
		usf.setPassword(MD5Util.md5(password));
		usf.setPhone(username);
		usf.setRegistrationId(registrationId);
		usf.setNickname(nickname);
		if (StringUtils.isNotBlank(username) && StringUtils.isNotBlank(password)) {
			
			LoginUser user = new LoginUser();
			user.setName(username);
			user.setPwd(password);
			user.setRegistrationId(registrationId);
			u = loginUserService.login(user);
			if (u != null) {
				if (u.getStatus().equals("1")) {
					// 修改最后登录信息
					u.setLogintime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
					u.setLoginip(InfoUtil.getIpAddr(request));
					if(StringUtils.isNotBlank(registrationId)){
						u.setRegistrationId(registrationId);
					}
					loginUserService.update(u);
					if (StringUtils.isNotBlank(u.getZsname())) {
						j.put("zsname", u.getZsname()); // 用户真实姓名
					} else {
						j.put("zsname", "");
					}
					if (StringUtils.isNotBlank(u.getYhyx())) {
						j.put("yhyx", u.getYhyx()); // 用户邮箱
					} else {
						j.put("yhyx", "");
					}
					if (StringUtils.isNotBlank(uid)) {
						
						userSanFangService.sfReq(usf);
					}
					
					if (StringUtils.isBlank(u.getIm_username())) {
						List<Map<String, String>> userList=new ArrayList<Map<String,String>>();
						Map<String, String> map=new HashMap<String, String>();
						map.put("username", u.getPhone());
						map.put("password", u.getPhone());
						userList.add(map);
						ChartUtlis cus=new ChartUtlis();
						cus.addImUser(userList);
						
						u.setIm_username(u.getPhone());
						u.setIm_password(u.getPhone());
						loginUserService.update(u);
					}else{
						//System.out.println("你已经注册了环信账号了..........");
					} 
					
					j.put("errorCode", "0");
					j.put("errorMsg", "登录成功");
					j.put("user", u);
				} else if (u.getStatus().equals("0")) {
					j.put("errorCode", "9");
					j.put("errorMsg", "该账号处于禁用状态，不可以登录！");
				} else {
					j.put("errorCode", "2");
					j.put("errorMsg", "该账号状态异常");
				}

			} else {
				j.put("errorCode", "1");
				j.put("errorMsg", "用户名或密码错误");
			}
			
			/*User_SanFang us=userSanFangService.slogin(usf);
			if (us != null) {
				LoginUser uslu = new LoginUser();
				uslu.setName(us.getPhone());
				uslu.setPwd(us.getPassword());
				LoginUser uu2 = loginUserService.login(uslu);
				j.put("errorCode", "0");
				j.put("errorMsg", "登录成功");
				j.put("user", uu2);
			} else {
				j.put("errorCode", "1");
				j.put("errorMsg", "请先绑定手机号，谢谢！");
			}*/
		} else {
			if (StringUtils.isNotBlank(uid)) {
				User_SanFang us=userSanFangService.slogin(usf);
				if (us != null) {
					LoginUser uslu = new LoginUser();
					uslu.setName(us.getPhone());
					uslu.setPwd(us.getPassword());
					LoginUser uu2 = loginUserService.login(uslu);
					uu2.setNickname(nickname);
					loginUserService.update(uu2);
					j.put("errorCode", "0");
					j.put("errorMsg", "登录成功");
					j.put("user", uu2);
				} else {
					j.put("errorCode", "1");
					j.put("errorMsg", "请先绑定手机号，谢谢！");
				}
			} 
		

		}
		return j;
		/*LoginUser user = new LoginUser();
		user.setName(username);
		user.setPwd(password);
		user.setRegistrationId(registrationId);
		LoginUser u = loginUserService.login(user);
		JSONObject j = new JSONObject();
		if (u != null) {
			if (u.getStatus().equals("1")) {
				// 修改最后登录信息
				u.setLogintime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
				u.setLoginip(InfoUtil.getIpAddr(request));
				loginUserService.update(u);
				if (StringUtils.isNotBlank(u.getZsname())) {
					j.put("zsname", u.getZsname()); // 用户真实姓名
				} else {
					j.put("zsname", "");
				}
				if (StringUtils.isNotBlank(u.getYhyx())) {
					j.put("yhyx", u.getYhyx()); // 用户邮箱
				} else {
					j.put("yhyx", "");
				}

				j.put("errorCode", "0");
				j.put("errorMsg", "登录成功");
				j.put("user", u);
			} else if (u.getStatus().equals("0")) {
				j.put("errorCode", "9");
				j.put("errorMsg", "该账号处于禁用状态，不可以登录！");
			} else {
				j.put("errorCode", "2");
				j.put("errorMsg", "该账号状态异常");
			}

		} else {
			j.put("errorCode", "1");
			j.put("errorMsg", "用户名或密码错误");
		}

		return j;*/
		
	}

	/*
	 * UID Login
	 */
	private JSONObject uidLoginAPI(HttpServletRequest request)throws Exception{
		String uid=request.getParameter("uid");//第三方唯一标识
		String utx=request.getParameter("utx");//第三方用户头像
		String uStype=request.getParameter("uStype");//第三方类型：qq、微信还是微博
		String registrationId = request.getParameter("registrationId");// 极光需要的设备id
		String nickname = request.getParameter("nickname");//用户名
		JSONObject j = new JSONObject();
		if (StringUtils.isNotBlank(uid)) {
			User_SanFang usf=new User_SanFang();
			//String userid=UUID.randomUUID().toString();
			usf.setUid(uid);
			usf.setSfType(uStype);
			usf.setUtx(utx);
			//usf.setUserid(userid);
			usf.setRegistrationId(registrationId);
			usf.setNickname(nickname);
			User_SanFang us=userSanFangService.slogin(usf);
			if (us != null) {
				LoginUser lur=new LoginUser();
				lur.setName(us.getPhone());
				lur.setPwd(us.getPassword());
				LoginUser u = loginUserService.loginSanFang(lur);
				u.setNickname(nickname);
				loginUserService.update(u);
				j.put("errorCode", "0");
				j.put("errorMsg", "登录成功");
				j.put("user", u);
			} else {
				//userSanFangService.sfReq(usf);
				j.put("errorCode", "1");
				j.put("errorMsg", "请先绑定手机号，谢谢！");
				//j.put("userid", userid);
			}
		}else {
			j.put("errorCode", "1");
			j.put("errorMsg", "请先第三方验证");
		}
		return j;
	}
	
	
	
	/*
	 * 有问必答用户评论回复 新增
	 */
	private  JSONObject userReplyAPI(HttpServletRequest request)throws Exception{
			// 通过有问必答提问id回复
					JSONObject json = new JSONObject();
					String userId = request.getParameter("userid");
					String releaseContent = request.getParameter("releaseContent");
					String questionId = request.getParameter("questionId");
					String replyType = request.getParameter("replyType");// 回复类型(1:用户回复;2:提问者追问;3:追答)
					String replyId = request.getParameter("replyId");// 如果是追问或者是追答需要填写父id(即原始回答id),追问和追答由回复时间倒叙排列 
					if (!StringUtils.isNotBlank(questionId)) {
						json.put("errorCode", "1");// 请选择问题
						json.put("errorMsg", "请选择问题");
						return json;
					}
					if (!StringUtils.isNotBlank(userId)) {
						json.put("errorCode", "2");// 请登录
						json.put("errorMsg", "请登录");
						return json;
					}
					if (!StringUtils.isNotBlank(releaseContent)) {
						json.put("errorCode", "3");// 请填写回复内容
						json.put("errorMsg", "请填写回复内容");
						return json;
					}
					LoginUser loginUser = loginUserService.getLoginUser(userId);
					String userName = "";
					if (loginUser != null) {
						userName = loginUser.getNickname();
					}
					// 如果回复类型为空默认为用户回复信息
					if (!StringUtils.isNotBlank(replyType)) {
						replyType = "1";
					}
					String releaseIp = InfoUtil.getIpAddr(request);
					String releaseTime = TimeUtils.getTime("yyyy-MM-dd HH:mm:ss");
					ReplyQuestions2 replyQuestions2 = new ReplyQuestions2();
					String id = UUID.randomUUID().toString(); // 有问必答回复id
					replyQuestions2.setId(id);
					replyQuestions2.setDeleteReason("");
					replyQuestions2.setQuestionId(questionId);
					replyQuestions2.setReleaseContent(releaseContent);
					replyQuestions2.setReleaseIp(releaseIp);
					replyQuestions2.setReleaseTime(releaseTime);
					replyQuestions2.setState("1");
					replyQuestions2.setUserId(userId);
					replyQuestions2.setUserName(userName);
					replyQuestions2.setReplyType(replyType);
					replyQuestions2.setReplyId(replyId);
					replyQuestionsServiceI2.add(replyQuestions2);
//					AnswerQuestions answerQuestions = answerQuestionsServiceI
//							.get(questionId);
//					if (answerQuestions != null) {
//						YwbdJf ywbdJf = new YwbdJf();
//						Tgsq tgsq = tzgwServiceI.getInfo(answerQuestions.getUserId());
//						ywbdJf.setId(UUID.randomUUID().toString());
//						ywbdJf.setUserId(answerQuestions.getUserId());// 提问人id
//						ywbdJf.setTzgwId(userId);// 回复人id
//						ywbdJf.setMyd("0");// 未填写满意度
//						ywbdJf.setWzId(replyQuestions2.getId());// 回复文章id
//						if (tgsq != null) {
//							ywbdJf.setJfS(tgsq.getTwjf());
//						}
//						ywbdJfServiceI.add(ywbdJf);
//					}
					json.put("errorCode", "0");// 成功回复
					json.put("errorMsg", "成功回复");
					return json;
	}
	
	
	/*
	 * 有问必答用户评论回复查询
	 */
	private JSONObject userReplyListAPI(HttpServletRequest request)throws Exception{
		JSONObject json = new JSONObject();
		JSONArray jsonArray = new JSONArray();
		JSONObject j = null;
		String questionId = request.getParameter("questionId");
		String page = request.getParameter("page");
		String rows = request.getParameter("rows");
		if(StringUtils.isBlank(questionId)){
			json.put("errorCode", "3");// 请填写回复内容
			json.put("errorMsg", "请填写回复内容");
			return json;
		}
		ReplyQuestions2 replyQuestions = new ReplyQuestions2();
		replyQuestions.setQuestionId(questionId);
		List<ReplyQuestions2> questions2s=replyQuestionsServiceI2.replyQuestionsList(replyQuestions, page, rows);
		for (ReplyQuestions2 replyQuestions2 : questions2s) {
			j=new JSONObject();
			j.put("id", replyQuestions2.getId());
			j.put("deleteReason",
					replyQuestions2.getDeleteReason());
			j.put("questionId", replyQuestions2.getQuestionId());
			j.put("releaseContent",
					replyQuestions2.getReleaseContent());
			j.put("releaseIp", replyQuestions2.getReleaseIp());
			j.put("releaseTime", replyQuestions2.getReleaseTime());
			j.put("state", replyQuestions2.getState());
			j.put("userId", replyQuestions2.getUserId());
			LoginUser loginuser = loginUserService
					.getUser( replyQuestions2.getUserId());
			if (loginuser != null) {
				j.put("userName", loginuser.getNickname());
			} else {
				j.put("userName", "");
			}
			if (loginuser != null) {
				if (StringUtils.isNotBlank(loginuser.getTx())) {
					j.put("hfrtx", loginuser.getTx()); // 回复人头像
				} else {
					j.put("hfrtx", "");// 回复人头像
				}
			}
		
			j.put("userName", replyQuestions2.getUserName());
			j.put("replyType", replyQuestions2.getReplyType());
			j.put("replyId", replyQuestions2.getReplyId());
			jsonArray.add(j);
		}
		json.put("total", jsonArray.size());
		json.put("rows", jsonArray);
		json.put("errorCode", "0");// 返回有问必答提问列表
		json.put("errorMsg", "返回有问必答提问列表");
		return json;
	}

	/*
	 * 新闻线 股趣吧 股学堂 点赞API
	 */
	private JSONObject newsClickAlike(HttpServletRequest request)throws Exception{
		JSONObject json = new JSONObject();
		String newsId = request.getParameter("newsId");// 新闻ID
		String action = request.getParameter("action");// 1赞 2吐槽
		String newsType = request.getParameter("newsType"); //信息类别  8新闻线   7股趣吧   6股学堂
		if(newsId==null){
			json.put("errorMsg", "新闻ID不能为空");
			json.put("errorCode", "1");
			return json;
		}
		if(newsType==null){
			json.put("errorMsg", "信息类别不能为空");
			json.put("errorCode", "2");
			return json;
		}
		if(action==null){
			json.put("errorMsg", "动作类别不能为空");
			json.put("errorCode", "3");
			return json;
		}else{
			if(!action.equals("2")){
				if(!action.equals("1")){
					json.put("errorMsg", "信息类别错误");
					json.put("errorCode", "4");
					return json;
				}
			}
		}
		//		8新闻线   7股趣吧   6股学堂
		String msg="";
		if(newsType.equals("8")){
			TxwxGl t=null;
			t=	xwxServiceI.getTxwxGl(newsId);
			//新闻线
			if(action.equals("1")){
				if(t!=null){
					Integer count=Integer.parseInt(t.getXwbzcs())+1;
					t.setXwbzcs(count.toString());	
					xwxServiceI.update(t);
					msg="新闻线点赞成功";
				}else{
					json.put("errorCode", "5");
					json.put("errorMsg", "无此新闻");
					return json;
				}
			}else if(action.equals("2")){
				if(t!=null){
					Integer count=Integer.parseInt(t.getXwbtccs())+1;
					t.setXwbtccs(count.toString());
					xwxServiceI.update(t);
					msg="新闻线吐槽成功";
				}else{
					json.put("errorCode", "5");
					json.put("errorMsg", "无此新闻");
					return json;
				}
			}
		//股趣吧
		}else if(newsType.equals("7")){
			Tgsdz tgsdz=null;
			tgsdz=gqbServiceI.getGqbdz(newsId);
			if(action.equals("1")){
				if(tgsdz!=null){
					Integer count=Integer.parseInt(tgsdz.getDzbzcs()+1);
					tgsdz.setDzbzcs(count.toString());
					gqbServiceI.update(tgsdz);
					msg="股趣吧点赞成功";
				}else{
					json.put("errorCode", "5");
					json.put("errorMsg", "无此新闻");
					return json;
				}
			}else if(action.equals("2")){
				if(tgsdz!=null){
				Integer count=Integer.parseInt(tgsdz.getDzbtccs()+1);
				tgsdz.setDzbtccs(count.toString());
				gqbServiceI.update(tgsdz);
				msg="股趣吧吐槽成功";
				}else{
					json.put("errorCode", "5");
					json.put("errorMsg", "无此新闻");
					return json;
				}
			}
		//股学堂
		}else if(newsType.equals("6")){
			Tgxt gxtNews=null;
			gxtNews=gxtServiceI.getGxt(newsId);
			if(action.equals("1")){
				if(gxtNews!=null){
					Integer count=Integer.parseInt(gxtNews.getGxtbzcs()+1);
					gxtNews.setGxtbzcs(count.toString());
					gxtServiceI.update(gxtNews);
					msg="股学堂点赞成功";
				}else{
					json.put("errorCode", "5");
					json.put("errorMsg", "无此新闻");
					return json;
				}
				
			}else if(action.equals("2")){
				if(gxtNews!=null){
				Integer count=Integer.parseInt(gxtNews.getGxtbtccs()+1);
				gxtNews.setGxtbtccs(count.toString());
				gxtServiceI.update(gxtNews);
				msg="股学堂吐槽成功";
				}else{
					json.put("errorCode", "5");
					json.put("errorMsg", "无此新闻");
					return json;
				}
			}
		}
		json.put("errorCode", "0");
		json.put("errorMsg", msg);
		return json;
		
		
	}
}
