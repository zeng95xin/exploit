package com.admin.controller;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.admin.model.RealTimeQA;
import com.admin.model.SecuritiesCompany;
import com.admin.pageModel.Json;
import com.admin.pageModel.User;
import com.admin.service.RealTimeQAServiceI;
import com.admin.service.SecuritiesCompanyServiceI;
import com.admin.util.InfoUtil;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

/**
 * 实时问答管理控制器
 * 
 * @author
 * 
 */
@Controller
@RequestMapping("/realTimeQAController")
public class RealTimeQAController extends BaseController {

	@Autowired
	private RealTimeQAServiceI service;

	@Autowired
	private SecuritiesCompanyServiceI securitiesCompanyService;

	/**
	 * 实时问答界面
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/qaadd")
	public String ad(HttpServletRequest request, HttpSession session) {
		User user = (User) session.getAttribute("loginUser");
		String name = user.getUsername();
		SecuritiesCompany sc = securitiesCompanyService.getByLoginName(name);
		request.setAttribute("sc", sc);
		return "/admin/realTimeQA/add";
	}

	/**
	 * 添加
	 * 
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public Json add(RealTimeQA qa, HttpServletRequest request,
			HttpSession session) {
		Json j = new Json();
		try {
			User user = (User) session.getAttribute("loginUser");
			String name = user.getUsername();
			SecuritiesCompany sc = securitiesCompanyService
					.getByLoginName(name);

			qa.setUserid(sc.getId());
			qa.setUsername(sc.getCompanyName());
			qa.setUsertx(sc.getCompanyLogo());
			service.add(qa);

			j.setSuccess(true);
			j.setMsg("添加成功！");
			j.setObj(qa);
		} catch (Exception e) {
			j.setMsg(e.getMessage());
		}
		return j;
	}

	@RequestMapping("/getRealTimeQAList")
	@ResponseBody
	public JSONArray getRealTimeQAList(HttpServletRequest request,
			HttpSession session) throws Exception {
		JSONArray arr = new JSONArray();
		String page = request.getParameter("page");
		String rows = request.getParameter("rows");
		String username = request.getParameter("username");
		username = URLDecoder.decode(username, "UTF-8");
		List<RealTimeQA> list = service.getQAList(page, rows);
		for (int i = 0; i < list.size(); i++) {
			JSONObject j = new JSONObject();
			RealTimeQA q = list.get(i);
			j.put("id", q.getId());
			j.put("userid", q.getUserid());
			j.put("username", q.getUsername());
			j.put("usertx", q.getUsertx());
			j.put("addtime", q.getAddtime());
			j.put("content", q.getContent());
			if (username.equals(q.getUsername())) {
				j.put("isOwn", "1");
			} else {
				j.put("isOwn", 0);
			}

			arr.add(j);
		}
		return arr;
	}

}
