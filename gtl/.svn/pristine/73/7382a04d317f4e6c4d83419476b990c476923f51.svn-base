package com.log;

import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.admin.model.IntegralConfig;
import com.admin.service.IntegralConfigServiceI;
import com.lcjh.entity.LcjhConfig;
import com.util.PropertiesUtil;


@Component
public class ProjectConfig {
	
	private static Map<String, String> allConfigMap = new HashMap<String, String>();
	
	
	public static final String pingppAppId = "app_iz1OG84inLq5q1SC";
	public static final String pingppApiKey = "sk_live_anfzLSbDO8CC0yHuPGyfvvXP";
	
	public static final int interfaceDataRetryTimes = 10;
	public static final int interfaceDataRetryTimes2 = 3;
	public static final BigDecimal bd100 = new BigDecimal("100");
	public static final BigDecimal bd_100 = new BigDecimal("-100");
	public static final BigDecimal bd_1 = new BigDecimal("-1");
	public static final BigDecimal bd0 = new BigDecimal("0");
	public static final int sale = 6;
	public static final int roundingMode = BigDecimal.ROUND_HALF_UP;

	
	public static final String imgRootURL="imgRootURL";
	public static final String imgSavePath="imgSavePath";
	public static final String baseUrl="baseUrl";
	public static final String basePath="basePath";
	
	public static LcjhConfig lcjhConfig;
	static {
		String profiles = System.getProperty("spring.profiles.active", "dev");
		String fileName = "config/"+profiles+"_config.properties ";
		allConfigMap = PropertiesUtil.getPropMap(fileName);
	}
	public static Map<String, String> getConfigMap() {
		return allConfigMap;
	}
	
	public static String getValue(String key){
		return allConfigMap.get(key);
	}
	
	/**
	 * 获取所有配置文件参数集合
	 */
	public static void setAllConfigMap(Map<String, String> paramsMap) {
		allConfigMap = paramsMap;
	}

	/**
	 * 获取所有配置Map集合
	 * @return Map<String, String>
	 */
	public static Map<String, String> getAllConfigMap() {
		return allConfigMap;
	}
	
	public static String getImgSavePath() {
		return PropertiesUtil.getValue(imgSavePath);
	}
	public static String getImgRootURL() {
		return PropertiesUtil.getValue(imgRootURL);
	}
	public static String getBaseUrl() {
		return PropertiesUtil.getValue(baseUrl);
	}
	public static String getBasePath() {
		return PropertiesUtil.getValue(basePath);
	}
	
	public synchronized static LcjhConfig getLcjhConfig(boolean isget, LcjhConfig lcjhConfig) {
		if(!isget){
			ProjectConfig.lcjhConfig = lcjhConfig;
		}
		return ProjectConfig.lcjhConfig;
	}
	
	@Autowired private IntegralConfigServiceI integralConfigServiceI;
	public void initial(){
		ProjectConfig.integralConfig = integralConfigServiceI.get();
		if(null != integralConfig){
			yhsl = new BigDecimal(integralConfig.getGpmmyhs() == null ? "0" : integralConfig.getGpmmyhs());
			sxfl = new BigDecimal(integralConfig.getGpmmsxf() == null ? "0" : integralConfig.getGpmmsxf());
		}
	}
	public static DecimalFormat df_default = new DecimalFormat("0.00");
	private static IntegralConfig integralConfig;
	private static BigDecimal yhsl;
	private static BigDecimal sxfl;
	public synchronized static IntegralConfig getSetIntegralConfig(boolean isget, IntegralConfig integralConfig) {
		if(!isget){
			ProjectConfig.integralConfig = integralConfig;
			yhsl = new BigDecimal(integralConfig.getGpmmyhs());
			sxfl = new BigDecimal(integralConfig.getGpmmsxf());
		}
		return ProjectConfig.integralConfig;
	}
	public static BigDecimal getSxfl() {
		if(null == sxfl){
			return BigDecimal.ZERO;
		}
		return ProjectConfig.sxfl;
	}
	public static BigDecimal getYhfl() {
		if(null == yhsl){
			return BigDecimal.ZERO;
		}
		return ProjectConfig.yhsl;
	}
	
}
