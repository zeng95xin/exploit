package com.admin.service.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.UUID;

import org.apache.commons.lang3.StringUtils;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.GqbdzDaoI;
import com.admin.dao.LoginUserDaoI;
import com.admin.dao.RoleDaoI;
import com.admin.dao.UserDaoI;
import com.admin.dao.VIPApplicationDaoI;
import com.admin.dao.WebDaoI;
import com.admin.model.JPushChatModel;
import com.admin.model.LoginUser;
import com.admin.model.TczdXz;
import com.admin.model.Tgsdz;
import com.admin.model.Tgsq;
import com.admin.model.Tgwdsz;
import com.admin.model.Tgxt;
import com.admin.model.Tresource;
import com.admin.model.Trole;
import com.admin.model.Tuser;
import com.admin.model.VIPApplication;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.SessionInfo;
import com.admin.pageModel.User;
import com.admin.service.GqbServiceI;
import com.admin.service.GxtServiceI;
import com.admin.service.JPushApiClient;
import com.admin.service.LoginUserServiceI;
import com.admin.service.UserServiceI;
import com.admin.service.VIPApplicationServiceI;
import com.admin.service.WebServiceI;
import com.admin.util.MD5Util;
import com.web.entity.Person;
import com.web.util.PageModel;
import com.web.util.TimeUtils;

@Service
public class VIPApplicationServiceImpl implements VIPApplicationServiceI {

	@Autowired
	private VIPApplicationDaoI dao;
	
	@Autowired
	private LoginUserDaoI loginUserDaoI;
	
	@Autowired
	private LoginUserServiceI loginUserServiceI;
	
	@Autowired
	private JPushApiClient jppApiClient;

	@Override
	public DataGrid dataGridForOne(VIPApplication g, PageHelper ph) {
		DataGrid dg = new DataGrid();
		List<VIPApplication> ul = new ArrayList<VIPApplication>();
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from VIPApplication t ";
		List<VIPApplication> l = dao.find(hql + whereHqlForOne(g, params)
				+ orderHql(ph), params, ph.getPage(), ph.getRows());
		if (l != null && l.size() > 0) {
			for (VIPApplication t : l) {
				VIPApplication u = new VIPApplication();
				BeanUtils.copyProperties(t, u);
				ul.add(u);
			}
		}
		dg.setRows(ul);
		dg.setTotal(dao.count(
				"select count(*) " + hql + whereHqlForOne(g, params), params));
		return dg;
	}

	/**
	 * where 条件封装
	 * 
	 * @param p
	 * @param params
	 * @return
	 */
	private String whereHqlForOne(VIPApplication g, Map<String, Object> params) {
		String hql = "";
		if (g != null) {
			hql += " where 1=1 ";
			if (StringUtils.isNotBlank(g.getStatus()) ) {
					hql += " and t.status = :status";
					params.put("status", g.getStatus());
			}
			if (StringUtils.isNotBlank(g.getUsername()) ) {
				hql += " and t.username like :username";
				params.put("username", "%%" + g.getUsername() + "%%");
			}

			if (StringUtils.isNotBlank(g.getRealname())) {
				hql += " and t.realname like :realname";
				params.put("realname", "%%" + g.getRealname() + "%%");
			}
			if (StringUtils.isNotBlank(g.getUsertype())) {
				hql += " and t.usertype = :usertype";
				params.put("usertype",  g.getUsertype() );
			}
			if (StringUtils.isNotBlank(g.getUserNRtype())) {
				hql += " and t.userNRtype = :userNRtype";
				params.put("userNRtype",  g.getUserNRtype() );
			}

		}
		
		return hql;
	}

	/**
	 * 排序条件
	 * 
	 * @param ph
	 * @return
	 */
	private String orderHql(PageHelper ph) {
		String orderString = "";
		if (ph.getSort() != null && ph.getOrder() != null) {
			orderString = " order by t." + ph.getSort() + " " + ph.getOrder();
		}
		return orderString;
	}

	@Override
	public void delete(String id) {
		dao.delete(dao.get(VIPApplication.class, id));
	}

	@Override
	synchronized public void add(String userid,String username, String realname,
			String cardid, String jzd, String phoneno, String jtldzc,
			String jtgdzc, String cytzsd, String tzfxxh, String xfxyy,String usertype)
			throws Exception {
		VIPApplication p = new VIPApplication();
		p.setUserid(userid);
		p.setUsername(username);
		p.setRealname(realname);
		p.setCardid(cardid);
		p.setJzd(jzd);
		p.setPhoneno(phoneno);
		p.setJtldzc(jtldzc);
		p.setJtgdzc(jtgdzc);
		p.setCytzsd(cytzsd);
		p.setTzfxxh(tzfxxh);
		p.setXfxyy(xfxyy);
		p.setId(UUID.randomUUID().toString());
		p.setTbtime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
		p.setUsertype(usertype);
		p.setStatus("0");
		dao.save(p);

	}
	@Override
	synchronized public void addn(String userid,String username, String realname,
			String cardid, String jzd, String phoneno, String jtldzc,
			String jtgdzc, String cytzsd, String tzfxxh, String xfxyy,String usertype)
			throws Exception {
		VIPApplication p = new VIPApplication();
		p.setUserid(userid);
		p.setUsername(username);
		p.setRealname(realname);
		p.setCardid(cardid);
		p.setJzd(jzd);
		p.setPhoneno(phoneno);
		p.setJtldzc(jtldzc);
		p.setJtgdzc(jtgdzc);
		p.setCytzsd(cytzsd);
		p.setTzfxxh(tzfxxh);
		p.setXfxyy(xfxyy);
		p.setId(UUID.randomUUID().toString());
		p.setTbtime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
		p.setUserNRtype(usertype);
		p.setStatus("0");
		dao.save(p);

	}

	@Override
	synchronized public void addCzd(VIPApplication p) throws Exception {
		p.setId(UUID.randomUUID().toString());
		p.setTbtime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
		dao.save(p);
	}

	/**
	 * 通过id获取段子实体类
	 */
	@Override
	public VIPApplication get(String id) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("id", id);
		VIPApplication t = dao.get(
				"select distinct t from VIPApplication t  where t.id = :id",
				params);
		VIPApplication u = new VIPApplication();
		BeanUtils.copyProperties(t, u);
		return u;
	}
	@Override
	public VIPApplication getuserid(String userid,String usertype) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("userid", userid);
		params.put("usertype", usertype);
		VIPApplication t = dao.get(
				"select distinct t from VIPApplication t  where t.status='1' and  t.userid = :userid and t.usertype= :usertype",
				params);
		
		return t;
	}
	
	@Override
	public VIPApplication getuser(String userid,String userNRtype) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("userid", userid);
		params.put("userNRtype", userNRtype);
		VIPApplication t = dao.get(
				"select distinct t from VIPApplication t  where t.status='1' and  t.userid = :userid and t.userNRtype= :userNRtype",
				params);
		
		return t;
	}
	
	@Override
	public List<VIPApplication> getuserNR(String userid, String userNRtype) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("userid", userid);
		params.put("userNRtype", userNRtype);
		List<VIPApplication> t = dao.find(
				" from VIPApplication t  where t.status <> '2' and  t.userid = :userid and t.userNRtype= :userNRtype",
				params);
		
		return t;
	}

	String[] excelHeader = { "标题", "分类", "发布者", "发布时间" };

	@Override
	public void edit(VIPApplication p) throws Exception {
		VIPApplication a = dao.get(VIPApplication.class, p.getId());
		
		if (StringUtils.isNotBlank(p.getStatus()) && StringUtils.isNotBlank(p.getUserNRtype()) && p.getStatus().equals("1") && p.getUserNRtype().equals("n")) {
			LoginUser tgUser = loginUserServiceI.getUser(p.getUserid());
			
			// 推送信息
			String title = "牛人申请审核信息";
			String content = tgUser.getNickname()
					+ ":您申请牛人资质审核已通过，请重新登录获取新的权限'";
			
//			List<String> alias = new ArrayList<String>();
//			alias.add(p.getUserid().replace("-", ""));
			List<String> rigstId = new ArrayList<String>();
			rigstId.add(tgUser.getRegistrationId());
			if(rigstId!=null&&rigstId.size()>0){
				JPushChatModel jpModel = new JPushChatModel();
				jpModel.setType("9"); // 申请投顾审核成功
				jpModel.setTitle(title);// 推送题目与内容
				jpModel.setContent(content);
//				jppApiClient.jPush(alias, jpModel);
				jppApiClient.jPush_rigstId(rigstId, jpModel);
			}
			

		}
		a.setTbtime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
		a.setUserid(p.getUserid());
		a.setUsername(p.getUsername());
		a.setRealname(p.getRealname());
		a.setCardid(p.getCardid());
		a.setJzd(p.getJzd());
		a.setPhoneno(p.getPhoneno());
		a.setJtldzc(p.getJtldzc());
		a.setJtgdzc(p.getJtgdzc());
		a.setCytzsd(p.getCytzsd());
		a.setTzfxxh(p.getTzfxxh());
		a.setXfxyy(p.getXfxyy());
		
		a.setUsertype(p.getUsertype());
		a.setUserNRtype(p.getUserNRtype());
		a.setBtgly(p.getBtgly());
		a.setStatus(p.getStatus());
		dao.update(a);
	}
	
	@Override
	public void edit1(VIPApplication p) throws Exception {
		VIPApplication a = dao.get(VIPApplication.class, p.getId());
		a.setStatus(p.getStatus());
		a.setBtgly(p.getBtgly());
		dao.update(a);
	}

	@Override
	public HSSFWorkbook export(List<VIPApplication> list) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public VIPApplication getGqbdz(String id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<VIPApplication> getList(String fl) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<VIPApplication> getCzdList() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void shenhe(VIPApplication t) throws Exception {
		String id = t.getId();
		VIPApplication tt = dao.get(VIPApplication.class, id);
		tt.setStatus(t.getStatus());

		if (t.getStatus().equals("1") && tt.getUsertype().equals("v")) {// vip审核通过
			String userid = tt.getUserid();
			LoginUser l = loginUserDaoI.get(LoginUser.class, userid);
			/*l.setUsertype(tt.getUsertype());// 将身份改为VIP
			loginUserDaoI.update(l);*/
		

			/*Tgwdsz tttt = new Tgwdsz();
			tttt.setJf("0");
			tttt.setSl("99999");
			tttt.setTgid(userid);
			tttt.setId(UUID.randomUUID().toString());
			tgwdszDaoI.save(tttt);*/

			String title01 = "VIP申请审核信息";
			String content01 = l.getNickname() + ":您申请VIP审核已通过，请重新登录获取新的权限'";
//			List<String> alias = new ArrayList<String>();
//			alias.add(userid.replace("-", ""));
			List<String> rig = new ArrayList<String>();
			rig.add(l.getRegistrationId());
			JPushChatModel jpModel = new JPushChatModel();
			jpModel.setType("8"); // 申请VIP审核成功
			jpModel.setTitle(title01);// 推送题目
			jpModel.setContent(content01);// 推送内容
			jpModel.setDataId(userid);
//			jppApiClient.jPush(alias, jpModel);
			jppApiClient.jPush_rigstId(rig, jpModel);
		}else  if (t.getStatus().equals("1") && tt.getUsertype().equals("n")){
			String userid = tt.getUserid();
			LoginUser l = loginUserDaoI.get(LoginUser.class, userid);
			/*l.setUsertype(tt.getUsertype());// 将身份改为VIP
			loginUserDaoI.update(l);*/

			/*Tgwdsz tttt = new Tgwdsz();
			tttt.setJf("0");
			tttt.setSl("99999");
			tttt.setTgid(userid);
			tttt.setId(UUID.randomUUID().toString());
			tgwdszDaoI.save(tttt);*/
			String title01 = "牛人申请审核信息";
			String content01 = l.getNickname() + ":您申请牛人审核已通过，请重新登录获取新的权限'";
//			List<String> alias = new ArrayList<String>();
//			alias.add(userid.replace("-", ""));
			List<String> rig = new ArrayList<String>();
			rig.add(l.getRegistrationId());
			JPushChatModel jpModel = new JPushChatModel();
			jpModel.setType("9"); // 申请牛人审核成功
			jpModel.setTitle(title01);// 推送题目
			jpModel.setContent(content01);// 推送内容
			jpModel.setDataId(userid);
//			jppApiClient.jPush(alias, jpModel);
			jppApiClient.jPush_rigstId(rig, jpModel);
		}
		dao.update(tt);
		
	}

	@Override
	public List<VIPApplication> getuserVIP(String userid, String usertype) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("userid", userid);
		params.put("usertype", usertype);
		List<VIPApplication> t = dao.find(
				" from VIPApplication t  where t.status <> '2' and  t.userid = :userid and t.usertype= :usertype",
				params);
		
		return t;
	}

	

	

	

}
