package com.admin.controller;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.List;
import java.util.UUID;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.admin.model.Ad;
import com.admin.model.Log;
import com.admin.model.LoginUser;
import com.admin.model.Tgsq;
import com.admin.model.Tgxt;
import com.admin.pageModel.DataGrid;

import com.admin.pageModel.Json;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.SessionInfo;
import com.admin.pageModel.User;
import com.admin.service.AdServiceI;
import com.admin.service.LogServiceI;
import com.admin.service.LoginUserServiceI;
import com.admin.service.TzgwServiceI;
import com.admin.service.UserServiceI;
import com.admin.util.ConfigUtil;
import com.admin.util.InfoUtil;
import com.web.util.TimeUtils;

/**
 * 
 * 投资顾问信息-申请-审核
 * 
 * @author
 * 
 */
@Controller
@RequestMapping("/tzgwController")
public class TgsqController extends BaseController {

	@Autowired
	private TzgwServiceI service;

	@Autowired
	private LogServiceI logService;

	/**
	 * 获取数据表格
	 * 
	 * @param t
	 * @return
	 * @throws IOException
	 */
	@RequestMapping("/dataGrid")
	@ResponseBody
	public DataGrid dataGrid(Tgsq t, PageHelper ph,
			HttpServletResponse response, HttpServletRequest request)
			throws IOException {
		response.setCharacterEncoding("utf-8");
		DataGrid d = service.dataGrid(t, ph);
		return d;
	}

	/**
	 * 跳转到列表页面
	 * 
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/tg")
	public String ad(HttpServletRequest request) throws Exception {

		return "/admin/tgsq/tg";
	}

	/**
	 * 详情跳转
	 * 
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/xq")
	public String xq(HttpServletRequest request, String id) throws Exception {
		Tgsq t = service.get(id);
		request.setAttribute("t", t);
		return "/admin/tgsq/tgEdit";
	}

	/**
	 * 审核不通过跳转
	 * 
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/btg")
	public String btg(HttpServletRequest request, String id) throws Exception {
		Tgsq t = service.get(id);
		request.setAttribute("t", t);
		return "/admin/tgsq/tgShbtg";
	}

	/**
	 * 修改
	 * 
	 * @return
	 */
	@RequestMapping("/update")
	@ResponseBody
	public Json update(Tgsq t, HttpServletRequest request, HttpSession session) {
		Json j = new Json();
		try {
			String sta = t.getStatus();
			service.update(t);

			j.setSuccess(true);
			j.setMsg("添加成功！");
			j.setObj(t);

			Log log = new Log();
			log.setType("update");// 操作描述
			log.setAuthor(InfoUtil.getUser(session));// 操作员
			log.setIp(InfoUtil.getIpAddr(request));// ip
			log.setTteble("t_tgsq");// 操作的表
			log.setTid(t.getId());// 操作的ID
			log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
			logService.add(log);

		} catch (Exception e) {
			j.setMsg(e.getMessage());
		}
		return j;
	}

	@RequestMapping("/update1")
	@ResponseBody
	public Json update1(Tgsq t, HttpServletRequest request, HttpSession session) {
		Json j = new Json();
		try {

			String edit = request.getParameter("edit");
			if (StringUtils.isNotBlank(edit)) {
				service.update(t);
				j.setSuccess(true);
				j.setMsg("修改成功！");
				j.setObj(t);
			} else {
				service.update1(t);
				j.setSuccess(true);
				j.setMsg("审核成功！");
				j.setObj(t);

				Log log = new Log();
				log.setType("update");// 操作描述
				log.setAuthor(InfoUtil.getUser(session));// 操作员
				log.setIp(InfoUtil.getIpAddr(request));// ip
				log.setTteble("t_tgsq");// 操作的表
				log.setTid(t.getId());// 操作的ID
				log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
				logService.add(log);
			}

		} catch (Exception e) {
			j.setMsg(e.getMessage());
		}
		return j;
	}

	@RequestMapping("/zbsz")
	@ResponseBody
	public Json zbsz(String id, String zbsz, HttpServletRequest request,
			HttpSession session) {
		Json j = new Json();
		try {
			service.zbsz(id, zbsz);
			j.setSuccess(true);
			j.setMsg("设置成功！");

		} catch (Exception e) {
			j.setMsg(e.getMessage());
		}
		return j;
	}

	/**
	 * 审核
	 * 
	 * @return
	 */
	@RequestMapping("/shenhe")
	@ResponseBody
	public Json shenhe(String id, String type, HttpServletRequest request,
			HttpSession session) {
		Json j = new Json();
		try {
			Tgsq t = new Tgsq();
			t.setId(id);
			t.setStatus(type);
			service.shenhe(t);

			j.setSuccess(true);
			j.setMsg("审核成功！");

			Log log = new Log();
			log.setType("shnehe");// 操作描述
			log.setAuthor(InfoUtil.getUser(session));// 操作员
			log.setIp(InfoUtil.getIpAddr(request));// ip
			log.setTteble("t_tgsq");// 操作的表
			log.setTid(id);// 操作的ID
			log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));// 修改时间
			logService.add(log);

		} catch (Exception e) {
			j.setMsg(e.getMessage());
		}
		return j;
	}

	/**
	 * 批量审核
	 * 
	 * @param ids
	 *            ('0','1','2')
	 * @return
	 */
	@RequestMapping("/plsh")
	@ResponseBody
	public Json batchDelete(String ids, String type, HttpSession session,
			HttpServletRequest request) {
		Json j = new Json();
		if (ids != null && ids.length() > 0) {
			for (String id : ids.split(",")) {
				if (id != null) {
					this.shenhe(id, type, request, session);
				}
			}
		}
		j.setMsg("批量审核成功！");
		j.setSuccess(true);
		return j;
	}

	/**
	 * 导出数据为excel
	 * 
	 * @param request
	 * @param response
	 * @throws Exception
	 */
	@RequestMapping(value = "/export")
	public void exportExcel(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		List<Tgsq> list = service.getAllTgList();
		HSSFWorkbook wb = service.export(list);
		response.setContentType("application/vnd.ms-excel");
		String filename = "tglist" + TimeUtils.getNow14() + ".xls";
		response.setHeader("Content-disposition", "attachment;filename="
				+ filename);
		OutputStream ouputStream = response.getOutputStream();
		wb.write(ouputStream);
		ouputStream.flush();
		ouputStream.close();

	}
}
