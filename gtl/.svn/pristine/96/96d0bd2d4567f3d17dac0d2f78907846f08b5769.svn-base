package com.admin.controller;

import java.io.OutputStream;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import jxl.write.WritableWorkbook;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.admin.model.Jfxhjl;
import com.admin.model.IntegralConfig;
import com.admin.model.Log;
import com.admin.model.Tgxt;
import com.admin.model.Jfxhjl;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.Json;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.SessionInfo;
import com.admin.service.JfxhjlfServiceI;
import com.admin.service.IntegralConfigServiceI;
import com.admin.service.LogServiceI;
import com.admin.service.XwxServiceI;
import com.admin.util.ConfigUtil;
import com.admin.util.InfoUtil;
import com.web.util.TimeUtils;

/**
 * 用户控制器
 * 
 * @author
 * 
 */
@Controller
@RequestMapping("/jfxhjl")
public class JfxhjlController extends BaseController {

	@Autowired
	private JfxhjlfServiceI jfxhjlService;
	@Autowired
	private LogServiceI logService;

	WritableWorkbook book = null;

	/**
	 * 跳转到页面
	 * 
	 * @return
	 */
	@RequestMapping("/index")
	public String manager() {
		// 每天的date时刻执行task, 仅执行一次
		// timer.schedule(task, date);
		return "/page/index";

	}

	/**
	 * 跳转到列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/jfxhjl")
	public String Jfxhjl(HttpServletRequest request,
			HttpServletResponse response, ModelMap modelMap) throws Exception {

		return "/admin/jfxhjl/jfxhjl";
	}

	/**
	 * 获取个股新闻数据表格
	 * 
	 * @param user
	 * @return
	 */
	@RequestMapping("/dataGrid")
	@ResponseBody
	public DataGrid dataGrid(Jfxhjl g, PageHelper ph) {

		return jfxhjlService.dataGridForOne(g, ph);
	}

	/**
	 * 删除用户
	 * 
	 * @param id
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public Json delete(String id, HttpSession session,
			HttpServletRequest request) throws Exception {
		SessionInfo sessionInfo = (SessionInfo) session.getAttribute(ConfigUtil
				.getSessionInfoName());
		Json j = new Json();
		
		  if (id != null && !id.equalsIgnoreCase(sessionInfo.getId())) {//不能删除自己 
			  
			  jfxhjlService.delete(id);
			  
		  } 
		  j.setMsg("删除成功！");
		  
		  Log log=new Log(); log.setType("delete");//操作描述
		  log.setAuthor(InfoUtil.getUser(session));//操作员
		  log.setIp(InfoUtil.getIpAddr(request));//ip
		  log.setTteble("t_jf_xhjl");//操作的表 log.setTid(id);//操作的ID
		  log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));//修改时间
		  logService.add(log);
		  
		  j.setSuccess(true);
		 
		return j;
	}

	/**
	 * 跳转到添加用户页面
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/addJfxhjlPage")
	public String addJfxhjlPage(HttpServletRequest request) {
		return "/admin/Jfxhjl/addJfxhjlPage";

	}

	/**
	 * 添加
	 * 
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public Json add(Jfxhjl p, HttpServletRequest request, HttpSession session) {
		Json j = new Json();
		/*
		 * try { JfxhjlService.add(p); j.setSuccess(true); j.setMsg("添加成功！");
		 * j.setObj(p);
		 * 
		 * Log log=new Log(); log.setType("add");//操作描述
		 * log.setAuthor(InfoUtil.getUser(session));//操作员
		 * log.setIp(InfoUtil.getIpAddr(request));//ip
		 * log.setTteble("t_Jfxhjl");//操作的表 log.setTid(p.getId());//操作的ID
		 * log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));//修改时间
		 * logService.add(log);
		 * 
		 * } catch (Exception e) { // e.printStackTrace();
		 * j.setMsg(e.getMessage()); }
		 */
		return j;
	}

	/**
	 * 跳转到用户修改页面
	 * 
	 * @return
	 */
	@RequestMapping("/editJfxhjlPage")
	public String editJfxhjlPage(HttpServletRequest request, String id) {
		/*
		 * Jfxhjl u = JfxhjlService.get(id); request.setAttribute("Jfxhjl", u);
		 */
		return "/admin/Jfxhjl/editJfxhjlPage";// 页面还没写
	}

	/**
	 * 修改用户
	 * 
	 * @param user
	 * @return
	 */
	@RequestMapping("/edit")
	@ResponseBody
	public Json edit(Jfxhjl p, HttpServletRequest request, HttpSession session) {
		Json j = new Json();
		/*
		 * try { JfxhjlService.edit(p); j.setSuccess(true); j.setMsg("编辑成功！");
		 * j.setObj(p);
		 * 
		 * Log log=new Log(); log.setType("update");//操作描述
		 * log.setAuthor(InfoUtil.getUser(session));//操作员
		 * log.setIp(InfoUtil.getIpAddr(request));//ip
		 * log.setTteble("t_xwxgl");//操作的表 log.setTid(p.getId());//操作的ID
		 * log.setTime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));//修改时间
		 * logService.add(log); } catch (Exception e) { // e.printStackTrace();
		 * j.setMsg(e.getMessage()); }
		 */
		return j;
	}

	/**
	 * 批量删除记录
	 * 
	 * @param ids
	 *            ('0','1','2')
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/batchDelete")
	@ResponseBody
	public Json batchDelete(String ids, HttpSession session,
			HttpServletRequest request) throws Exception {
		Json j = new Json();
		if (ids != null && ids.length() > 0) {
			for (String id : ids.split(",")) {
				if (id != null) {
					this.delete(id, session, request);
				}
			}
		}
		j.setMsg("批量删除成功！");
		j.setSuccess(true);
		return j;
	}

}
