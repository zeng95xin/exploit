package com.admin.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.SecuritiesCompanyDaoI;
import com.admin.model.SecuritiesCompany;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.service.SecuritiesCompanyServiceI;

@Service
public class SecuritiesCompanyServiceImpl implements SecuritiesCompanyServiceI {

	@Autowired
	private SecuritiesCompanyDaoI securitiesCompanyDao;

	@Override
	public DataGrid dataGrid(SecuritiesCompany securitiesCompany, PageHelper ph) {
		DataGrid dg = new DataGrid();
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from SecuritiesCompany t ";
		List<SecuritiesCompany> l = securitiesCompanyDao.find(
				hql + whereHql(securitiesCompany, params) + orderHql(ph),
				params, ph.getPage(), ph.getRows());
		dg.setRows(l);
		dg.setTotal(securitiesCompanyDao.count("select count(*) " + hql
				+ whereHql(securitiesCompany, params), params));
		return dg;
	}

	private String whereHql(SecuritiesCompany securitiesCompany,
			Map<String, Object> params) {
		String hql = "";
		if (securitiesCompany != null) {
			hql += " where 1=1 ";
			if (StringUtils.isNotBlank(securitiesCompany.getCompanyName())) {
				hql += " and t.companyName like :companyName";
				params.put("companyName",
						"%%" + securitiesCompany.getCompanyName() + "%%");
			}
			if (StringUtils.isNotBlank(securitiesCompany.getCompanyLogo())) {
				hql += " and t.companyLogo = :companyLogo";
				params.put("companyLogo", securitiesCompany.getCompanyLogo());
			}
			if (StringUtils.isNotBlank(securitiesCompany.getCompanyProfile())) {
				hql += " and t.companyProfile like :companyProfile";
				params.put("companyProfile",
						"%%" + securitiesCompany.getCompanyProfile() + "%%");
			}
		}
		return hql;
	}

	private String orderHql(PageHelper ph) {
		String orderString = "";
		if (ph.getSort() != null && ph.getOrder() != null) {
			orderString = " order by t." + ph.getSort() + " " + ph.getOrder();
		}
		return orderString;
	}

	@Override
	public void add(SecuritiesCompany securitiesCompany) throws Exception {
		SecuritiesCompany u = new SecuritiesCompany();
		BeanUtils.copyProperties(securitiesCompany, u);
		if (StringUtils.isNotBlank(securitiesCompany.getId())) {
			securitiesCompanyDao.update(securitiesCompany);
		} else {
			u.setId(UUID.randomUUID().toString());
			securitiesCompanyDao.save(securitiesCompany);
		}
	}

	@Override
	public SecuritiesCompany get(String id) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("id", id);
		SecuritiesCompany t = securitiesCompanyDao.get(
				"select distinct t from SecuritiesCompany t where t.id = :id",
				params);
		return t;
	}

	@Override
	public void edit(SecuritiesCompany securitiesCompany) throws Exception {
		// 得到图片路径
		// if(StringUtils.isNotBlank(securitiesCompany.getCompanyLogo())){
		// Integer a =
		// securitiesCompany.getCompanyLogo().indexOf("&lt;img src=&quot;");
		// Integer b =
		// securitiesCompany.getCompanyLogo().indexOf("&quot; alt=&quot;&quot; /&gt");
		// if(a!=null&&a!=-1&&b!=null&&b!=-1){
		// String xx=securitiesCompany.getCompanyLogo().substring(a,
		// b).replace("&lt;img src=&quot;", "");
		// securitiesCompany.setCompanyLogo(xx);
		// }else {
		// securitiesCompany.setCompanyLogo("");
		// }
		// }
		securitiesCompanyDao.update(securitiesCompany);
	}

	@Override
	public void delete(String id) {
		securitiesCompanyDao.delete(securitiesCompanyDao.get(
				SecuritiesCompany.class, id));
	}

	@Override
	public List<SecuritiesCompany> securitiesCompanyList() {
		List<SecuritiesCompany> t = securitiesCompanyDao
				.find("from SecuritiesCompany t ");
		return t;
	}

	@Override
	public SecuritiesCompany getByLoginName(String loginname) {
		String hql = "from SecuritiesCompany where COMPANYNAME='" + loginname
				+ "'";
		List<SecuritiesCompany> list = securitiesCompanyDao.find(hql);
		SecuritiesCompany sc = new SecuritiesCompany();
		if (list.size() > 0) {
			sc = list.get(0);
		}
		return sc;
	}

}
