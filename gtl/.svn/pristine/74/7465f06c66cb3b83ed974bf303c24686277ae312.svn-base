package com.admin.service.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.UUID;

import org.apache.commons.lang3.StringUtils;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.admin.dao.CpApplicationDaoI;
import com.admin.dao.CzdDaoI;
import com.admin.dao.GqbdzDaoI;
import com.admin.dao.RoleDaoI;
import com.admin.dao.UserDaoI;
import com.admin.dao.UserJbxfInfoDaoI;
import com.admin.dao.VIPApplicationDaoI;
import com.admin.dao.WebDaoI;
import com.admin.model.Ggxw;
import com.admin.model.TcpApplication;
import com.admin.model.UserJbxfInfo;
import com.admin.model.Tgsdz;
import com.admin.model.Tgxt;
import com.admin.model.Tresource;
import com.admin.model.Trole;
import com.admin.model.Tuser;
import com.admin.model.VIPApplication;
import com.admin.pageModel.DataGrid;
import com.admin.pageModel.PageHelper;
import com.admin.pageModel.SessionInfo;
import com.admin.pageModel.User;
import com.admin.service.CpApplicationServiceI;
import com.admin.service.CzdServiceI;
import com.admin.service.GqbServiceI;
import com.admin.service.GxtServiceI;
import com.admin.service.UserJbxfInfoServiceI;
import com.admin.service.UserServiceI;
import com.admin.service.VIPApplicationServiceI;
import com.admin.service.WebServiceI;
import com.admin.util.MD5Util;
import com.web.entity.Person;
import com.web.util.PageModel;
import com.web.util.TimeUtils;

@Service
public class UserJbxfInfoServiceImpl implements UserJbxfInfoServiceI {

	@Autowired
	private UserJbxfInfoDaoI dao;

	@Override
	public DataGrid dataGridForOne(UserJbxfInfo g, PageHelper ph) {
		DataGrid dg = new DataGrid();
		List<UserJbxfInfo> ul = new ArrayList<UserJbxfInfo>();
		Map<String, Object> params = new HashMap<String, Object>();
		String hql = " from UserJbxfInfo t ";
		List<UserJbxfInfo> l = dao.find(hql + whereHqlForOne(g, params)
				+ orderHql(ph), params, ph.getPage(), ph.getRows());
		if (l != null && l.size() > 0) {
			for (UserJbxfInfo t : l) {
				UserJbxfInfo u = new UserJbxfInfo();
				BeanUtils.copyProperties(t, u);
				ul.add(u);
			}
		}
		dg.setRows(ul);
		dg.setTotal(dao.count(
				"select count(*) " + hql + whereHqlForOne(g, params), params));
		return dg;
	}

	/**
	 * where 条件封装
	 * 
	 * @param p
	 * @param params
	 * @return
	 */
	private String whereHqlForOne(UserJbxfInfo g, Map<String, Object> params) {
		String hql = "";
		/*
		 * if (g != null) { hql += " where 1=1 "; if (g.getUsername() != null) {
		 * hql += " and t.username like :username"; params.put("username", "%%"
		 * + g.getUsername() + "%%"); } }
		 */
		return hql;
	}

	/**
	 * 排序条件
	 * 
	 * @param ph
	 * @return
	 */
	private String orderHql(PageHelper ph) {
		String orderString = "";
		if (ph.getSort() != null && ph.getOrder() != null) {
			orderString = " order by t." + ph.getSort() + " " + ph.getOrder();
		}
		return orderString;
	}

	@Override
	public void delete(String id) {
		dao.delete(dao.get(UserJbxfInfo.class, id));
	}

	@Override
	synchronized public void add(UserJbxfInfo p) throws Exception {
		/*
		 * Map<String, Object> params = new HashMap<String, Object>();
		 * params.put("gxttitel", p.getGxttitel());
		 */

		UserJbxfInfo u = new UserJbxfInfo();
		BeanUtils.copyProperties(p, u);

		u.setId(UUID.randomUUID().toString());
		u.setAddtime(TimeUtils.getTime("yyyy-MM-dd HH:mm:ss"));
		dao.save(u);

	}

	/**
	 * 通过id获取段子实体类
	 */
	@Override
	public UserJbxfInfo get(String id) {
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("id", id);
		UserJbxfInfo t = dao.get(
				"select distinct t from UserJbxfInfo t  where t.id = :id",
				params);
		UserJbxfInfo u = new UserJbxfInfo();
		BeanUtils.copyProperties(t, u);
		return u;
	}

	String[] excelHeader = { "标题", "分类", "发布者", "发布时间" };

	@Override
	public void edit(UserJbxfInfo p) throws Exception {
		dao.update(p);
	}

	@Override
	public HSSFWorkbook export(List<UserJbxfInfo> list) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<UserJbxfInfo> getList() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<UserJbxfInfo> getList(String userid, String page, String rows) {
		// StringBuffer sff = new StringBuffer();
		if (StringUtils.isBlank(page)) {
			page = "1";
		}
		if (StringUtils.isBlank(rows)) {
			rows = "10";
		}
		/*
		 * sff.append("select a from ").append(UserJbxfInfo.class.getSimpleName()
		 * ).append(" a "); sff.append(" where 1=1 ");
		 * if(StringUtils.isNotBlank(userid)){
		 * sff.append(" and userid = '"+userid+"'"); }
		 */
		// sff.append(" order by xztime desc");
		String hql = " from UserJbxfInfo where 1=1";
		if (StringUtils.isNotBlank(userid)) {
			hql += " and userid = '" + userid + "'";
		}
		hql += " order by xztime desc";
		List<UserJbxfInfo> list = dao.find(hql, Integer.valueOf(page),
				Integer.valueOf(rows));

		return list;
	}

}
