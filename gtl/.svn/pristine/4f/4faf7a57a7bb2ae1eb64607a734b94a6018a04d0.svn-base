package com.web.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.admin.pageModel.DataGrid;
import com.admin.pageModel.Json;
import com.admin.pageModel.PageHelper;
import com.admin.service.HostMainService;
import com.admin.service.LogServiceI;
import com.admin.service.SeniorHostManageService;
import com.web.entity.SeniorHostManage;
import com.web.entity.HostMain;
import com.web.exception.BusinessDealException;
import com.web.exception.BusinessValidateException;
import com.web.exception.CodeEnum;
import com.web.exception.PatternException;
import com.web.result.BaseListResult;

@Controller
@RequestMapping("/seniorHost")
public class SeniorHostManageController {
	
	private static final Logger logger = LoggerFactory.getLogger(SeniorHostManageController.class);
	
	@Autowired
	private SeniorHostManageService seniorHostManageService;
	
	@Autowired
	private LogServiceI logService;
	
	@Autowired
	private HostMainService hostMainService;
	
	/**
	 * 资深主播管理
	 * @return
	 */
	@RequestMapping("/manager")
	public String manager() {
		return "/admin/host/seniorHostManagement";
	}
	
	/**
	 * 获取主播列表
	 * 
	 * @param p
	 * @param ph
	 * @return
	 */
	@RequestMapping("/dataGrid")
	@ResponseBody
	public DataGrid dataGrid(SeniorHostManage p, PageHelper ph) {
		return seniorHostManageService.dataGrid(p, ph);

	}
	
	/**
	 * 跳转到主播添加页面
	 * 
	 * @param request
	 * @return
	 */
	@RequestMapping("/addPage")
	public String addPage(HttpServletRequest request) {
		SeniorHostManage ppr=new SeniorHostManage();
		ppr.setSeniorHostManageID(UUID.randomUUID().toString());
		
		List<HostMain> lhm=hostMainService.getAllList();
		
		request.setAttribute("SeniorHostManage", ppr);
		request.setAttribute("lhm", lhm);
		return "/admin/host/SeniorHostManageAdd";
	}

	/**
	 * 添加资深主播
	 * 
	 * @param partner
	 * @return
	 */
	@RequestMapping("/add")
	@ResponseBody
	public Json add(SeniorHostManage gy) {
		Json j = new Json();
		HostMain hm=new HostMain();
		try {
			hm=hostMainService.get(gy.getSeniorHostID());
			if (hm!= null) {
				if (StringUtils.isNotBlank(hm.getHostHomeName())) {
					
					gy.setSeniorHostName(hm.getHostHomeName());
				}
				if (StringUtils.isNotBlank(hm.getHostNickname())) {
					
					gy.setSeniorHostNickname(hm.getHostNickname());
				}
				if (StringUtils.isNotBlank(hm.getHomeLable())) {
					
					gy.setHomeLable(hm.getHomeLable());
				}
				gy.setLookNum(hm.getLookNum());
				gy.setHostCare(hm.getHostCare());
				gy.setHsotAsk(hm.getHsotAsk());
				
			}
			seniorHostManageService.add(gy);
		} catch (Exception e) {
			e.printStackTrace();
		}
		j.setSuccess(true);
		j.setMsg("添加成功！");
		return j;
	}

	
	/**
	 * 删除资深主播
	 * 
	 * @param id
	 * @return
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public Json delete(String id) {
		Json j = new Json();
		try {
			seniorHostManageService.delete(id);
		} catch (Exception e) {
			e.printStackTrace();
		}
		j.setMsg("删除成功！");
		j.setSuccess(true);
		return j;
	}

	/**
	 * 批量删除
	 * 
	 * @param ids
	 * @param session
	 * @return
	 */
	@RequestMapping("/batchDelete")
	@ResponseBody
	public Json batchDelete(String ids, HttpSession session) {
		Json j = new Json();
		if (ids != null && ids.length() > 0) {
			for (String id : ids.split(",")) {
				if (id != null) {
					this.delete(id);
				}
			}
		}
		j.setMsg("批量删除成功！");
		j.setSuccess(true);
		return j;
	}
	
	/**
	 * 根据级别分页获取对应的主播
	 * @param req
	 * @param res
	 * @param name 资深主播或者独家主播
	 * @param row 未传值默认四条
	 * @param page 未传值默认第一页
	 * @return
	 */
	@RequestMapping(value = "/allByName", method ={RequestMethod.GET , RequestMethod.POST}, produces = { MediaType.APPLICATION_JSON_VALUE })
	@ResponseBody
	public BaseListResult<SeniorHostManage> getAllType(HttpServletRequest req,HttpServletResponse res,String name,String row,String page) {

		logger.info("根据级别获取主播: {}",name);
		res.setCharacterEncoding("UTF-8");
		BaseListResult<SeniorHostManage> baseResult = new BaseListResult<SeniorHostManage>();
		List<SeniorHostManage> listType=new ArrayList<SeniorHostManage>();
		try {
			req.setCharacterEncoding("UTF-8");
			if (StringUtils.isBlank(name)) {
				throw new PatternException("主播级别不能为空");
			}
			listType=seniorHostManageService.getByName(name, row, page);
			//if (listType!=null && listType.size()>0) {
				baseResult.setErrorCode("0");
				baseResult.setErrorMessage("查询成功");
				baseResult.setResult(listType);
			/*} else {
				baseResult.setErrorCode("0");
				baseResult.setErrorMessage("未找到次级别主播");
			}*/
			
		} catch (PatternException e) {
			//System.out.println("参数校验失败," + e.getMessage());
			baseResult = new BaseListResult<SeniorHostManage>(
					CodeEnum.PATTERN_ERROR.getCode(), e.getMessage());
		} catch (BusinessDealException e) {
			//System.out.println("业务处理异常， 错误信息：" + e.getMessage());
			baseResult = new BaseListResult<SeniorHostManage>(
					CodeEnum.BUSSINESS_HANDLE_ERROR.getCode(), e.getMessage());
		} catch (BusinessValidateException e) {
			//System.out.println("业务验证异常， 错误信息：" + e.getMessage());
			baseResult = new BaseListResult<SeniorHostManage>(
					CodeEnum.BUSSINESS_VALIDATE_ERROR.getCode(), e.getMessage());
		} catch (Exception e) {
			e.printStackTrace();
			//System.out.println("系统异常，" + e.getMessage());
			baseResult = new BaseListResult<SeniorHostManage>(
					CodeEnum.SYSTEM_ERROR.getCode(), "系统异常");
		}
		return baseResult;
		
	}

}
